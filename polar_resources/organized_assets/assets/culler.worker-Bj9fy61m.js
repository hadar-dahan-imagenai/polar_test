var iF=Object.defineProperty;var u=(n,e)=>iF(n,"name",{value:e,configurable:!0});(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new n.Error().stack;e&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[e]="d057f0a3-f03f-429e-802c-1a2d384c7514",n._sentryDebugIdIdentifier="sentry-dbid-d057f0a3-f03f-429e-802c-1a2d384c7514")}catch{}})();function aF(n,e){return e.forEach(function(t){t&&typeof t!="string"&&!Array.isArray(t)&&Object.keys(t).forEach(function(s){if(s!=="default"&&!(s in n)){var r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return t[s]}})}})}),Object.freeze(n)}u(aF,"_mergeNamespaces");/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const hk=Symbol("Comlink.proxy"),cF=Symbol("Comlink.endpoint"),uF=Symbol("Comlink.releaseProxy"),Ay=Symbol("Comlink.finalizer"),Ip=Symbol("Comlink.thrown"),pk=u(n=>typeof n=="object"&&n!==null||typeof n=="function","isObject$1"),lF={canHandle:n=>pk(n)&&n[hk],serialize(n){const{port1:e,port2:t}=new MessageChannel;return i0(n,e),[t,[t]]},deserialize(n){return n.start(),gk(n)}},dF={canHandle:n=>pk(n)&&Ip in n,serialize({value:n}){let e;return n instanceof Error?e={isError:!0,value:{message:n.message,name:n.name,stack:n.stack}}:e={isError:!1,value:n},[e,[]]},deserialize(n){throw n.isError?Object.assign(new Error(n.value.message),n.value):n.value}},fk=new Map([["proxy",lF],["throw",dF]]);function hF(n,e){for(const t of n)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}u(hF,"isAllowedOrigin");function i0(n,e=globalThis,t=["*"]){e.addEventListener("message",u(function s(r){if(!r||!r.data)return;if(!hF(t,r.origin)){`${r.origin}`;return}const{id:o,type:i,path:a}=Object.assign({path:[]},r.data),c=(r.data.argumentList||[]).map(Ni);let l;try{const d=a.slice(0,-1).reduce((p,f)=>p[f],n),h=a.reduce((p,f)=>p[f],n);switch(i){case"GET":l=h;break;case"SET":d[a.slice(-1)[0]]=Ni(r.data.value),l=!0;break;case"APPLY":l=h.apply(d,c);break;case"CONSTRUCT":{const p=new h(...c);l=yF(p)}break;case"ENDPOINT":{const{port1:p,port2:f}=new MessageChannel;i0(n,f),l=Ua(p,[p])}break;case"RELEASE":l=void 0;break;default:return}}catch(d){l={value:d,[Ip]:0}}Promise.resolve(l).catch(d=>({value:d,[Ip]:0})).then(d=>{const[h,p]=Hp(d);e.postMessage(Object.assign(Object.assign({},h),{id:o}),p),i==="RELEASE"&&(e.removeEventListener("message",s),mk(e),Ay in n&&typeof n[Ay]=="function"&&n[Ay]())}).catch(d=>{const[h,p]=Hp({value:new TypeError("Unserializable return value"),[Ip]:0});e.postMessage(Object.assign(Object.assign({},h),{id:o}),p)})},"callback")),e.start&&e.start()}u(i0,"expose");function pF(n){return n.constructor.name==="MessagePort"}u(pF,"isMessagePort");function mk(n){pF(n)&&n.close()}u(mk,"closeEndPoint");function gk(n,e){const t=new Map;return n.addEventListener("message",u(function(r){const{data:o}=r;if(!o||!o.id)return;const i=t.get(o.id);if(i)try{i(o)}finally{t.delete(o.id)}},"handleMessage")),xb(n,t,[],e)}u(gk,"wrap$1");function Hh(n){if(n)throw new Error("Proxy has been released and is not useable")}u(Hh,"throwIfProxyReleased");function yk(n){return Ga(n,new Map,{type:"RELEASE"}).then(()=>{mk(n)})}u(yk,"releaseEndpoint");const Up=new WeakMap,Gp="FinalizationRegistry"in globalThis&&new FinalizationRegistry(n=>{const e=(Up.get(n)||0)-1;Up.set(n,e),e===0&&yk(n)});function fF(n,e){const t=(Up.get(e)||0)+1;Up.set(e,t),Gp&&Gp.register(n,e,n)}u(fF,"registerProxy");function mF(n){Gp&&Gp.unregister(n)}u(mF,"unregisterProxy");function xb(n,e,t=[],s=function(){}){let r=!1;const o=new Proxy(s,{get(i,a){if(Hh(r),a===uF)return()=>{mF(o),yk(n),e.clear(),r=!0};if(a==="then"){if(t.length===0)return{then:()=>o};const c=Ga(n,e,{type:"GET",path:t.map(l=>l.toString())}).then(Ni);return c.then.bind(c)}return xb(n,e,[...t,a])},set(i,a,c){Hh(r);const[l,d]=Hp(c);return Ga(n,e,{type:"SET",path:[...t,a].map(h=>h.toString()),value:l},d).then(Ni)},apply(i,a,c){Hh(r);const l=t[t.length-1];if(l===cF)return Ga(n,e,{type:"ENDPOINT"}).then(Ni);if(l==="bind")return xb(n,e,t.slice(0,-1));const[d,h]=f1(c);return Ga(n,e,{type:"APPLY",path:t.map(p=>p.toString()),argumentList:d},h).then(Ni)},construct(i,a){Hh(r);const[c,l]=f1(a);return Ga(n,e,{type:"CONSTRUCT",path:t.map(d=>d.toString()),argumentList:c},l).then(Ni)}});return fF(o,n),o}u(xb,"createProxy");function gF(n){return Array.prototype.concat.apply([],n)}u(gF,"myFlat");function f1(n){const e=n.map(Hp);return[e.map(t=>t[0]),gF(e.map(t=>t[1]))]}u(f1,"processArguments");const bk=new WeakMap;function Ua(n,e){return bk.set(n,e),n}u(Ua,"transfer");function yF(n){return Object.assign(n,{[hk]:!0})}u(yF,"proxy");function Hp(n){for(const[e,t]of fk)if(t.canHandle(n)){const[s,r]=t.serialize(n);return[{type:"HANDLER",name:e,value:s},r]}return[{type:"RAW",value:n},bk.get(n)||[]]}u(Hp,"toWireValue");function Ni(n){switch(n.type){case"HANDLER":return fk.get(n.name).deserialize(n.value);case"RAW":return n.value}}u(Ni,"fromWireValue");function Ga(n,e,t,s){return new Promise(r=>{const o=bF();e.set(o,r),n.start&&n.start(),n.postMessage(Object.assign({id:o},t),s)})}u(Ga,"requestResponseMessage");function bF(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}u(bF,"generateUUID");var xF=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};xF.SENTRY_RELEASE={id:"2.2.12+7b192bf"};function wF(){return typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{}}u(wF,"getGlobalObject");function SF(n){const e=wF();try{e._sentryDebugIds=e._sentryDebugIds||{};for(const t in n)e._sentryDebugIds[t]=n[t];return JSON.stringify(e._sentryDebugIds)}catch{}}u(SF,"registerSentryDebugIds");function xk(n,e){return u(function(){return n.apply(e,arguments)},"wrap")}u(xk,"bind");const{toString:CF}=Object.prototype,{getPrototypeOf:a0}=Object,Kf=(n=>e=>{const t=CF.call(e);return n[t]||(n[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),qr=u(n=>(n=n.toLowerCase(),e=>Kf(e)===n),"kindOfTest"),Xf=u(n=>e=>typeof e===n,"typeOfTest"),{isArray:Dc}=Array,Tl=Xf("undefined");function vF(n){return n!==null&&!Tl(n)&&n.constructor!==null&&!Tl(n.constructor)&&Qs(n.constructor.isBuffer)&&n.constructor.isBuffer(n)}u(vF,"isBuffer");const wk=qr("ArrayBuffer");function IF(n){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(n):e=n&&n.buffer&&wk(n.buffer),e}u(IF,"isArrayBufferView");const kF=Xf("string"),Qs=Xf("function"),Sk=Xf("number"),Yf=u(n=>n!==null&&typeof n=="object","isObject"),$F=u(n=>n===!0||n===!1,"isBoolean$1"),kp=u(n=>{if(Kf(n)!=="object")return!1;const e=a0(n);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in n)&&!(Symbol.iterator in n)},"isPlainObject$2"),NF=qr("Date"),TF=qr("File"),EF=qr("Blob"),_F=qr("FileList"),RF=u(n=>Yf(n)&&Qs(n.pipe),"isStream"),AF=u(n=>{let e;return n&&(typeof FormData=="function"&&n instanceof FormData||Qs(n.append)&&((e=Kf(n))==="formdata"||e==="object"&&Qs(n.toString)&&n.toString()==="[object FormData]"))},"isFormData"),DF=qr("URLSearchParams"),OF=u(n=>n.trim?n.trim():n.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),"trim");function sd(n,e,{allOwnKeys:t=!1}={}){if(n===null||typeof n>"u")return;let s,r;if(typeof n!="object"&&(n=[n]),Dc(n))for(s=0,r=n.length;s<r;s++)e.call(null,n[s],s,n);else{const o=t?Object.getOwnPropertyNames(n):Object.keys(n),i=o.length;let a;for(s=0;s<i;s++)a=o[s],e.call(null,n[a],a,n)}}u(sd,"forEach");function Ck(n,e){e=e.toLowerCase();const t=Object.keys(n);let s=t.length,r;for(;s-- >0;)if(r=t[s],e===r.toLowerCase())return r;return null}u(Ck,"findKey");const vk=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Ik=u(n=>!Tl(n)&&n!==vk,"isContextDefined");function wb(){const{caseless:n}=Ik(this)&&this||{},e={},t=u((s,r)=>{const o=n&&Ck(e,r)||r;kp(e[o])&&kp(s)?e[o]=wb(e[o],s):kp(s)?e[o]=wb({},s):Dc(s)?e[o]=s.slice():e[o]=s},"assignValue");for(let s=0,r=arguments.length;s<r;s++)arguments[s]&&sd(arguments[s],t);return e}u(wb,"merge");const FF=u((n,e,t,{allOwnKeys:s}={})=>(sd(e,(r,o)=>{t&&Qs(r)?n[o]=xk(r,t):n[o]=r},{allOwnKeys:s}),n),"extend"),PF=u(n=>(n.charCodeAt(0)===65279&&(n=n.slice(1)),n),"stripBOM"),LF=u((n,e,t,s)=>{n.prototype=Object.create(e.prototype,s),n.prototype.constructor=n,Object.defineProperty(n,"super",{value:e.prototype}),t&&Object.assign(n.prototype,t)},"inherits"),MF=u((n,e,t,s)=>{let r,o,i;const a={};if(e=e||{},n==null)return e;do{for(r=Object.getOwnPropertyNames(n),o=r.length;o-- >0;)i=r[o],(!s||s(i,n,e))&&!a[i]&&(e[i]=n[i],a[i]=!0);n=t!==!1&&a0(n)}while(n&&(!t||t(n,e))&&n!==Object.prototype);return e},"toFlatObject"),zF=u((n,e,t)=>{n=String(n),(t===void 0||t>n.length)&&(t=n.length),t-=e.length;const s=n.indexOf(e,t);return s!==-1&&s===t},"endsWith"),BF=u(n=>{if(!n)return null;if(Dc(n))return n;let e=n.length;if(!Sk(e))return null;const t=new Array(e);for(;e-- >0;)t[e]=n[e];return t},"toArray"),WF=(n=>e=>n&&e instanceof n)(typeof Uint8Array<"u"&&a0(Uint8Array)),VF=u((n,e)=>{const s=(n&&n[Symbol.iterator]).call(n);let r;for(;(r=s.next())&&!r.done;){const o=r.value;e.call(n,o[0],o[1])}},"forEachEntry"),UF=u((n,e)=>{let t;const s=[];for(;(t=n.exec(e))!==null;)s.push(t);return s},"matchAll"),GF=qr("HTMLFormElement"),HF=u(n=>n.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,u(function(t,s,r){return s.toUpperCase()+r},"replacer")),"toCamelCase$1"),m1=(({hasOwnProperty:n})=>(e,t)=>n.call(e,t))(Object.prototype),jF=qr("RegExp"),kk=u((n,e)=>{const t=Object.getOwnPropertyDescriptors(n),s={};sd(t,(r,o)=>{let i;(i=e(r,o,n))!==!1&&(s[o]=i||r)}),Object.defineProperties(n,s)},"reduceDescriptors"),qF=u(n=>{kk(n,(e,t)=>{if(Qs(n)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;const s=n[t];if(Qs(s)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},"freezeMethods"),KF=u((n,e)=>{const t={},s=u(r=>{r.forEach(o=>{t[o]=!0})},"define");return Dc(n)?s(n):s(String(n).split(e)),t},"toObjectSet"),XF=u(()=>{},"noop$1"),YF=u((n,e)=>(n=+n,Number.isFinite(n)?n:e),"toFiniteNumber"),Dy="abcdefghijklmnopqrstuvwxyz",g1="0123456789",$k={DIGIT:g1,ALPHA:Dy,ALPHA_DIGIT:Dy+Dy.toUpperCase()+g1},QF=u((n=16,e=$k.ALPHA_DIGIT)=>{let t="";const{length:s}=e;for(;n--;)t+=e[Math.random()*s|0];return t},"generateString");function JF(n){return!!(n&&Qs(n.append)&&n[Symbol.toStringTag]==="FormData"&&n[Symbol.iterator])}u(JF,"isSpecCompliantForm");const ZF=u(n=>{const e=new Array(10),t=u((s,r)=>{if(Yf(s)){if(e.indexOf(s)>=0)return;if(!("toJSON"in s)){e[r]=s;const o=Dc(s)?[]:{};return sd(s,(i,a)=>{const c=t(i,r+1);!Tl(c)&&(o[a]=c)}),e[r]=void 0,o}}return s},"visit");return t(n,0)},"toJSONObject"),eP=qr("AsyncFunction"),tP=u(n=>n&&(Yf(n)||Qs(n))&&Qs(n.then)&&Qs(n.catch),"isThenable$1");var J={isArray:Dc,isArrayBuffer:wk,isBuffer:vF,isFormData:AF,isArrayBufferView:IF,isString:kF,isNumber:Sk,isBoolean:$F,isObject:Yf,isPlainObject:kp,isUndefined:Tl,isDate:NF,isFile:TF,isBlob:EF,isRegExp:jF,isFunction:Qs,isStream:RF,isURLSearchParams:DF,isTypedArray:WF,isFileList:_F,forEach:sd,merge:wb,extend:FF,trim:OF,stripBOM:PF,inherits:LF,toFlatObject:MF,kindOf:Kf,kindOfTest:qr,endsWith:zF,toArray:BF,forEachEntry:VF,matchAll:UF,isHTMLForm:GF,hasOwnProperty:m1,hasOwnProp:m1,reduceDescriptors:kk,freezeMethods:qF,toObjectSet:KF,toCamelCase:HF,noop:XF,toFiniteNumber:YF,findKey:Ck,global:vk,isContextDefined:Ik,ALPHABET:$k,generateString:QF,isSpecCompliantForm:JF,toJSONObject:ZF,isAsyncFn:eP,isThenable:tP};function ut(n,e,t,s,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=n,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),s&&(this.request=s),r&&(this.response=r)}u(ut,"AxiosError");J.inherits(ut,Error,{toJSON:u(function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:J.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}},"toJSON")});const Nk=ut.prototype,Tk={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(n=>{Tk[n]={value:n}});Object.defineProperties(ut,Tk);Object.defineProperty(Nk,"isAxiosError",{value:!0});ut.from=(n,e,t,s,r,o)=>{const i=Object.create(Nk);return J.toFlatObject(n,i,u(function(c){return c!==Error.prototype},"filter"),a=>a!=="isAxiosError"),ut.call(i,n.message,e,t,s,r),i.cause=n,i.name=n.name,o&&Object.assign(i,o),i};var nP=null;function Sb(n){return J.isPlainObject(n)||J.isArray(n)}u(Sb,"isVisitable");function Ek(n){return J.endsWith(n,"[]")?n.slice(0,-2):n}u(Ek,"removeBrackets");function y1(n,e,t){return n?n.concat(e).map(u(function(r,o){return r=Ek(r),!t&&o?"["+r+"]":r},"each")).join(t?".":""):e}u(y1,"renderKey");function sP(n){return J.isArray(n)&&!n.some(Sb)}u(sP,"isFlatArray");const rP=J.toFlatObject(J,{},null,u(function(e){return/^is[A-Z]/.test(e)},"filter"));function Qf(n,e,t){if(!J.isObject(n))throw new TypeError("target must be an object");e=e||new FormData,t=J.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,u(function(g,y){return!J.isUndefined(y[g])},"defined"));const s=t.metaTokens,r=t.visitor||d,o=t.dots,i=t.indexes,c=(t.Blob||typeof Blob<"u"&&Blob)&&J.isSpecCompliantForm(e);if(!J.isFunction(r))throw new TypeError("visitor must be a function");function l(m){if(m===null)return"";if(J.isDate(m))return m.toISOString();if(!c&&J.isBlob(m))throw new ut("Blob is not supported. Use a Buffer instead.");return J.isArrayBuffer(m)||J.isTypedArray(m)?c&&typeof Blob=="function"?new Blob([m]):Buffer.from(m):m}u(l,"convertValue");function d(m,g,y){let b=m;if(m&&!y&&typeof m=="object"){if(J.endsWith(g,"{}"))g=s?g:g.slice(0,-2),m=JSON.stringify(m);else if(J.isArray(m)&&sP(m)||(J.isFileList(m)||J.endsWith(g,"[]"))&&(b=J.toArray(m)))return g=Ek(g),b.forEach(u(function(S,w){!(J.isUndefined(S)||S===null)&&e.append(i===!0?y1([g],w,o):i===null?g:g+"[]",l(S))},"each")),!1}return Sb(m)?!0:(e.append(y1(y,g,o),l(m)),!1)}u(d,"defaultVisitor");const h=[],p=Object.assign(rP,{defaultVisitor:d,convertValue:l,isVisitable:Sb});function f(m,g){if(!J.isUndefined(m)){if(h.indexOf(m)!==-1)throw Error("Circular reference detected in "+g.join("."));h.push(m),J.forEach(m,u(function(b,x){(!(J.isUndefined(b)||b===null)&&r.call(e,b,J.isString(x)?x.trim():x,g,p))===!0&&f(b,g?g.concat(x):[x])},"each")),h.pop()}}if(u(f,"build"),!J.isObject(n))throw new TypeError("data must be an object");return f(n),e}u(Qf,"toFormData");function b1(n){const e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(n).replace(/[!'()~]|%20|%00/g,u(function(s){return e[s]},"replacer"))}u(b1,"encode$1");function c0(n,e){this._pairs=[],n&&Qf(n,this,e)}u(c0,"AxiosURLSearchParams");const _k=c0.prototype;_k.append=u(function(e,t){this._pairs.push([e,t])},"append");_k.toString=u(function(e){const t=e?function(s){return e.call(this,s,b1)}:b1;return this._pairs.map(u(function(r){return t(r[0])+"="+t(r[1])},"each"),"").join("&")},"toString");function oP(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}u(oP,"encode");function Rk(n,e,t){if(!e)return n;const s=t&&t.encode||oP,r=t&&t.serialize;let o;if(r?o=r(e,t):o=J.isURLSearchParams(e)?e.toString():new c0(e,t).toString(s),o){const i=n.indexOf("#");i!==-1&&(n=n.slice(0,i)),n+=(n.indexOf("?")===-1?"?":"&")+o}return n}u(Rk,"buildURL");class x1{static{u(this,"InterceptorManager")}constructor(){this.handlers=[]}use(e,t,s){return this.handlers.push({fulfilled:e,rejected:t,synchronous:s?s.synchronous:!1,runWhen:s?s.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){J.forEach(this.handlers,u(function(s){s!==null&&e(s)},"forEachHandler"))}}var Ak={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},iP=typeof URLSearchParams<"u"?URLSearchParams:c0,aP=typeof FormData<"u"?FormData:null,cP=typeof Blob<"u"?Blob:null,uP={isBrowser:!0,classes:{URLSearchParams:iP,FormData:aP,Blob:cP},protocols:["http","https","file","blob","url","data"]};const Dk=typeof window<"u"&&typeof document<"u",lP=(n=>Dk&&["ReactNative","NativeScript","NS"].indexOf(n)<0)(typeof navigator<"u"&&navigator.product),dP=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var hP=Object.freeze({__proto__:null,hasBrowserEnv:Dk,hasStandardBrowserEnv:lP,hasStandardBrowserWebWorkerEnv:dP}),Pr={...hP,...uP};function pP(n,e){return Qf(n,new Pr.classes.URLSearchParams,Object.assign({visitor:function(t,s,r,o){return Pr.isNode&&J.isBuffer(t)?(this.append(s,t.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},e))}u(pP,"toURLEncodedForm");function fP(n){return J.matchAll(/\w+|\[(\w*)]/g,n).map(e=>e[0]==="[]"?"":e[1]||e[0])}u(fP,"parsePropPath");function mP(n){const e={},t=Object.keys(n);let s;const r=t.length;let o;for(s=0;s<r;s++)o=t[s],e[o]=n[o];return e}u(mP,"arrayToObject");function Ok(n){function e(t,s,r,o){let i=t[o++];if(i==="__proto__")return!0;const a=Number.isFinite(+i),c=o>=t.length;return i=!i&&J.isArray(r)?r.length:i,c?(J.hasOwnProp(r,i)?r[i]=[r[i],s]:r[i]=s,!a):((!r[i]||!J.isObject(r[i]))&&(r[i]=[]),e(t,s,r[i],o)&&J.isArray(r[i])&&(r[i]=mP(r[i])),!a)}if(u(e,"buildPath"),J.isFormData(n)&&J.isFunction(n.entries)){const t={};return J.forEachEntry(n,(s,r)=>{e(fP(s),r,t,0)}),t}return null}u(Ok,"formDataToJSON");function gP(n,e,t){if(J.isString(n))try{return(e||JSON.parse)(n),J.trim(n)}catch(s){if(s.name!=="SyntaxError")throw s}return(t||JSON.stringify)(n)}u(gP,"stringifySafely");const u0={transitional:Ak,adapter:["xhr","http"],transformRequest:[u(function(e,t){const s=t.getContentType()||"",r=s.indexOf("application/json")>-1,o=J.isObject(e);if(o&&J.isHTMLForm(e)&&(e=new FormData(e)),J.isFormData(e))return r?JSON.stringify(Ok(e)):e;if(J.isArrayBuffer(e)||J.isBuffer(e)||J.isStream(e)||J.isFile(e)||J.isBlob(e))return e;if(J.isArrayBufferView(e))return e.buffer;if(J.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let a;if(o){if(s.indexOf("application/x-www-form-urlencoded")>-1)return pP(e,this.formSerializer).toString();if((a=J.isFileList(e))||s.indexOf("multipart/form-data")>-1){const c=this.env&&this.env.FormData;return Qf(a?{"files[]":e}:e,c&&new c,this.formSerializer)}}return o||r?(t.setContentType("application/json",!1),gP(e)):e},"transformRequest")],transformResponse:[u(function(e){const t=this.transitional||u0.transitional,s=t&&t.forcedJSONParsing,r=this.responseType==="json";if(e&&J.isString(e)&&(s&&!this.responseType||r)){const i=!(t&&t.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(a){if(i)throw a.name==="SyntaxError"?ut.from(a,ut.ERR_BAD_RESPONSE,this,null,this.response):a}}return e},"transformResponse")],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Pr.classes.FormData,Blob:Pr.classes.Blob},validateStatus:u(function(e){return e>=200&&e<300},"validateStatus"),headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};J.forEach(["delete","get","head","post","put","patch"],n=>{u0.headers[n]={}});var l0=u0;const yP=J.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);var bP=u(n=>{const e={};let t,s,r;return n&&n.split(`
`).forEach(u(function(i){r=i.indexOf(":"),t=i.substring(0,r).trim().toLowerCase(),s=i.substring(r+1).trim(),!(!t||e[t]&&yP[t])&&(t==="set-cookie"?e[t]?e[t].push(s):e[t]=[s]:e[t]=e[t]?e[t]+", "+s:s)},"parser")),e},"parseHeaders");const w1=Symbol("internals");function sl(n){return n&&String(n).trim().toLowerCase()}u(sl,"normalizeHeader");function $p(n){return n===!1||n==null?n:J.isArray(n)?n.map($p):String(n)}u($p,"normalizeValue");function xP(n){const e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let s;for(;s=t.exec(n);)e[s[1]]=s[2];return e}u(xP,"parseTokens");const wP=u(n=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(n.trim()),"isValidHeaderName");function Oy(n,e,t,s,r){if(J.isFunction(s))return s.call(this,e,t);if(r&&(e=t),!!J.isString(e)){if(J.isString(s))return e.indexOf(s)!==-1;if(J.isRegExp(s))return s.test(e)}}u(Oy,"matchHeaderValue");function SP(n){return n.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,s)=>t.toUpperCase()+s)}u(SP,"formatHeader");function CP(n,e){const t=J.toCamelCase(" "+e);["get","set","has"].forEach(s=>{Object.defineProperty(n,s+t,{value:function(r,o,i){return this[s].call(this,e,r,o,i)},configurable:!0})})}u(CP,"buildAccessors");class Jf{static{u(this,"AxiosHeaders")}constructor(e){e&&this.set(e)}set(e,t,s){const r=this;function o(a,c,l){const d=sl(c);if(!d)throw new Error("header name must be a non-empty string");const h=J.findKey(r,d);(!h||r[h]===void 0||l===!0||l===void 0&&r[h]!==!1)&&(r[h||c]=$p(a))}u(o,"setHeader");const i=u((a,c)=>J.forEach(a,(l,d)=>o(l,d,c)),"setHeaders");return J.isPlainObject(e)||e instanceof this.constructor?i(e,t):J.isString(e)&&(e=e.trim())&&!wP(e)?i(bP(e),t):e!=null&&o(t,e,s),this}get(e,t){if(e=sl(e),e){const s=J.findKey(this,e);if(s){const r=this[s];if(!t)return r;if(t===!0)return xP(r);if(J.isFunction(t))return t.call(this,r,s);if(J.isRegExp(t))return t.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=sl(e),e){const s=J.findKey(this,e);return!!(s&&this[s]!==void 0&&(!t||Oy(this,this[s],s,t)))}return!1}delete(e,t){const s=this;let r=!1;function o(i){if(i=sl(i),i){const a=J.findKey(s,i);a&&(!t||Oy(s,s[a],a,t))&&(delete s[a],r=!0)}}return u(o,"deleteHeader"),J.isArray(e)?e.forEach(o):o(e),r}clear(e){const t=Object.keys(this);let s=t.length,r=!1;for(;s--;){const o=t[s];(!e||Oy(this,this[o],o,e,!0))&&(delete this[o],r=!0)}return r}normalize(e){const t=this,s={};return J.forEach(this,(r,o)=>{const i=J.findKey(s,o);if(i){t[i]=$p(r),delete t[o];return}const a=e?SP(o):String(o).trim();a!==o&&delete t[o],t[a]=$p(r),s[a]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return J.forEach(this,(s,r)=>{s!=null&&s!==!1&&(t[r]=e&&J.isArray(s)?s.join(", "):s)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const s=new this(e);return t.forEach(r=>s.set(r)),s}static accessor(e){const s=(this[w1]=this[w1]={accessors:{}}).accessors,r=this.prototype;function o(i){const a=sl(i);s[a]||(CP(r,i),s[a]=!0)}return u(o,"defineAccessor"),J.isArray(e)?e.forEach(o):o(e),this}}Jf.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);J.reduceDescriptors(Jf.prototype,({value:n},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>n,set(s){this[t]=s}}});J.freezeMethods(Jf);var ao=Jf;function Fy(n,e){const t=this||l0,s=e||t,r=ao.from(s.headers);let o=s.data;return J.forEach(n,u(function(a){o=a.call(t,o,r.normalize(),e?e.status:void 0)},"transform")),r.normalize(),o}u(Fy,"transformData");function Fk(n){return!!(n&&n.__CANCEL__)}u(Fk,"isCancel");function rd(n,e,t){ut.call(this,n??"canceled",ut.ERR_CANCELED,e,t),this.name="CanceledError"}u(rd,"CanceledError");J.inherits(rd,ut,{__CANCEL__:!0});function vP(n,e,t){const s=t.config.validateStatus;!t.status||!s||s(t.status)?n(t):e(new ut("Request failed with status code "+t.status,[ut.ERR_BAD_REQUEST,ut.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}u(vP,"settle");var IP=Pr.hasStandardBrowserEnv?{write(n,e,t,s,r,o){const i=[n+"="+encodeURIComponent(e)];J.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),J.isString(s)&&i.push("path="+s),J.isString(r)&&i.push("domain="+r),o===!0&&i.push("secure"),document.cookie=i.join("; ")},read(n){const e=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(n){this.write(n,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function kP(n){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(n)}u(kP,"isAbsoluteURL");function $P(n,e){return e?n.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):n}u($P,"combineURLs");function Pk(n,e){return n&&!kP(e)?$P(n,e):e}u(Pk,"buildFullPath");var NP=Pr.hasStandardBrowserEnv?u(function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let s;function r(o){let i=o;return e&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return u(r,"resolveURL"),s=r(window.location.href),u(function(i){const a=J.isString(i)?r(i):i;return a.protocol===s.protocol&&a.host===s.host},"isURLSameOrigin")},"standardBrowserEnv")():u(function(){return u(function(){return!0},"isURLSameOrigin")},"nonStandardBrowserEnv")();function TP(n){const e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(n);return e&&e[1]||""}u(TP,"parseProtocol");function EP(n,e){n=n||10;const t=new Array(n),s=new Array(n);let r=0,o=0,i;return e=e!==void 0?e:1e3,u(function(c){const l=Date.now(),d=s[o];i||(i=l),t[r]=c,s[r]=l;let h=o,p=0;for(;h!==r;)p+=t[h++],h=h%n;if(r=(r+1)%n,r===o&&(o=(o+1)%n),l-i<e)return;const f=d&&l-d;return f?Math.round(p*1e3/f):void 0},"push")}u(EP,"speedometer");function S1(n,e){let t=0;const s=EP(50,250);return r=>{const o=r.loaded,i=r.lengthComputable?r.total:void 0,a=o-t,c=s(a),l=o<=i;t=o;const d={loaded:o,total:i,progress:i?o/i:void 0,bytes:a,rate:c||void 0,estimated:c&&i&&l?(i-o)/c:void 0,event:r};d[e?"download":"upload"]=!0,n(d)}}u(S1,"progressEventReducer");const _P=typeof XMLHttpRequest<"u";var RP=_P&&function(n){return new Promise(u(function(t,s){let r=n.data;const o=ao.from(n.headers).normalize();let{responseType:i,withXSRFToken:a}=n,c;function l(){n.cancelToken&&n.cancelToken.unsubscribe(c),n.signal&&n.signal.removeEventListener("abort",c)}u(l,"done");let d;if(J.isFormData(r)){if(Pr.hasStandardBrowserEnv||Pr.hasStandardBrowserWebWorkerEnv)o.setContentType(!1);else if((d=o.getContentType())!==!1){const[g,...y]=d?d.split(";").map(b=>b.trim()).filter(Boolean):[];o.setContentType([g||"multipart/form-data",...y].join("; "))}}let h=new XMLHttpRequest;if(n.auth){const g=n.auth.username||"",y=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";o.set("Authorization","Basic "+btoa(g+":"+y))}const p=Pk(n.baseURL,n.url);h.open(n.method.toUpperCase(),Rk(p,n.params,n.paramsSerializer),!0),h.timeout=n.timeout;function f(){if(!h)return;const g=ao.from("getAllResponseHeaders"in h&&h.getAllResponseHeaders()),b={data:!i||i==="text"||i==="json"?h.responseText:h.response,status:h.status,statusText:h.statusText,headers:g,config:n,request:h};vP(u(function(S){t(S),l()},"_resolve"),u(function(S){s(S),l()},"_reject"),b),h=null}if(u(f,"onloadend"),"onloadend"in h?h.onloadend=f:h.onreadystatechange=u(function(){!h||h.readyState!==4||h.status===0&&!(h.responseURL&&h.responseURL.indexOf("file:")===0)||setTimeout(f)},"handleLoad"),h.onabort=u(function(){h&&(s(new ut("Request aborted",ut.ECONNABORTED,n,h)),h=null)},"handleAbort"),h.onerror=u(function(){s(new ut("Network Error",ut.ERR_NETWORK,n,h)),h=null},"handleError"),h.ontimeout=u(function(){let y=n.timeout?"timeout of "+n.timeout+"ms exceeded":"timeout exceeded";const b=n.transitional||Ak;n.timeoutErrorMessage&&(y=n.timeoutErrorMessage),s(new ut(y,b.clarifyTimeoutError?ut.ETIMEDOUT:ut.ECONNABORTED,n,h)),h=null},"handleTimeout"),Pr.hasStandardBrowserEnv&&(a&&J.isFunction(a)&&(a=a(n)),a||a!==!1&&NP(p))){const g=n.xsrfHeaderName&&n.xsrfCookieName&&IP.read(n.xsrfCookieName);g&&o.set(n.xsrfHeaderName,g)}r===void 0&&o.setContentType(null),"setRequestHeader"in h&&J.forEach(o.toJSON(),u(function(y,b){h.setRequestHeader(b,y)},"setRequestHeader")),J.isUndefined(n.withCredentials)||(h.withCredentials=!!n.withCredentials),i&&i!=="json"&&(h.responseType=n.responseType),typeof n.onDownloadProgress=="function"&&h.addEventListener("progress",S1(n.onDownloadProgress,!0)),typeof n.onUploadProgress=="function"&&h.upload&&h.upload.addEventListener("progress",S1(n.onUploadProgress)),(n.cancelToken||n.signal)&&(c=u(g=>{h&&(s(!g||g.type?new rd(null,n,h):g),h.abort(),h=null)},"onCanceled"),n.cancelToken&&n.cancelToken.subscribe(c),n.signal&&(n.signal.aborted?c():n.signal.addEventListener("abort",c)));const m=TP(p);if(m&&Pr.protocols.indexOf(m)===-1){s(new ut("Unsupported protocol "+m+":",ut.ERR_BAD_REQUEST,n));return}h.send(r||null)},"dispatchXhrRequest"))};const Cb={http:nP,xhr:RP};J.forEach(Cb,(n,e)=>{if(n){try{Object.defineProperty(n,"name",{value:e})}catch{}Object.defineProperty(n,"adapterName",{value:e})}});const C1=u(n=>`- ${n}`,"renderReason"),AP=u(n=>J.isFunction(n)||n===null||n===!1,"isResolvedHandle");var Lk={getAdapter:n=>{n=J.isArray(n)?n:[n];const{length:e}=n;let t,s;const r={};for(let o=0;o<e;o++){t=n[o];let i;if(s=t,!AP(t)&&(s=Cb[(i=String(t)).toLowerCase()],s===void 0))throw new ut(`Unknown adapter '${i}'`);if(s)break;r[i||"#"+o]=s}if(!s){const o=Object.entries(r).map(([a,c])=>`adapter ${a} `+(c===!1?"is not supported by the environment":"is not available in the build"));let i=e?o.length>1?`since :
`+o.map(C1).join(`
`):" "+C1(o[0]):"as no adapter specified";throw new ut("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return s},adapters:Cb};function Py(n){if(n.cancelToken&&n.cancelToken.throwIfRequested(),n.signal&&n.signal.aborted)throw new rd(null,n)}u(Py,"throwIfCancellationRequested");function v1(n){return Py(n),n.headers=ao.from(n.headers),n.data=Fy.call(n,n.transformRequest),["post","put","patch"].indexOf(n.method)!==-1&&n.headers.setContentType("application/x-www-form-urlencoded",!1),Lk.getAdapter(n.adapter||l0.adapter)(n).then(u(function(s){return Py(n),s.data=Fy.call(n,n.transformResponse,s),s.headers=ao.from(s.headers),s},"onAdapterResolution"),u(function(s){return Fk(s)||(Py(n),s&&s.response&&(s.response.data=Fy.call(n,n.transformResponse,s.response),s.response.headers=ao.from(s.response.headers))),Promise.reject(s)},"onAdapterRejection"))}u(v1,"dispatchRequest");const I1=u(n=>n instanceof ao?{...n}:n,"headersToObject");function lc(n,e){e=e||{};const t={};function s(l,d,h){return J.isPlainObject(l)&&J.isPlainObject(d)?J.merge.call({caseless:h},l,d):J.isPlainObject(d)?J.merge({},d):J.isArray(d)?d.slice():d}u(s,"getMergedValue");function r(l,d,h){if(J.isUndefined(d)){if(!J.isUndefined(l))return s(void 0,l,h)}else return s(l,d,h)}u(r,"mergeDeepProperties");function o(l,d){if(!J.isUndefined(d))return s(void 0,d)}u(o,"valueFromConfig2");function i(l,d){if(J.isUndefined(d)){if(!J.isUndefined(l))return s(void 0,l)}else return s(void 0,d)}u(i,"defaultToConfig2");function a(l,d,h){if(h in e)return s(l,d);if(h in n)return s(void 0,l)}u(a,"mergeDirectKeys");const c={url:o,method:o,data:o,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:a,headers:(l,d)=>r(I1(l),I1(d),!0)};return J.forEach(Object.keys(Object.assign({},n,e)),u(function(d){const h=c[d]||r,p=h(n[d],e[d],d);J.isUndefined(p)&&h!==a||(t[d]=p)},"computeConfigValue")),t}u(lc,"mergeConfig");const Mk="1.6.8",d0={};["object","boolean","number","function","string","symbol"].forEach((n,e)=>{d0[n]=u(function(s){return typeof s===n||"a"+(e<1?"n ":" ")+n},"validator")});const k1={};d0.transitional=u(function(e,t,s){function r(o,i){return"[Axios v"+Mk+"] Transitional option '"+o+"'"+i+(s?". "+s:"")}return u(r,"formatMessage"),(o,i,a)=>{if(e===!1)throw new ut(r(i," has been removed"+(t?" in "+t:"")),ut.ERR_DEPRECATED);return t&&!k1[i]&&(k1[i]=!0,r(i," has been deprecated since v"+t+" and will be removed in the near future")),e?e(o,i,a):!0}},"transitional");function DP(n,e,t){if(typeof n!="object")throw new ut("options must be an object",ut.ERR_BAD_OPTION_VALUE);const s=Object.keys(n);let r=s.length;for(;r-- >0;){const o=s[r],i=e[o];if(i){const a=n[o],c=a===void 0||i(a,o,n);if(c!==!0)throw new ut("option "+o+" must be "+c,ut.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new ut("Unknown option "+o,ut.ERR_BAD_OPTION)}}u(DP,"assertOptions");var vb={assertOptions:DP,validators:d0};const To=vb.validators;class jp{static{u(this,"Axios")}constructor(e){this.defaults=e,this.interceptors={request:new x1,response:new x1}}async request(e,t){try{return await this._request(e,t)}catch(s){if(s instanceof Error){let r;Error.captureStackTrace?Error.captureStackTrace(r={}):r=new Error;const o=r.stack?r.stack.replace(/^.+\n/,""):"";s.stack?o&&!String(s.stack).endsWith(o.replace(/^.+\n.+\n/,""))&&(s.stack+=`
`+o):s.stack=o}throw s}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=lc(this.defaults,t);const{transitional:s,paramsSerializer:r,headers:o}=t;s!==void 0&&vb.assertOptions(s,{silentJSONParsing:To.transitional(To.boolean),forcedJSONParsing:To.transitional(To.boolean),clarifyTimeoutError:To.transitional(To.boolean)},!1),r!=null&&(J.isFunction(r)?t.paramsSerializer={serialize:r}:vb.assertOptions(r,{encode:To.function,serialize:To.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=o&&J.merge(o.common,o[t.method]);o&&J.forEach(["delete","get","head","post","put","patch","common"],m=>{delete o[m]}),t.headers=ao.concat(i,o);const a=[];let c=!0;this.interceptors.request.forEach(u(function(g){typeof g.runWhen=="function"&&g.runWhen(t)===!1||(c=c&&g.synchronous,a.unshift(g.fulfilled,g.rejected))},"unshiftRequestInterceptors"));const l=[];this.interceptors.response.forEach(u(function(g){l.push(g.fulfilled,g.rejected)},"pushResponseInterceptors"));let d,h=0,p;if(!c){const m=[v1.bind(this),void 0];for(m.unshift.apply(m,a),m.push.apply(m,l),p=m.length,d=Promise.resolve(t);h<p;)d=d.then(m[h++],m[h++]);return d}p=a.length;let f=t;for(h=0;h<p;){const m=a[h++],g=a[h++];try{f=m(f)}catch(y){g.call(this,y);break}}try{d=v1.call(this,f)}catch(m){return Promise.reject(m)}for(h=0,p=l.length;h<p;)d=d.then(l[h++],l[h++]);return d}getUri(e){e=lc(this.defaults,e);const t=Pk(e.baseURL,e.url);return Rk(t,e.params,e.paramsSerializer)}}J.forEach(["delete","get","head","options"],u(function(e){jp.prototype[e]=function(t,s){return this.request(lc(s||{},{method:e,url:t,data:(s||{}).data}))}},"forEachMethodNoData"));J.forEach(["post","put","patch"],u(function(e){function t(s){return u(function(o,i,a){return this.request(lc(a||{},{method:e,headers:s?{"Content-Type":"multipart/form-data"}:{},url:o,data:i}))},"httpMethod")}u(t,"generateHTTPMethod"),jp.prototype[e]=t(),jp.prototype[e+"Form"]=t(!0)},"forEachMethodWithData"));var Np=jp;class h0{static{u(this,"CancelToken")}constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(u(function(o){t=o},"promiseExecutor"));const s=this;this.promise.then(r=>{if(!s._listeners)return;let o=s._listeners.length;for(;o-- >0;)s._listeners[o](r);s._listeners=null}),this.promise.then=r=>{let o;const i=new Promise(a=>{s.subscribe(a),o=a}).then(r);return i.cancel=u(function(){s.unsubscribe(o)},"reject"),i},e(u(function(o,i,a){s.reason||(s.reason=new rd(o,i,a),t(s.reason))},"cancel"))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new h0(u(function(r){e=r},"executor")),cancel:e}}}var OP=h0;function FP(n){return u(function(t){return n.apply(null,t)},"wrap")}u(FP,"spread");function PP(n){return J.isObject(n)&&n.isAxiosError===!0}u(PP,"isAxiosError");const Ib={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Ib).forEach(([n,e])=>{Ib[e]=n});var LP=Ib;function zk(n){const e=new Np(n),t=xk(Np.prototype.request,e);return J.extend(t,Np.prototype,e,{allOwnKeys:!0}),J.extend(t,e,null,{allOwnKeys:!0}),t.create=u(function(r){return zk(lc(n,r))},"create"),t}u(zk,"createInstance");const un=zk(l0);un.Axios=Np;un.CanceledError=rd;un.CancelToken=OP;un.isCancel=Fk;un.VERSION=Mk;un.toFormData=Qf;un.AxiosError=ut;un.Cancel=un.CanceledError;un.all=u(function(e){return Promise.all(e)},"all");un.spread=FP;un.isAxiosError=PP;un.mergeConfig=lc;un.AxiosHeaders=ao;un.formToJSON=n=>Ok(J.isHTMLForm(n)?new FormData(n):n);un.getAdapter=Lk.getAdapter;un.HttpStatusCode=LP;un.default=un;var da=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Bk(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}u(Bk,"getDefaultExportFromCjs");function MP(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=u(function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)},"a");t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}u(MP,"getAugmentedNamespace");const zP=new Set(["ENOTFOUND","ENETUNREACH","UNABLE_TO_GET_ISSUER_CERT","UNABLE_TO_GET_CRL","UNABLE_TO_DECRYPT_CERT_SIGNATURE","UNABLE_TO_DECRYPT_CRL_SIGNATURE","UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","CERT_SIGNATURE_FAILURE","CRL_SIGNATURE_FAILURE","CERT_NOT_YET_VALID","CERT_HAS_EXPIRED","CRL_NOT_YET_VALID","CRL_HAS_EXPIRED","ERROR_IN_CERT_NOT_BEFORE_FIELD","ERROR_IN_CERT_NOT_AFTER_FIELD","ERROR_IN_CRL_LAST_UPDATE_FIELD","ERROR_IN_CRL_NEXT_UPDATE_FIELD","OUT_OF_MEM","DEPTH_ZERO_SELF_SIGNED_CERT","SELF_SIGNED_CERT_IN_CHAIN","UNABLE_TO_GET_ISSUER_CERT_LOCALLY","UNABLE_TO_VERIFY_LEAF_SIGNATURE","CERT_CHAIN_TOO_LONG","CERT_REVOKED","INVALID_CA","PATH_LENGTH_EXCEEDED","INVALID_PURPOSE","CERT_UNTRUSTED","CERT_REJECTED","HOSTNAME_MISMATCH"]);var BP=u(n=>!zP.has(n&&n.code),"isRetryAllowed"),WP=Bk(BP);const p0="axios-retry";function Wk(n){const e=["ERR_CANCELED","ECONNABORTED"];return n.response||!n.code||e.includes(n.code)?!1:WP(n)}u(Wk,"isNetworkError");const Vk=["get","head","options"],VP=Vk.concat(["put","delete"]);function f0(n){return n.code!=="ECONNABORTED"&&(!n.response||n.response.status===429||n.response.status>=500&&n.response.status<=599)}u(f0,"isRetryableError");function UP(n){return n.config?.method?f0(n)&&Vk.indexOf(n.config.method)!==-1:!1}u(UP,"isSafeRequestError");function Uk(n){return n.config?.method?f0(n)&&VP.indexOf(n.config.method)!==-1:!1}u(Uk,"isIdempotentRequestError");function Gk(n){return Wk(n)||Uk(n)}u(Gk,"isNetworkOrIdempotentRequestError");function Hk(n=void 0){const e=n?.response?.headers["retry-after"];if(!e)return 0;let t=(Number(e)||0)*1e3;return t===0&&(t=(new Date(e).valueOf()||0)-Date.now()),Math.max(0,t)}u(Hk,"retryAfter");function GP(n=0,e=void 0){return Math.max(0,Hk(e))}u(GP,"noDelay");function HP(n=0,e=void 0,t=100){const s=2**n*t,r=Math.max(s,Hk(e)),o=r*.2*Math.random();return r+o}u(HP,"exponentialDelay");const jP={retries:3,retryCondition:Gk,retryDelay:GP,shouldResetTimeout:!1,onRetry:()=>{},onMaxRetryTimesExceeded:()=>{},validateResponse:null};function qP(n,e){return{...jP,...e,...n[p0]}}u(qP,"getRequestOptions");function $1(n,e){const t=qP(n,e||{});return t.retryCount=t.retryCount||0,t.lastRequestTime=t.lastRequestTime||Date.now(),n[p0]=t,t}u($1,"setCurrentState");function KP(n,e){n.defaults.agent===e.agent&&delete e.agent,n.defaults.httpAgent===e.httpAgent&&delete e.httpAgent,n.defaults.httpsAgent===e.httpsAgent&&delete e.httpsAgent}u(KP,"fixConfig");async function XP(n,e){const{retries:t,retryCondition:s}=n,r=(n.retryCount||0)<t&&s(e);if(typeof r=="object")try{return await r!==!1}catch{return!1}return r}u(XP,"shouldRetry");async function YP(n,e,t,s){e.retryCount+=1;const{retryDelay:r,shouldResetTimeout:o,onRetry:i}=e,a=r(e.retryCount,t);if(KP(n,s),!o&&s.timeout&&e.lastRequestTime){const c=Date.now()-e.lastRequestTime,l=s.timeout-c-a;if(l<=0)return Promise.reject(t);s.timeout=l}return s.transformRequest=[c=>c],await i(e.retryCount,t,s),s.signal?.aborted?Promise.resolve(n(s)):new Promise(c=>{const l=u(()=>{clearTimeout(d),c(n(s))},"abortListener"),d=setTimeout(()=>{c(n(s)),s.signal?.removeEventListener&&s.signal.removeEventListener("abort",l)},a);s.signal?.addEventListener&&s.signal.addEventListener("abort",l,{once:!0})})}u(YP,"handleRetry");async function QP(n,e){n.retryCount>=n.retries&&await n.onMaxRetryTimesExceeded(e,n.retryCount)}u(QP,"handleMaxRetryTimesExceeded");const jo=u((n,e)=>{const t=n.interceptors.request.use(r=>($1(r,e),r[p0]?.validateResponse&&(r.validateStatus=()=>!1),r)),s=n.interceptors.response.use(null,async r=>{const{config:o}=r;if(!o)return Promise.reject(r);const i=$1(o,e);return r.response&&i.validateResponse?.(r.response)?r.response:await XP(i,r)?YP(n,i,r,o):(await QP(i,r),Promise.reject(r))});return{requestInterceptorId:t,responseInterceptorId:s}},"axiosRetry");jo.isNetworkError=Wk;jo.isSafeRequestError=UP;jo.isIdempotentRequestError=Uk;jo.isNetworkOrIdempotentRequestError=Gk;jo.exponentialDelay=HP;jo.isRetryableError=f0;class Zf{static{u(this,"Subscribable")}constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(e){const t={listener:e};return this.listeners.add(t),this.onSubscribe(),()=>{this.listeners.delete(t),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}}const m0=typeof window>"u"||"Deno"in window;function dr(){}u(dr,"noop");function JP(n,e){return typeof n=="function"?n(e):n}u(JP,"functionalUpdate");function ZP(n){return typeof n=="number"&&n>=0&&n!==1/0}u(ZP,"isValidTimeout");function e3(n,e){return Math.max(n+(e||0)-Date.now(),0)}u(e3,"timeUntilStale");function jh(n,e,t){return em(n)?typeof e=="function"?{...t,queryKey:n,queryFn:e}:{...e,queryKey:n}:n}u(jh,"parseQueryArgs");function _o(n,e,t){return em(n)?[{...e,queryKey:n},t]:[n||{},e]}u(_o,"parseFilterArgs");function N1(n,e){const{type:t="all",exact:s,fetchStatus:r,predicate:o,queryKey:i,stale:a}=n;if(em(i)){if(s){if(e.queryHash!==g0(i,e.options))return!1}else if(!qp(e.queryKey,i))return!1}if(t!=="all"){const c=e.isActive();if(t==="active"&&!c||t==="inactive"&&c)return!1}return!(typeof a=="boolean"&&e.isStale()!==a||typeof r<"u"&&r!==e.state.fetchStatus||o&&!o(e))}u(N1,"matchQuery");function T1(n,e){const{exact:t,fetching:s,predicate:r,mutationKey:o}=n;if(em(o)){if(!e.options.mutationKey)return!1;if(t){if(Di(e.options.mutationKey)!==Di(o))return!1}else if(!qp(e.options.mutationKey,o))return!1}return!(typeof s=="boolean"&&e.state.status==="loading"!==s||r&&!r(e))}u(T1,"matchMutation");function g0(n,e){return(e?.queryKeyHashFn||Di)(n)}u(g0,"hashQueryKeyByOptions");function Di(n){return JSON.stringify(n,(e,t)=>kb(t)?Object.keys(t).sort().reduce((s,r)=>(s[r]=t[r],s),{}):t)}u(Di,"hashQueryKey");function qp(n,e){return jk(n,e)}u(qp,"partialMatchKey");function jk(n,e){return n===e?!0:typeof n!=typeof e?!1:n&&e&&typeof n=="object"&&typeof e=="object"?!Object.keys(e).some(t=>!jk(n[t],e[t])):!1}u(jk,"partialDeepEqual");function qk(n,e){if(n===e)return n;const t=E1(n)&&E1(e);if(t||kb(n)&&kb(e)){const s=t?n.length:Object.keys(n).length,r=t?e:Object.keys(e),o=r.length,i=t?[]:{};let a=0;for(let c=0;c<o;c++){const l=t?c:r[c];i[l]=qk(n[l],e[l]),i[l]===n[l]&&a++}return s===o&&a===s?n:i}return e}u(qk,"replaceEqualDeep");function E1(n){return Array.isArray(n)&&n.length===Object.keys(n).length}u(E1,"isPlainArray");function kb(n){if(!_1(n))return!1;const e=n.constructor;if(typeof e>"u")return!0;const t=e.prototype;return!(!_1(t)||!t.hasOwnProperty("isPrototypeOf"))}u(kb,"isPlainObject$1");function _1(n){return Object.prototype.toString.call(n)==="[object Object]"}u(_1,"hasObjectPrototype");function em(n){return Array.isArray(n)}u(em,"isQueryKey");function Kk(n){return new Promise(e=>{setTimeout(e,n)})}u(Kk,"sleep");function R1(n){Kk(0).then(n)}u(R1,"scheduleMicrotask");function t3(){if(typeof AbortController=="function")return new AbortController}u(t3,"getAbortController");function n3(n,e,t){return t.isDataEqual!=null&&t.isDataEqual(n,e)?n:typeof t.structuralSharing=="function"?t.structuralSharing(n,e):t.structuralSharing!==!1?qk(n,e):e}u(n3,"replaceData");class s3 extends Zf{static{u(this,"FocusManager")}constructor(){super(),this.setup=e=>{if(!m0&&window.addEventListener){const t=u(()=>e(),"listener");return window.addEventListener("visibilitychange",t,!1),window.addEventListener("focus",t,!1),()=>{window.removeEventListener("visibilitychange",t),window.removeEventListener("focus",t)}}}}onSubscribe(){this.cleanup||this.setEventListener(this.setup)}onUnsubscribe(){if(!this.hasListeners()){var e;(e=this.cleanup)==null||e.call(this),this.cleanup=void 0}}setEventListener(e){var t;this.setup=e,(t=this.cleanup)==null||t.call(this),this.cleanup=e(s=>{typeof s=="boolean"?this.setFocused(s):this.onFocus()})}setFocused(e){this.focused!==e&&(this.focused=e,this.onFocus())}onFocus(){this.listeners.forEach(({listener:e})=>{e()})}isFocused(){return typeof this.focused=="boolean"?this.focused:typeof document>"u"?!0:[void 0,"visible","prerender"].includes(document.visibilityState)}}const $b=new s3,A1=["online","offline"];class r3 extends Zf{static{u(this,"OnlineManager")}constructor(){super(),this.setup=e=>{if(!m0&&window.addEventListener){const t=u(()=>e(),"listener");return A1.forEach(s=>{window.addEventListener(s,t,!1)}),()=>{A1.forEach(s=>{window.removeEventListener(s,t)})}}}}onSubscribe(){this.cleanup||this.setEventListener(this.setup)}onUnsubscribe(){if(!this.hasListeners()){var e;(e=this.cleanup)==null||e.call(this),this.cleanup=void 0}}setEventListener(e){var t;this.setup=e,(t=this.cleanup)==null||t.call(this),this.cleanup=e(s=>{typeof s=="boolean"?this.setOnline(s):this.onOnline()})}setOnline(e){this.online!==e&&(this.online=e,this.onOnline())}onOnline(){this.listeners.forEach(({listener:e})=>{e()})}isOnline(){return typeof this.online=="boolean"?this.online:typeof navigator>"u"||typeof navigator.onLine>"u"?!0:navigator.onLine}}const Kp=new r3;function o3(n){return Math.min(1e3*2**n,3e4)}u(o3,"defaultRetryDelay");function y0(n){return(n??"online")==="online"?Kp.isOnline():!0}u(y0,"canFetch");class Xk{static{u(this,"CancelledError")}constructor(e){this.revert=e?.revert,this.silent=e?.silent}}function Ly(n){return n instanceof Xk}u(Ly,"isCancelledError");function Yk(n){let e=!1,t=0,s=!1,r,o,i;const a=new Promise((y,b)=>{o=y,i=b}),c=u(y=>{s||(f(new Xk(y)),n.abort==null||n.abort())},"cancel"),l=u(()=>{e=!0},"cancelRetry"),d=u(()=>{e=!1},"continueRetry"),h=u(()=>!$b.isFocused()||n.networkMode!=="always"&&!Kp.isOnline(),"shouldPause"),p=u(y=>{s||(s=!0,n.onSuccess==null||n.onSuccess(y),r?.(),o(y))},"resolve"),f=u(y=>{s||(s=!0,n.onError==null||n.onError(y),r?.(),i(y))},"reject"),m=u(()=>new Promise(y=>{r=u(b=>{const x=s||!h();return x&&y(b),x},"continueFn"),n.onPause==null||n.onPause()}).then(()=>{r=void 0,s||n.onContinue==null||n.onContinue()}),"pause"),g=u(()=>{if(s)return;let y;try{y=n.fn()}catch(b){y=Promise.reject(b)}Promise.resolve(y).then(p).catch(b=>{var x,S;if(s)return;const w=(x=n.retry)!=null?x:3,C=(S=n.retryDelay)!=null?S:o3,v=typeof C=="function"?C(t,b):C,k=w===!0||typeof w=="number"&&t<w||typeof w=="function"&&w(t,b);if(e||!k){f(b);return}t++,n.onFail==null||n.onFail(t,b),Kk(v).then(()=>{if(h())return m()}).then(()=>{e?f(b):g()})})},"run");return y0(n.networkMode)?g():m().then(g),{promise:a,cancel:c,continue:()=>r?.()?a:Promise.resolve(),cancelRetry:l,continueRetry:d}}u(Yk,"createRetryer");const b0=console;function i3(){let n=[],e=0,t=u(d=>{d()},"notifyFn"),s=u(d=>{d()},"batchNotifyFn");const r=u(d=>{let h;e++;try{h=d()}finally{e--,e||a()}return h},"batch"),o=u(d=>{e?n.push(d):R1(()=>{t(d)})},"schedule"),i=u(d=>(...h)=>{o(()=>{d(...h)})},"batchCalls"),a=u(()=>{const d=n;n=[],d.length&&R1(()=>{s(()=>{d.forEach(h=>{t(h)})})})},"flush");return{batch:r,batchCalls:i,schedule:o,setNotifyFunction:u(d=>{t=d},"setNotifyFunction"),setBatchNotifyFunction:u(d=>{s=d},"setBatchNotifyFunction")}}u(i3,"createNotifyManager");const Xn=i3();class Qk{static{u(this,"Removable")}destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),ZP(this.cacheTime)&&(this.gcTimeout=setTimeout(()=>{this.optionalRemove()},this.cacheTime))}updateCacheTime(e){this.cacheTime=Math.max(this.cacheTime||0,e??(m0?1/0:5*60*1e3))}clearGcTimeout(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)}}class a3 extends Qk{static{u(this,"Query")}constructor(e){super(),this.abortSignalConsumed=!1,this.defaultOptions=e.defaultOptions,this.setOptions(e.options),this.observers=[],this.cache=e.cache,this.logger=e.logger||b0,this.queryKey=e.queryKey,this.queryHash=e.queryHash,this.initialState=e.state||c3(this.options),this.state=this.initialState,this.scheduleGc()}get meta(){return this.options.meta}setOptions(e){this.options={...this.defaultOptions,...e},this.updateCacheTime(this.options.cacheTime)}optionalRemove(){!this.observers.length&&this.state.fetchStatus==="idle"&&this.cache.remove(this)}setData(e,t){const s=n3(this.state.data,e,this.options);return this.dispatch({data:s,type:"success",dataUpdatedAt:t?.updatedAt,manual:t?.manual}),s}setState(e,t){this.dispatch({type:"setState",state:e,setStateOptions:t})}cancel(e){var t;const s=this.promise;return(t=this.retryer)==null||t.cancel(e),s?s.then(dr).catch(dr):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(this.initialState)}isActive(){return this.observers.some(e=>e.options.enabled!==!1)}isDisabled(){return this.getObserversCount()>0&&!this.isActive()}isStale(){return this.state.isInvalidated||!this.state.dataUpdatedAt||this.observers.some(e=>e.getCurrentResult().isStale)}isStaleByTime(e=0){return this.state.isInvalidated||!this.state.dataUpdatedAt||!e3(this.state.dataUpdatedAt,e)}onFocus(){var e;const t=this.observers.find(s=>s.shouldFetchOnWindowFocus());t&&t.refetch({cancelRefetch:!1}),(e=this.retryer)==null||e.continue()}onOnline(){var e;const t=this.observers.find(s=>s.shouldFetchOnReconnect());t&&t.refetch({cancelRefetch:!1}),(e=this.retryer)==null||e.continue()}addObserver(e){this.observers.includes(e)||(this.observers.push(e),this.clearGcTimeout(),this.cache.notify({type:"observerAdded",query:this,observer:e}))}removeObserver(e){this.observers.includes(e)&&(this.observers=this.observers.filter(t=>t!==e),this.observers.length||(this.retryer&&(this.abortSignalConsumed?this.retryer.cancel({revert:!0}):this.retryer.cancelRetry()),this.scheduleGc()),this.cache.notify({type:"observerRemoved",query:this,observer:e}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||this.dispatch({type:"invalidate"})}fetch(e,t){var s,r;if(this.state.fetchStatus!=="idle"){if(this.state.dataUpdatedAt&&t!=null&&t.cancelRefetch)this.cancel({silent:!0});else if(this.promise){var o;return(o=this.retryer)==null||o.continueRetry(),this.promise}}if(e&&this.setOptions(e),!this.options.queryFn){const f=this.observers.find(m=>m.options.queryFn);f&&this.setOptions(f.options)}const i=t3(),a={queryKey:this.queryKey,pageParam:void 0,meta:this.meta},c=u(f=>{Object.defineProperty(f,"signal",{enumerable:!0,get:()=>{if(i)return this.abortSignalConsumed=!0,i.signal}})},"addSignalProperty");c(a);const l=u(()=>this.options.queryFn?(this.abortSignalConsumed=!1,this.options.queryFn(a)):Promise.reject("Missing queryFn for queryKey '"+this.options.queryHash+"'"),"fetchFn"),d={fetchOptions:t,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:l};if(c(d),(s=this.options.behavior)==null||s.onFetch(d),this.revertState=this.state,this.state.fetchStatus==="idle"||this.state.fetchMeta!==((r=d.fetchOptions)==null?void 0:r.meta)){var h;this.dispatch({type:"fetch",meta:(h=d.fetchOptions)==null?void 0:h.meta})}const p=u(f=>{if(Ly(f)&&f.silent||this.dispatch({type:"error",error:f}),!Ly(f)){var m,g,y,b;(m=(g=this.cache.config).onError)==null||m.call(g,f,this),(y=(b=this.cache.config).onSettled)==null||y.call(b,this.state.data,f,this)}this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1},"onError");return this.retryer=Yk({fn:d.fetchFn,abort:i?.abort.bind(i),onSuccess:f=>{var m,g,y,b;if(typeof f>"u"){p(new Error(this.queryHash+" data is undefined"));return}this.setData(f),(m=(g=this.cache.config).onSuccess)==null||m.call(g,f,this),(y=(b=this.cache.config).onSettled)==null||y.call(b,f,this.state.error,this),this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1},onError:p,onFail:(f,m)=>{this.dispatch({type:"failed",failureCount:f,error:m})},onPause:()=>{this.dispatch({type:"pause"})},onContinue:()=>{this.dispatch({type:"continue"})},retry:d.options.retry,retryDelay:d.options.retryDelay,networkMode:d.options.networkMode}),this.promise=this.retryer.promise,this.promise}dispatch(e){const t=u(s=>{var r,o;switch(e.type){case"failed":return{...s,fetchFailureCount:e.failureCount,fetchFailureReason:e.error};case"pause":return{...s,fetchStatus:"paused"};case"continue":return{...s,fetchStatus:"fetching"};case"fetch":return{...s,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:(r=e.meta)!=null?r:null,fetchStatus:y0(this.options.networkMode)?"fetching":"paused",...!s.dataUpdatedAt&&{error:null,status:"loading"}};case"success":return{...s,data:e.data,dataUpdateCount:s.dataUpdateCount+1,dataUpdatedAt:(o=e.dataUpdatedAt)!=null?o:Date.now(),error:null,isInvalidated:!1,status:"success",...!e.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};case"error":const i=e.error;return Ly(i)&&i.revert&&this.revertState?{...this.revertState,fetchStatus:"idle"}:{...s,error:i,errorUpdateCount:s.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:s.fetchFailureCount+1,fetchFailureReason:i,fetchStatus:"idle",status:"error"};case"invalidate":return{...s,isInvalidated:!0};case"setState":return{...s,...e.state}}},"reducer");this.state=t(this.state),Xn.batch(()=>{this.observers.forEach(s=>{s.onQueryUpdate(e)}),this.cache.notify({query:this,type:"updated",action:e})})}}function c3(n){const e=typeof n.initialData=="function"?n.initialData():n.initialData,t=typeof e<"u",s=t?typeof n.initialDataUpdatedAt=="function"?n.initialDataUpdatedAt():n.initialDataUpdatedAt:0;return{data:e,dataUpdateCount:0,dataUpdatedAt:t?s??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:t?"success":"loading",fetchStatus:"idle"}}u(c3,"getDefaultState$1");class u3 extends Zf{static{u(this,"QueryCache")}constructor(e){super(),this.config=e||{},this.queries=[],this.queriesMap={}}build(e,t,s){var r;const o=t.queryKey,i=(r=t.queryHash)!=null?r:g0(o,t);let a=this.get(i);return a||(a=new a3({cache:this,logger:e.getLogger(),queryKey:o,queryHash:i,options:e.defaultQueryOptions(t),state:s,defaultOptions:e.getQueryDefaults(o)}),this.add(a)),a}add(e){this.queriesMap[e.queryHash]||(this.queriesMap[e.queryHash]=e,this.queries.push(e),this.notify({type:"added",query:e}))}remove(e){const t=this.queriesMap[e.queryHash];t&&(e.destroy(),this.queries=this.queries.filter(s=>s!==e),t===e&&delete this.queriesMap[e.queryHash],this.notify({type:"removed",query:e}))}clear(){Xn.batch(()=>{this.queries.forEach(e=>{this.remove(e)})})}get(e){return this.queriesMap[e]}getAll(){return this.queries}find(e,t){const[s]=_o(e,t);return typeof s.exact>"u"&&(s.exact=!0),this.queries.find(r=>N1(s,r))}findAll(e,t){const[s]=_o(e,t);return Object.keys(s).length>0?this.queries.filter(r=>N1(s,r)):this.queries}notify(e){Xn.batch(()=>{this.listeners.forEach(({listener:t})=>{t(e)})})}onFocus(){Xn.batch(()=>{this.queries.forEach(e=>{e.onFocus()})})}onOnline(){Xn.batch(()=>{this.queries.forEach(e=>{e.onOnline()})})}}class l3 extends Qk{static{u(this,"Mutation")}constructor(e){super(),this.defaultOptions=e.defaultOptions,this.mutationId=e.mutationId,this.mutationCache=e.mutationCache,this.logger=e.logger||b0,this.observers=[],this.state=e.state||d3(),this.setOptions(e.options),this.scheduleGc()}setOptions(e){this.options={...this.defaultOptions,...e},this.updateCacheTime(this.options.cacheTime)}get meta(){return this.options.meta}setState(e){this.dispatch({type:"setState",state:e})}addObserver(e){this.observers.includes(e)||(this.observers.push(e),this.clearGcTimeout(),this.mutationCache.notify({type:"observerAdded",mutation:this,observer:e}))}removeObserver(e){this.observers=this.observers.filter(t=>t!==e),this.scheduleGc(),this.mutationCache.notify({type:"observerRemoved",mutation:this,observer:e})}optionalRemove(){this.observers.length||(this.state.status==="loading"?this.scheduleGc():this.mutationCache.remove(this))}continue(){var e,t;return(e=(t=this.retryer)==null?void 0:t.continue())!=null?e:this.execute()}async execute(){const e=u(()=>{var k;return this.retryer=Yk({fn:()=>this.options.mutationFn?this.options.mutationFn(this.state.variables):Promise.reject("No mutationFn found"),onFail:($,T)=>{this.dispatch({type:"failed",failureCount:$,error:T})},onPause:()=>{this.dispatch({type:"pause"})},onContinue:()=>{this.dispatch({type:"continue"})},retry:(k=this.options.retry)!=null?k:0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode}),this.retryer.promise},"executeMutation"),t=this.state.status==="loading";try{var s,r,o,i,a,c,l,d;if(!t){var h,p,f,m;this.dispatch({type:"loading",variables:this.options.variables}),await((h=(p=this.mutationCache.config).onMutate)==null?void 0:h.call(p,this.state.variables,this));const $=await((f=(m=this.options).onMutate)==null?void 0:f.call(m,this.state.variables));$!==this.state.context&&this.dispatch({type:"loading",context:$,variables:this.state.variables})}const k=await e();return await((s=(r=this.mutationCache.config).onSuccess)==null?void 0:s.call(r,k,this.state.variables,this.state.context,this)),await((o=(i=this.options).onSuccess)==null?void 0:o.call(i,k,this.state.variables,this.state.context)),await((a=(c=this.mutationCache.config).onSettled)==null?void 0:a.call(c,k,null,this.state.variables,this.state.context,this)),await((l=(d=this.options).onSettled)==null?void 0:l.call(d,k,null,this.state.variables,this.state.context)),this.dispatch({type:"success",data:k}),k}catch(k){try{var g,y,b,x,S,w,C,v;throw await((g=(y=this.mutationCache.config).onError)==null?void 0:g.call(y,k,this.state.variables,this.state.context,this)),await((b=(x=this.options).onError)==null?void 0:b.call(x,k,this.state.variables,this.state.context)),await((S=(w=this.mutationCache.config).onSettled)==null?void 0:S.call(w,void 0,k,this.state.variables,this.state.context,this)),await((C=(v=this.options).onSettled)==null?void 0:C.call(v,void 0,k,this.state.variables,this.state.context)),k}finally{this.dispatch({type:"error",error:k})}}}dispatch(e){const t=u(s=>{switch(e.type){case"failed":return{...s,failureCount:e.failureCount,failureReason:e.error};case"pause":return{...s,isPaused:!0};case"continue":return{...s,isPaused:!1};case"loading":return{...s,context:e.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:!y0(this.options.networkMode),status:"loading",variables:e.variables};case"success":return{...s,data:e.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...s,data:void 0,error:e.error,failureCount:s.failureCount+1,failureReason:e.error,isPaused:!1,status:"error"};case"setState":return{...s,...e.state}}},"reducer");this.state=t(this.state),Xn.batch(()=>{this.observers.forEach(s=>{s.onMutationUpdate(e)}),this.mutationCache.notify({mutation:this,type:"updated",action:e})})}}function d3(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0}}u(d3,"getDefaultState");class h3 extends Zf{static{u(this,"MutationCache")}constructor(e){super(),this.config=e||{},this.mutations=[],this.mutationId=0}build(e,t,s){const r=new l3({mutationCache:this,logger:e.getLogger(),mutationId:++this.mutationId,options:e.defaultMutationOptions(t),state:s,defaultOptions:t.mutationKey?e.getMutationDefaults(t.mutationKey):void 0});return this.add(r),r}add(e){this.mutations.push(e),this.notify({type:"added",mutation:e})}remove(e){this.mutations=this.mutations.filter(t=>t!==e),this.notify({type:"removed",mutation:e})}clear(){Xn.batch(()=>{this.mutations.forEach(e=>{this.remove(e)})})}getAll(){return this.mutations}find(e){return typeof e.exact>"u"&&(e.exact=!0),this.mutations.find(t=>T1(e,t))}findAll(e){return this.mutations.filter(t=>T1(e,t))}notify(e){Xn.batch(()=>{this.listeners.forEach(({listener:t})=>{t(e)})})}resumePausedMutations(){var e;return this.resuming=((e=this.resuming)!=null?e:Promise.resolve()).then(()=>{const t=this.mutations.filter(s=>s.state.isPaused);return Xn.batch(()=>t.reduce((s,r)=>s.then(()=>r.continue().catch(dr)),Promise.resolve()))}).then(()=>{this.resuming=void 0}),this.resuming}}function p3(){return{onFetch:n=>{n.fetchFn=()=>{var e,t,s,r,o,i;const a=(e=n.fetchOptions)==null||(t=e.meta)==null?void 0:t.refetchPage,c=(s=n.fetchOptions)==null||(r=s.meta)==null?void 0:r.fetchMore,l=c?.pageParam,d=c?.direction==="forward",h=c?.direction==="backward",p=((o=n.state.data)==null?void 0:o.pages)||[],f=((i=n.state.data)==null?void 0:i.pageParams)||[];let m=f,g=!1;const y=u(v=>{Object.defineProperty(v,"signal",{enumerable:!0,get:()=>{var k;if((k=n.signal)!=null&&k.aborted)g=!0;else{var $;($=n.signal)==null||$.addEventListener("abort",()=>{g=!0})}return n.signal}})},"addSignalProperty"),b=n.options.queryFn||(()=>Promise.reject("Missing queryFn for queryKey '"+n.options.queryHash+"'")),x=u((v,k,$,T)=>(m=T?[k,...m]:[...m,k],T?[$,...v]:[...v,$]),"buildNewPages"),S=u((v,k,$,T)=>{if(g)return Promise.reject("Cancelled");if(typeof $>"u"&&!k&&v.length)return Promise.resolve(v);const E={queryKey:n.queryKey,pageParam:$,meta:n.options.meta};y(E);const R=b(E);return Promise.resolve(R).then(L=>x(v,$,L,T))},"fetchPage");let w;if(!p.length)w=S([]);else if(d){const v=typeof l<"u",k=v?l:D1(n.options,p);w=S(p,v,k)}else if(h){const v=typeof l<"u",k=v?l:f3(n.options,p);w=S(p,v,k,!0)}else{m=[];const v=typeof n.options.getNextPageParam>"u";w=(a&&p[0]?a(p[0],0,p):!0)?S([],v,f[0]):Promise.resolve(x([],f[0],p[0]));for(let $=1;$<p.length;$++)w=w.then(T=>{if(a&&p[$]?a(p[$],$,p):!0){const R=v?f[$]:D1(n.options,T);return S(T,v,R)}return Promise.resolve(x(T,f[$],p[$]))})}return w.then(v=>({pages:v,pageParams:m}))}}}}u(p3,"infiniteQueryBehavior");function D1(n,e){return n.getNextPageParam==null?void 0:n.getNextPageParam(e[e.length-1],e)}u(D1,"getNextPageParam");function f3(n,e){return n.getPreviousPageParam==null?void 0:n.getPreviousPageParam(e[0],e)}u(f3,"getPreviousPageParam");class m3{static{u(this,"QueryClient")}constructor(e={}){this.queryCache=e.queryCache||new u3,this.mutationCache=e.mutationCache||new h3,this.logger=e.logger||b0,this.defaultOptions=e.defaultOptions||{},this.queryDefaults=[],this.mutationDefaults=[],this.mountCount=0}mount(){this.mountCount++,this.mountCount===1&&(this.unsubscribeFocus=$b.subscribe(()=>{$b.isFocused()&&(this.resumePausedMutations(),this.queryCache.onFocus())}),this.unsubscribeOnline=Kp.subscribe(()=>{Kp.isOnline()&&(this.resumePausedMutations(),this.queryCache.onOnline())}))}unmount(){var e,t;this.mountCount--,this.mountCount===0&&((e=this.unsubscribeFocus)==null||e.call(this),this.unsubscribeFocus=void 0,(t=this.unsubscribeOnline)==null||t.call(this),this.unsubscribeOnline=void 0)}isFetching(e,t){const[s]=_o(e,t);return s.fetchStatus="fetching",this.queryCache.findAll(s).length}isMutating(e){return this.mutationCache.findAll({...e,fetching:!0}).length}getQueryData(e,t){var s;return(s=this.queryCache.find(e,t))==null?void 0:s.state.data}ensureQueryData(e,t,s){const r=jh(e,t,s),o=this.getQueryData(r.queryKey);return o?Promise.resolve(o):this.fetchQuery(r)}getQueriesData(e){return this.getQueryCache().findAll(e).map(({queryKey:t,state:s})=>{const r=s.data;return[t,r]})}setQueryData(e,t,s){const r=this.queryCache.find(e),o=r?.state.data,i=JP(t,o);if(typeof i>"u")return;const a=jh(e),c=this.defaultQueryOptions(a);return this.queryCache.build(this,c).setData(i,{...s,manual:!0})}setQueriesData(e,t,s){return Xn.batch(()=>this.getQueryCache().findAll(e).map(({queryKey:r})=>[r,this.setQueryData(r,t,s)]))}getQueryState(e,t){var s;return(s=this.queryCache.find(e,t))==null?void 0:s.state}removeQueries(e,t){const[s]=_o(e,t),r=this.queryCache;Xn.batch(()=>{r.findAll(s).forEach(o=>{r.remove(o)})})}resetQueries(e,t,s){const[r,o]=_o(e,t,s),i=this.queryCache,a={type:"active",...r};return Xn.batch(()=>(i.findAll(r).forEach(c=>{c.reset()}),this.refetchQueries(a,o)))}cancelQueries(e,t,s){const[r,o={}]=_o(e,t,s);typeof o.revert>"u"&&(o.revert=!0);const i=Xn.batch(()=>this.queryCache.findAll(r).map(a=>a.cancel(o)));return Promise.all(i).then(dr).catch(dr)}invalidateQueries(e,t,s){const[r,o]=_o(e,t,s);return Xn.batch(()=>{var i,a;if(this.queryCache.findAll(r).forEach(l=>{l.invalidate()}),r.refetchType==="none")return Promise.resolve();const c={...r,type:(i=(a=r.refetchType)!=null?a:r.type)!=null?i:"active"};return this.refetchQueries(c,o)})}refetchQueries(e,t,s){const[r,o]=_o(e,t,s),i=Xn.batch(()=>this.queryCache.findAll(r).filter(c=>!c.isDisabled()).map(c=>{var l;return c.fetch(void 0,{...o,cancelRefetch:(l=o?.cancelRefetch)!=null?l:!0,meta:{refetchPage:r.refetchPage}})}));let a=Promise.all(i).then(dr);return o!=null&&o.throwOnError||(a=a.catch(dr)),a}fetchQuery(e,t,s){const r=jh(e,t,s),o=this.defaultQueryOptions(r);typeof o.retry>"u"&&(o.retry=!1);const i=this.queryCache.build(this,o);return i.isStaleByTime(o.staleTime)?i.fetch(o):Promise.resolve(i.state.data)}prefetchQuery(e,t,s){return this.fetchQuery(e,t,s).then(dr).catch(dr)}fetchInfiniteQuery(e,t,s){const r=jh(e,t,s);return r.behavior=p3(),this.fetchQuery(r)}prefetchInfiniteQuery(e,t,s){return this.fetchInfiniteQuery(e,t,s).then(dr).catch(dr)}resumePausedMutations(){return this.mutationCache.resumePausedMutations()}getQueryCache(){return this.queryCache}getMutationCache(){return this.mutationCache}getLogger(){return this.logger}getDefaultOptions(){return this.defaultOptions}setDefaultOptions(e){this.defaultOptions=e}setQueryDefaults(e,t){const s=this.queryDefaults.find(r=>Di(e)===Di(r.queryKey));s?s.defaultOptions=t:this.queryDefaults.push({queryKey:e,defaultOptions:t})}getQueryDefaults(e){if(!e)return;const t=this.queryDefaults.find(s=>qp(e,s.queryKey));return t?.defaultOptions}setMutationDefaults(e,t){const s=this.mutationDefaults.find(r=>Di(e)===Di(r.mutationKey));s?s.defaultOptions=t:this.mutationDefaults.push({mutationKey:e,defaultOptions:t})}getMutationDefaults(e){if(!e)return;const t=this.mutationDefaults.find(s=>qp(e,s.mutationKey));return t?.defaultOptions}defaultQueryOptions(e){if(e!=null&&e._defaulted)return e;const t={...this.defaultOptions.queries,...this.getQueryDefaults(e?.queryKey),...e,_defaulted:!0};return!t.queryHash&&t.queryKey&&(t.queryHash=g0(t.queryKey,t)),typeof t.refetchOnReconnect>"u"&&(t.refetchOnReconnect=t.networkMode!=="always"),typeof t.useErrorBoundary>"u"&&(t.useErrorBoundary=!!t.suspense),t}defaultMutationOptions(e){return e!=null&&e._defaulted?e:{...this.defaultOptions.mutations,...this.getMutationDefaults(e?.mutationKey),...e,_defaulted:!0}}clear(){this.queryCache.clear(),this.mutationCache.clear()}}const Eo="https://api.polarr.co/polarr-next";new m3;const Nb=new Map;function g3(n){Nb.set(n,!0),setTimeout(()=>Nb.delete(n),1e4)}u(g3,"registerProjectIdAsDeleted");function y3(n){Nb.delete(n)}u(y3,"removeProjectIdAsDeleted");const Ft=un.create({baseURL:Eo});jo(Ft,{retryDelay:jo.exponentialDelay});class O1{static{u(this,"PNApiOperations")}static basePaths={payment:`${Eo}/payment`,presets:`${Eo}/presets`,projects:`${Eo}/projects`,images:`${Eo}/images`,serviceStatus:`${Eo}/service-status`,signedUrls:`${Eo}/upload/signed-urls`,users:`${Eo}/iam/users`};static listImages=async e=>(await Ft.get(this.basePaths.images,{params:e})).data;static getImage=async e=>(await Ft.get(`${this.basePaths.images}/${e}`)).data;static createImage=async e=>(await Ft.post(this.basePaths.images,e)).data;static deleteImage=async e=>{await Ft.delete(`${this.basePaths.images}/${e}`)};static listPresets=async e=>(await Ft.get(this.basePaths.presets,{params:e})).data;static getPreset=async e=>(await Ft.get(`${this.basePaths.presets}/${e}`)).data;static createPreset=async e=>(await Ft.post(this.basePaths.presets,e)).data;static updatePreset=async(e,t)=>(await Ft.patch(`${this.basePaths.presets}/${e}`,t)).data;static deletePreset=async e=>{await Ft.delete(`${this.basePaths.presets}/${e}`)};static listProjects=async e=>(await Ft.get(this.basePaths.projects,{params:e})).data;static getProject=async e=>(await Ft.get(`${this.basePaths.projects}/${e}`)).data;static createProject=async e=>{const t=await Ft.post(this.basePaths.projects,e);return y3(t.data.projectId),t.data};static updateProject=async(e,t)=>(await Ft.patch(`${this.basePaths.projects}/${e}`,t)).data;static deleteProject=async e=>{await Ft.delete(`${this.basePaths.projects}/${e}`),g3(e)};static getSignedUrls=async e=>{const t={"content-types":e.map(r=>r.contentType).join(","),"entity-types":e.map(r=>r.entityType).join(","),"content-digests":e.map(r=>r.contentDigest??"").join(",")};return(await Ft.get(this.basePaths.signedUrls,{params:t})).data.urls};static getCurrentUser=async()=>(await Ft.get(`${this.basePaths.users}/@me`)).data;static deleteCurrentUser=async()=>{const e=await Ft.delete(`${this.basePaths.users}/@me`);return e.status===200||e.status===202||e.status===204};static getUserActivities=async e=>{const t=`${this.basePaths.users}/@me/activity-events`;return(await Ft.get(t,{params:e})).data};static getServiceStatus=async()=>(await fetch(this.basePaths.serviceStatus)).json();static getPaymentPlans=async()=>(await fetch(`${this.basePaths.payment}/plans`)).json();static createStripeCheckoutSession=async e=>(await Ft.post(`${this.basePaths.payment}/stripe/checkout-sessions`,e)).data;static createStripeCustomerPortalSession=async()=>(await Ft.post(`${this.basePaths.payment}/stripe/customer-portal-sessions`)).data;static redeemPromoCode=async e=>(await Ft.post(`${this.basePaths.payment}/promo-codes/redemptions`,e)).data;static reportCreditConsumptionEvents=async e=>{await Ft.post(`${this.basePaths.payment}/credit-consumption/events`,e)};static uploadContent=async e=>{const t=await Ft.put(e.url,e.data,{transformRequest:(s,r)=>(delete r.Authorization,r["Content-Type"]=e.contentType??e.data.type,s)});return{url:this.convertToCDNUrl(t.data.url)}};static convertToCDNUrl=e=>{const t=new URL(e);return t.host==="polarr-playground-images.s3.us-west-1.amazonaws.com"&&(t.host="images.polarr.co"),t.toString()}}const Jk=Object.prototype.toString;function x0(n){switch(Jk.call(n)){case"[object Error]":case"[object Exception]":case"[object DOMException]":case"[object WebAssembly.Exception]":return!0;default:return mo(n,Error)}}u(x0,"isError");function Oc(n,e){return Jk.call(n)===`[object ${e}]`}u(Oc,"isBuiltin");function Zk(n){return Oc(n,"ErrorEvent")}u(Zk,"isErrorEvent$2");function F1(n){return Oc(n,"DOMError")}u(F1,"isDOMError");function b3(n){return Oc(n,"DOMException")}u(b3,"isDOMException");function co(n){return Oc(n,"String")}u(co,"isString$1");function w0(n){return typeof n=="object"&&n!==null&&"__sentry_template_string__"in n&&"__sentry_template_values__"in n}u(w0,"isParameterizedString");function S0(n){return n===null||w0(n)||typeof n!="object"&&typeof n!="function"}u(S0,"isPrimitive");function dc(n){return Oc(n,"Object")}u(dc,"isPlainObject");function tm(n){return typeof Event<"u"&&mo(n,Event)}u(tm,"isEvent");function x3(n){return typeof Element<"u"&&mo(n,Element)}u(x3,"isElement$2");function w3(n){return Oc(n,"RegExp")}u(w3,"isRegExp");function nm(n){return!!(n&&n.then&&typeof n.then=="function")}u(nm,"isThenable");function S3(n){return dc(n)&&"nativeEvent"in n&&"preventDefault"in n&&"stopPropagation"in n}u(S3,"isSyntheticEvent");function mo(n,e){try{return n instanceof e}catch{return!1}}u(mo,"isInstanceOf");function e$(n){return!!(typeof n=="object"&&n!==null&&(n.__isVue||n._isVue))}u(e$,"isVueViewModel");function nc(n,e=0){return typeof n!="string"||e===0||n.length<=e?n:`${n.slice(0,e)}...`}u(nc,"truncate");function P1(n,e){if(!Array.isArray(n))return"";const t=[];for(let s=0;s<n.length;s++){const r=n[s];try{e$(r)?t.push("[VueViewModel]"):t.push(String(r))}catch{t.push("[value cannot be serialized]")}}return t.join(e)}u(P1,"safeJoin");function C3(n,e,t=!1){return co(n)?w3(e)?e.test(n):co(e)?t?n===e:n.includes(e):!1:!1}u(C3,"isMatchingPattern");function Wo(n,e=[],t=!1){return e.some(s=>C3(n,s,t))}u(Wo,"stringMatchesSomePattern");function v3(n,e,t=250,s,r,o,i){if(!o.exception||!o.exception.values||!i||!mo(i.originalException,Error))return;const a=o.exception.values.length>0?o.exception.values[o.exception.values.length-1]:void 0;a&&(o.exception.values=I3(Tb(n,e,r,i.originalException,s,o.exception.values,a,0),t))}u(v3,"applyAggregateErrorsToEvent");function Tb(n,e,t,s,r,o,i,a){if(o.length>=t+1)return o;let c=[...o];if(mo(s[r],Error)){L1(i,a);const l=n(e,s[r]),d=c.length;M1(l,r,d,a),c=Tb(n,e,t,s[r],r,[l,...c],l,d)}return Array.isArray(s.errors)&&s.errors.forEach((l,d)=>{if(mo(l,Error)){L1(i,a);const h=n(e,l),p=c.length;M1(h,`errors[${d}]`,p,a),c=Tb(n,e,t,l,r,[h,...c],h,p)}}),c}u(Tb,"aggregateExceptionsFromError");function L1(n,e){n.mechanism=n.mechanism||{type:"generic",handled:!0},n.mechanism={...n.mechanism,...n.type==="AggregateError"&&{is_exception_group:!0},exception_id:e}}u(L1,"applyExceptionGroupFieldsForParentException");function M1(n,e,t,s){n.mechanism=n.mechanism||{type:"generic",handled:!0},n.mechanism={...n.mechanism,type:"chained",source:e,exception_id:t,parent_id:s}}u(M1,"applyExceptionGroupFieldsForChildException");function I3(n,e){return n.map(t=>(t.value&&(t.value=nc(t.value,e)),t))}u(I3,"truncateAggregateExceptions");function t$(n){if(n!==void 0)return n>=400&&n<500?"warning":n>=500?"error":void 0}u(t$,"getBreadcrumbLogLevelFromHttpStatusCode");const zi="8.37.1",ot=globalThis;function sm(n,e,t){const s=t||ot,r=s.__SENTRY__=s.__SENTRY__||{},o=r[zi]=r[zi]||{};return o[n]||(o[n]=e())}u(sm,"getGlobalSingleton");const sc=ot,k3=80;function go(n,e={}){if(!n)return"<unknown>";try{let t=n;const s=5,r=[];let o=0,i=0;const a=" > ",c=a.length;let l;const d=Array.isArray(e)?e:e.keyAttrs,h=!Array.isArray(e)&&e.maxStringLength||k3;for(;t&&o++<s&&(l=$3(t,d),!(l==="html"||o>1&&i+r.length*c+l.length>=h));)r.push(l),i+=l.length,t=t.parentNode;return r.reverse().join(a)}catch{return"<unknown>"}}u(go,"htmlTreeAsString");function $3(n,e){const t=n,s=[];if(!t||!t.tagName)return"";if(sc.HTMLElement&&t instanceof HTMLElement&&t.dataset){if(t.dataset.sentryComponent)return t.dataset.sentryComponent;if(t.dataset.sentryElement)return t.dataset.sentryElement}s.push(t.tagName.toLowerCase());const r=e&&e.length?e.filter(i=>t.getAttribute(i)).map(i=>[i,t.getAttribute(i)]):null;if(r&&r.length)r.forEach(i=>{s.push(`[${i[0]}="${i[1]}"]`)});else{t.id&&s.push(`#${t.id}`);const i=t.className;if(i&&co(i)){const a=i.split(/\s+/);for(const c of a)s.push(`.${c}`)}}const o=["aria-label","type","name","title","alt"];for(const i of o){const a=t.getAttribute(i);a&&s.push(`[${i}="${a}"]`)}return s.join("")}u($3,"_htmlElementAsString");function n$(){try{return sc.document.location.href}catch{return""}}u(n$,"getLocationHref");function N3(n){return sc.document&&sc.document.querySelector?sc.document.querySelector(n):null}u(N3,"getDomElement");function s$(n){if(!sc.HTMLElement)return null;let e=n;const t=5;for(let s=0;s<t;s++){if(!e)return null;if(e instanceof HTMLElement){if(e.dataset.sentryComponent)return e.dataset.sentryComponent;if(e.dataset.sentryElement)return e.dataset.sentryElement}e=e.parentNode}return null}u(s$,"getComponentName");const ha=typeof __SENTRY_DEBUG__>"u"||__SENTRY_DEBUG__,T3="Sentry Logger ",Eb=["debug","info","warn","error","log","assert","trace"],Xp={};function Fc(n){if(!("console"in ot))return n();const e=ot.console,t={},s=Object.keys(Xp);s.forEach(r=>{const o=Xp[r];t[r]=e[r],e[r]=o});try{return n()}finally{s.forEach(r=>{e[r]=t[r]})}}u(Fc,"consoleSandbox");function E3(){let n=!1;const e={enable:()=>{n=!0},disable:()=>{n=!1},isEnabled:()=>n};return ha?Eb.forEach(t=>{e[t]=(...s)=>{n&&Fc(()=>{ot.console[t](`${T3}[${t}]:`,...s)})}}):Eb.forEach(t=>{e[t]=()=>{}}),e}u(E3,"makeLogger");const ae=sm("logger",E3),_3=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;function R3(n){return n==="http"||n==="https"}u(R3,"isValidProtocol");function od(n,e=!1){const{host:t,path:s,pass:r,port:o,projectId:i,protocol:a,publicKey:c}=n;return`${a}://${c}${e&&r?`:${r}`:""}@${t}${o?`:${o}`:""}/${s&&`${s}/`}${i}`}u(od,"dsnToString");function A3(n){const e=_3.exec(n);if(!e){Fc(()=>{console.error(`Invalid Sentry Dsn: ${n}`)});return}const[t,s,r="",o="",i="",a=""]=e.slice(1);let c="",l=a;const d=l.split("/");if(d.length>1&&(c=d.slice(0,-1).join("/"),l=d.pop()),l){const h=l.match(/^\d+/);h&&(l=h[0])}return r$({host:o,pass:r,path:c,projectId:l,port:i,protocol:t,publicKey:s})}u(A3,"dsnFromString");function r$(n){return{protocol:n.protocol,publicKey:n.publicKey||"",pass:n.pass||"",host:n.host,port:n.port||"",path:n.path||"",projectId:n.projectId}}u(r$,"dsnFromComponents");function D3(n){if(!ha)return!0;const{port:e,projectId:t,protocol:s}=n;return["protocol","publicKey","host","projectId"].find(i=>n[i]?!1:(ae.error(`Invalid Sentry Dsn: ${i} missing`),!0))?!1:t.match(/^\d+$/)?R3(s)?e&&isNaN(parseInt(e,10))?(ae.error(`Invalid Sentry Dsn: Invalid port ${e}`),!1):!0:(ae.error(`Invalid Sentry Dsn: Invalid protocol ${s}`),!1):(ae.error(`Invalid Sentry Dsn: Invalid projectId ${t}`),!1)}u(D3,"validateDsn");function O3(n){const e=typeof n=="string"?A3(n):r$(n);if(!(!e||!D3(e)))return e}u(O3,"makeDsn");class Fr extends Error{static{u(this,"SentryError")}constructor(e,t="warn"){super(e),this.message=e,this.name=new.target.prototype.constructor.name,Object.setPrototypeOf(this,new.target.prototype),this.logLevel=t}}function ps(n,e,t){if(!(e in n))return;const s=n[e],r=t(s);typeof r=="function"&&o$(r,s),n[e]=r}u(ps,"fill$4");function nr(n,e,t){try{Object.defineProperty(n,e,{value:t,writable:!0,configurable:!0})}catch{ha&&ae.log(`Failed to add non-enumerable property "${e}" to object`,n)}}u(nr,"addNonEnumerableProperty");function o$(n,e){try{const t=e.prototype||{};n.prototype=e.prototype=t,nr(n,"__sentry_original__",e)}catch{}}u(o$,"markFunctionWrapped");function C0(n){return n.__sentry_original__}u(C0,"getOriginalFunction");function F3(n){return Object.keys(n).map(e=>`${encodeURIComponent(e)}=${encodeURIComponent(n[e])}`).join("&")}u(F3,"urlEncode");function i$(n){if(x0(n))return{message:n.message,name:n.name,stack:n.stack,...B1(n)};if(tm(n)){const e={type:n.type,target:z1(n.target),currentTarget:z1(n.currentTarget),...B1(n)};return typeof CustomEvent<"u"&&mo(n,CustomEvent)&&(e.detail=n.detail),e}else return n}u(i$,"convertToPlainObject");function z1(n){try{return x3(n)?go(n):Object.prototype.toString.call(n)}catch{return"<unknown>"}}u(z1,"serializeEventTarget");function B1(n){if(typeof n=="object"&&n!==null){const e={};for(const t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e}else return{}}u(B1,"getOwnProperties");function P3(n,e=40){const t=Object.keys(i$(n));t.sort();const s=t[0];if(!s)return"[object has no keys]";if(s.length>=e)return nc(s,e);for(let r=t.length;r>0;r--){const o=t.slice(0,r).join(", ");if(!(o.length>e))return r===t.length?o:nc(o,e)}return""}u(P3,"extractExceptionKeysForMessage");function yn(n){return _b(n,new Map)}u(yn,"dropUndefinedKeys");function _b(n,e){if(L3(n)){const t=e.get(n);if(t!==void 0)return t;const s={};e.set(n,s);for(const r of Object.getOwnPropertyNames(n))typeof n[r]<"u"&&(s[r]=_b(n[r],e));return s}if(Array.isArray(n)){const t=e.get(n);if(t!==void 0)return t;const s=[];return e.set(n,s),n.forEach(r=>{s.push(_b(r,e))}),s}return n}u(_b,"_dropUndefinedKeys");function L3(n){if(!dc(n))return!1;try{const e=Object.getPrototypeOf(n).constructor.name;return!e||e==="Object"}catch{return!0}}u(L3,"isPojo");const a$=50,qi="?",W1=/\(error: (.*)\)/,V1=/captureMessage|captureException/;function c$(...n){const e=n.sort((t,s)=>t[0]-s[0]).map(t=>t[1]);return(t,s=0,r=0)=>{const o=[],i=t.split(`
`);for(let a=s;a<i.length;a++){const c=i[a];if(c.length>1024)continue;const l=W1.test(c)?c.replace(W1,"$1"):c;if(!l.match(/\S*Error: /)){for(const d of e){const h=d(l);if(h){o.push(h);break}}if(o.length>=a$+r)break}}return z3(o.slice(r))}}u(c$,"createStackParser");function M3(n){return Array.isArray(n)?c$(...n):n}u(M3,"stackParserFromStackParserOptions");function z3(n){if(!n.length)return[];const e=Array.from(n);return/sentryWrapped/.test(qh(e).function||"")&&e.pop(),e.reverse(),V1.test(qh(e).function||"")&&(e.pop(),V1.test(qh(e).function||"")&&e.pop()),e.slice(0,a$).map(t=>({...t,filename:t.filename||qh(e).filename,function:t.function||qi}))}u(z3,"stripSentryFramesAndReverse");function qh(n){return n[n.length-1]||{}}u(qh,"getLastStackFrame");const My="<anonymous>";function yo(n){try{return!n||typeof n!="function"?My:n.name||My}catch{return My}}u(yo,"getFunctionName");function U1(n){const e=n.exception;if(e){const t=[];try{return e.values.forEach(s=>{s.stacktrace.frames&&t.push(...s.stacktrace.frames)}),t}catch{return}}}u(U1,"getFramesFromEvent");const Tp={},G1={};function oi(n,e){Tp[n]=Tp[n]||[],Tp[n].push(e)}u(oi,"addHandler$1");function ii(n,e){if(!G1[n]){G1[n]=!0;try{e()}catch(t){ha&&ae.error(`Error while instrumenting ${n}`,t)}}}u(ii,"maybeInstrument");function Js(n,e){const t=n&&Tp[n];if(t)for(const s of t)try{s(e)}catch(r){ha&&ae.error(`Error while triggering instrumentation handler.
Type: ${n}
Name: ${yo(s)}
Error:`,r)}}u(Js,"triggerHandlers$1");function B3(n){const e="console";oi(e,n),ii(e,W3)}u(B3,"addConsoleInstrumentationHandler");function W3(){"console"in ot&&Eb.forEach(function(n){n in ot.console&&ps(ot.console,n,function(e){return Xp[n]=e,function(...t){Js("console",{args:t,level:n});const r=Xp[n];r&&r.apply(ot.console,t)}})})}u(W3,"instrumentConsole");const Rb=ot;function u$(){if(!("fetch"in Rb))return!1;try{return new Headers,new Request("http://www.example.com"),new Response,!0}catch{return!1}}u(u$,"supportsFetch");function Ab(n){return n&&/^function\s+\w+\(\)\s+\{\s+\[native code\]\s+\}$/.test(n.toString())}u(Ab,"isNativeFunction");function V3(){if(typeof EdgeRuntime=="string")return!0;if(!u$())return!1;if(Ab(Rb.fetch))return!0;let n=!1;const e=Rb.document;if(e&&typeof e.createElement=="function")try{const t=e.createElement("iframe");t.hidden=!0,e.head.appendChild(t),t.contentWindow&&t.contentWindow.fetch&&(n=Ab(t.contentWindow.fetch)),e.head.removeChild(t)}catch(t){ha&&ae.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",t)}return n}u(V3,"supportsNativeFetch");const l$=1e3;function id(){return Date.now()/l$}u(id,"dateTimestampInSeconds");function U3(){const{performance:n}=ot;if(!n||!n.now)return id;const e=Date.now()-n.now(),t=n.timeOrigin==null?e:n.timeOrigin;return()=>(t+n.now())/l$}u(U3,"createUnixTimestampInSecondsFunc");const Zn=U3(),ss=(()=>{const{performance:n}=ot;if(!n||!n.now)return;const e=3600*1e3,t=n.now(),s=Date.now(),r=n.timeOrigin?Math.abs(n.timeOrigin+t-s):e,o=r<e,i=n.timing&&n.timing.navigationStart,c=typeof i=="number"?Math.abs(i+t-s):e,l=c<e;return o||l?r<=c?n.timeOrigin:i:s})();function d$(n,e){const t="fetch";oi(t,n),ii(t,()=>h$(void 0,e))}u(d$,"addFetchInstrumentationHandler");function G3(n){const e="fetch-body-resolved";oi(e,n),ii(e,()=>h$(j3))}u(G3,"addFetchEndInstrumentationHandler");function h$(n,e=!1){e&&!V3()||ps(ot,"fetch",function(t){return function(...s){const{method:r,url:o}=q3(s),i={args:s,fetchData:{method:r,url:o},startTimestamp:Zn()*1e3};n||Js("fetch",{...i});const a=new Error().stack;return t.apply(ot,s).then(async c=>(n?n(c):Js("fetch",{...i,endTimestamp:Zn()*1e3,response:c}),c),c=>{throw Js("fetch",{...i,endTimestamp:Zn()*1e3,error:c}),x0(c)&&c.stack===void 0&&(c.stack=a,nr(c,"framesToPop",1)),c})}})}u(h$,"instrumentFetch");async function H3(n,e){if(n&&n.body){const t=n.body,s=t.getReader(),r=setTimeout(()=>{t.cancel().then(null,()=>{})},90*1e3);let o=!0;for(;o;){let i;try{i=setTimeout(()=>{t.cancel().then(null,()=>{})},5e3);const{done:a}=await s.read();clearTimeout(i),a&&(e(),o=!1)}catch{o=!1}finally{clearTimeout(i)}}clearTimeout(r),s.releaseLock(),t.cancel().then(null,()=>{})}}u(H3,"resolveResponse");function j3(n){let e;try{e=n.clone()}catch{return}H3(e,()=>{Js("fetch-body-resolved",{endTimestamp:Zn()*1e3,response:n})})}u(j3,"streamHandler");function Db(n,e){return!!n&&typeof n=="object"&&!!n[e]}u(Db,"hasProp");function H1(n){return typeof n=="string"?n:n?Db(n,"url")?n.url:n.toString?n.toString():"":""}u(H1,"getUrlFromResource");function q3(n){if(n.length===0)return{method:"GET",url:""};if(n.length===2){const[t,s]=n;return{url:H1(t),method:Db(s,"method")?String(s.method).toUpperCase():"GET"}}const e=n[0];return{url:H1(e),method:Db(e,"method")?String(e.method).toUpperCase():"GET"}}u(q3,"parseFetchArgs");let Kh=null;function p$(n){const e="error";oi(e,n),ii(e,K3)}u(p$,"addGlobalErrorInstrumentationHandler");function K3(){Kh=ot.onerror,ot.onerror=function(n,e,t,s,r){return Js("error",{column:s,error:r,line:t,msg:n,url:e}),Kh&&!Kh.__SENTRY_LOADER__?Kh.apply(this,arguments):!1},ot.onerror.__SENTRY_INSTRUMENTED__=!0}u(K3,"instrumentError");let Xh=null;function f$(n){const e="unhandledrejection";oi(e,n),ii(e,X3)}u(f$,"addGlobalUnhandledRejectionInstrumentationHandler");function X3(){Xh=ot.onunhandledrejection,ot.onunhandledrejection=function(n){return Js("unhandledrejection",n),Xh&&!Xh.__SENTRY_LOADER__?Xh.apply(this,arguments):!0},ot.onunhandledrejection.__SENTRY_INSTRUMENTED__=!0}u(X3,"instrumentUnhandledRejection");function Y3(){return typeof __SENTRY_BROWSER_BUNDLE__<"u"&&!!__SENTRY_BROWSER_BUNDLE__}u(Y3,"isBrowserBundle");function Q3(){return"npm"}u(Q3,"getSDKSource");function J3(){return!Y3()&&Object.prototype.toString.call(typeof process<"u"?process:0)==="[object process]"}u(J3,"isNodeEnv");function j1(){return typeof window<"u"&&(!J3()||Z3())}u(j1,"isBrowser$1");function Z3(){return ot.process!==void 0&&ot.process.type==="renderer"}u(Z3,"isElectronNodeRenderer");function eL(){const n=typeof WeakSet=="function",e=n?new WeakSet:[];function t(r){if(n)return e.has(r)?!0:(e.add(r),!1);for(let o=0;o<e.length;o++)if(e[o]===r)return!0;return e.push(r),!1}u(t,"memoize");function s(r){if(n)e.delete(r);else for(let o=0;o<e.length;o++)if(e[o]===r){e.splice(o,1);break}}return u(s,"unmemoize"),[t,s]}u(eL,"memoBuilder");function zt(){const n=ot,e=n.crypto||n.msCrypto;let t=u(()=>Math.random()*16,"getRandomByte");try{if(e&&e.randomUUID)return e.randomUUID().replace(/-/g,"");e&&e.getRandomValues&&(t=u(()=>{const s=new Uint8Array(1);return e.getRandomValues(s),s[0]},"getRandomByte"))}catch{}return("10000000100040008000"+1e11).replace(/[018]/g,s=>(s^(t()&15)>>s/4).toString(16))}u(zt,"uuid4");function m$(n){return n.exception&&n.exception.values?n.exception.values[0]:void 0}u(m$,"getFirstException");function Ro(n){const{message:e,event_id:t}=n;if(e)return e;const s=m$(n);return s?s.type&&s.value?`${s.type}: ${s.value}`:s.type||s.value||t||"<unknown>":t||"<unknown>"}u(Ro,"getEventDescription");function Ob(n,e,t){const s=n.exception=n.exception||{},r=s.values=s.values||[],o=r[0]=r[0]||{};o.value||(o.value=e||""),o.type||(o.type=t||"Error")}u(Ob,"addExceptionTypeValue");function El(n,e){const t=m$(n);if(!t)return;const s={type:"generic",handled:!0},r=t.mechanism;if(t.mechanism={...s,...r,...e},e&&"data"in e){const o={...r&&r.data,...e.data};t.mechanism.data=o}}u(El,"addExceptionMechanism");function q1(n){if(n&&n.__sentry_captured__)return!0;try{nr(n,"__sentry_captured__",!0)}catch{}return!1}u(q1,"checkOrSetAlreadyCaught");function g$(n){return Array.isArray(n)?n:[n]}u(g$,"arrayify");function Rr(n,e=100,t=1/0){try{return Fb("",n,e,t)}catch(s){return{ERROR:`**non-serializable** (${s})`}}}u(Rr,"normalize$1");function y$(n,e=3,t=100*1024){const s=Rr(n,e);return rL(s)>t?y$(n,e-1,t):s}u(y$,"normalizeToSize");function Fb(n,e,t=1/0,s=1/0,r=eL()){const[o,i]=r;if(e==null||["boolean","string"].includes(typeof e)||typeof e=="number"&&Number.isFinite(e))return e;const a=tL(n,e);if(!a.startsWith("[object "))return a;if(e.__sentry_skip_normalization__)return e;const c=typeof e.__sentry_override_normalization_depth__=="number"?e.__sentry_override_normalization_depth__:t;if(c===0)return a.replace("object ","");if(o(e))return"[Circular ~]";const l=e;if(l&&typeof l.toJSON=="function")try{const f=l.toJSON();return Fb("",f,c-1,s,r)}catch{}const d=Array.isArray(e)?[]:{};let h=0;const p=i$(e);for(const f in p){if(!Object.prototype.hasOwnProperty.call(p,f))continue;if(h>=s){d[f]="[MaxProperties ~]";break}const m=p[f];d[f]=Fb(f,m,c-1,s,r),h++}return i(e),d}u(Fb,"visit");function tL(n,e){try{if(n==="domain"&&e&&typeof e=="object"&&e._events)return"[Domain]";if(n==="domainEmitter")return"[DomainEmitter]";if(typeof global<"u"&&e===global)return"[Global]";if(typeof window<"u"&&e===window)return"[Window]";if(typeof document<"u"&&e===document)return"[Document]";if(e$(e))return"[VueViewModel]";if(S3(e))return"[SyntheticEvent]";if(typeof e=="number"&&!Number.isFinite(e))return`[${e}]`;if(typeof e=="function")return`[Function: ${yo(e)}]`;if(typeof e=="symbol")return`[${String(e)}]`;if(typeof e=="bigint")return`[BigInt: ${String(e)}]`;const t=nL(e);return/^HTML(\w*)Element$/.test(t)?`[HTMLElement: ${t}]`:`[object ${t}]`}catch(t){return`**non-serializable** (${t})`}}u(tL,"stringifyValue");function nL(n){const e=Object.getPrototypeOf(n);return e?e.constructor.name:"null prototype"}u(nL,"getConstructorName");function sL(n){return~-encodeURI(n).split(/%..|./).length}u(sL,"utf8Length");function rL(n){return sL(JSON.stringify(n))}u(rL,"jsonSize");var eo;(function(n){n[n.PENDING=0]="PENDING";const t=1;n[n.RESOLVED=t]="RESOLVED";const s=2;n[n.REJECTED=s]="REJECTED"})(eo||(eo={}));function bo(n){return new Us(e=>{e(n)})}u(bo,"resolvedSyncPromise");function Yp(n){return new Us((e,t)=>{t(n)})}u(Yp,"rejectedSyncPromise");class Us{static{u(this,"SyncPromise")}constructor(e){Us.prototype.__init.call(this),Us.prototype.__init2.call(this),Us.prototype.__init3.call(this),Us.prototype.__init4.call(this),this._state=eo.PENDING,this._handlers=[];try{e(this._resolve,this._reject)}catch(t){this._reject(t)}}then(e,t){return new Us((s,r)=>{this._handlers.push([!1,o=>{if(!e)s(o);else try{s(e(o))}catch(i){r(i)}},o=>{if(!t)r(o);else try{s(t(o))}catch(i){r(i)}}]),this._executeHandlers()})}catch(e){return this.then(t=>t,e)}finally(e){return new Us((t,s)=>{let r,o;return this.then(i=>{o=!1,r=i,e&&e()},i=>{o=!0,r=i,e&&e()}).then(()=>{if(o){s(r);return}t(r)})})}__init(){this._resolve=e=>{this._setResult(eo.RESOLVED,e)}}__init2(){this._reject=e=>{this._setResult(eo.REJECTED,e)}}__init3(){this._setResult=(e,t)=>{if(this._state===eo.PENDING){if(nm(t)){t.then(this._resolve,this._reject);return}this._state=e,this._value=t,this._executeHandlers()}}}__init4(){this._executeHandlers=()=>{if(this._state===eo.PENDING)return;const e=this._handlers.slice();this._handlers=[],e.forEach(t=>{t[0]||(this._state===eo.RESOLVED&&t[1](this._value),this._state===eo.REJECTED&&t[2](this._value),t[0]=!0)})}}}function oL(n){const e=[];function t(){return n===void 0||e.length<n}u(t,"isReady");function s(i){return e.splice(e.indexOf(i),1)[0]||Promise.resolve(void 0)}u(s,"remove");function r(i){if(!t())return Yp(new Fr("Not adding Promise because buffer limit was reached."));const a=i();return e.indexOf(a)===-1&&e.push(a),a.then(()=>s(a)).then(null,()=>s(a).then(null,()=>{})),a}u(r,"add");function o(i){return new Us((a,c)=>{let l=e.length;if(!l)return a(!0);const d=setTimeout(()=>{i&&i>0&&a(!1)},i);e.forEach(h=>{bo(h).then(()=>{--l||(clearTimeout(d),a(!0))},c)})})}return u(o,"drain"),{$:e,add:r,drain:o}}u(oL,"makePromiseBuffer");function Bi(n){if(!n)return{};const e=n.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);if(!e)return{};const t=e[6]||"",s=e[8]||"";return{host:e[4],path:e[5],protocol:e[2],search:t,hash:s,relative:e[5]+t+s}}u(Bi,"parseUrl$2");const iL=["fatal","error","warning","log","info","debug"];function b$(n){return n==="warn"?"warning":iL.includes(n)?n:"log"}u(b$,"severityLevelFromString");const Ha="baggage",v0="sentry-",aL=/^sentry-/,cL=8192;function x$(n){const e=uL(n);if(!e)return;const t=Object.entries(e).reduce((s,[r,o])=>{if(r.match(aL)){const i=r.slice(v0.length);s[i]=o}return s},{});if(Object.keys(t).length>0)return t}u(x$,"baggageHeaderToDynamicSamplingContext");function w$(n){if(!n)return;const e=Object.entries(n).reduce((t,[s,r])=>(r&&(t[`${v0}${s}`]=r),t),{});return lL(e)}u(w$,"dynamicSamplingContextToSentryBaggageHeader");function uL(n){if(!(!n||!co(n)&&!Array.isArray(n)))return Array.isArray(n)?n.reduce((e,t)=>{const s=K1(t);return Object.entries(s).forEach(([r,o])=>{e[r]=o}),e},{}):K1(n)}u(uL,"parseBaggageHeader");function K1(n){return n.split(",").map(e=>e.split("=").map(t=>decodeURIComponent(t.trim()))).reduce((e,[t,s])=>(t&&s&&(e[t]=s),e),{})}u(K1,"baggageHeaderToObject");function lL(n){if(Object.keys(n).length!==0)return Object.entries(n).reduce((e,[t,s],r)=>{const o=`${encodeURIComponent(t)}=${encodeURIComponent(s)}`,i=r===0?o:`${e},${o}`;return i.length>cL?(ha&&ae.warn(`Not adding key: ${t} with val: ${s} to baggage header due to exceeding baggage size limits.`),e):i},"")}u(lL,"objectToBaggageHeader");const dL=new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");function hL(n){if(!n)return;const e=n.match(dL);if(!e)return;let t;return e[3]==="1"?t=!0:e[3]==="0"&&(t=!1),{traceId:e[1],parentSampled:t,parentSpanId:e[2]}}u(hL,"extractTraceparentData");function pL(n,e){const t=hL(n),s=x$(e),{traceId:r,parentSpanId:o,parentSampled:i}=t||{};return t?{traceId:r||zt(),parentSpanId:o||zt().substring(16),spanId:zt().substring(16),sampled:i,dsc:s||{}}:{traceId:r||zt(),spanId:zt().substring(16)}}u(pL,"propagationContextFromHeaders");function I0(n=zt(),e=zt().substring(16),t){let s="";return t!==void 0&&(s=t?"-1":"-0"),`${n}-${e}${s}`}u(I0,"generateSentryTraceHeader");function pa(n,e=[]){return[n,e]}u(pa,"createEnvelope");function fL(n,e){const[t,s]=n;return[t,[...s,e]]}u(fL,"addItemToEnvelope");function X1(n,e){const t=n[1];for(const s of t){const r=s[0].type;if(e(s,r))return!0}return!1}u(X1,"forEachEnvelopeItem");function Pb(n){return ot.__SENTRY__&&ot.__SENTRY__.encodePolyfill?ot.__SENTRY__.encodePolyfill(n):new TextEncoder().encode(n)}u(Pb,"encodeUTF8");function mL(n){const[e,t]=n;let s=JSON.stringify(e);function r(o){typeof s=="string"?s=typeof o=="string"?s+o:[Pb(s),o]:s.push(typeof o=="string"?Pb(o):o)}u(r,"append");for(const o of t){const[i,a]=o;if(r(`
${JSON.stringify(i)}
`),typeof a=="string"||a instanceof Uint8Array)r(a);else{let c;try{c=JSON.stringify(a)}catch{c=JSON.stringify(Rr(a))}r(c)}}return typeof s=="string"?s:gL(s)}u(mL,"serializeEnvelope");function gL(n){const e=n.reduce((r,o)=>r+o.length,0),t=new Uint8Array(e);let s=0;for(const r of n)t.set(r,s),s+=r.length;return t}u(gL,"concatBuffers");function yL(n){return[{type:"span"},n]}u(yL,"createSpanEnvelopeItem");function bL(n){const e=typeof n.data=="string"?Pb(n.data):n.data;return[yn({type:"attachment",length:e.length,filename:n.filename,content_type:n.contentType,attachment_type:n.attachmentType}),e]}u(bL,"createAttachmentEnvelopeItem");const xL={session:"session",sessions:"session",attachment:"attachment",transaction:"transaction",event:"error",client_report:"internal",user_report:"default",profile:"profile",profile_chunk:"profile",replay_event:"replay",replay_recording:"replay",check_in:"monitor",feedback:"feedback",span:"span",statsd:"metric_bucket"};function Y1(n){return xL[n]}u(Y1,"envelopeItemTypeToDataCategory");function k0(n){if(!n||!n.sdk)return;const{name:e,version:t}=n.sdk;return{name:e,version:t}}u(k0,"getSdkMetadataForEnvelopeHeader");function S$(n,e,t,s){const r=n.sdkProcessingMetadata&&n.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:n.event_id,sent_at:new Date().toISOString(),...e&&{sdk:e},...!!t&&s&&{dsn:od(s)},...r&&{trace:yn({...r})}}}u(S$,"createEventEnvelopeHeaders");function wL(n,e,t){const s=[{type:"client_report"},{timestamp:t||id(),discarded_events:n}];return pa(e?{dsn:e}:{},[s])}u(wL,"createClientReportEnvelope");const SL=60*1e3;function CL(n,e=Date.now()){const t=parseInt(`${n}`,10);if(!isNaN(t))return t*1e3;const s=Date.parse(`${n}`);return isNaN(s)?SL:s-e}u(CL,"parseRetryAfterHeader");function vL(n,e){return n[e]||n.all||0}u(vL,"disabledUntil");function C$(n,e,t=Date.now()){return vL(n,e)>t}u(C$,"isRateLimited");function v$(n,{statusCode:e,headers:t},s=Date.now()){const r={...n},o=t&&t["x-sentry-rate-limits"],i=t&&t["retry-after"];if(o)for(const a of o.trim().split(",")){const[c,l,,,d]=a.split(":",5),h=parseInt(c,10),p=(isNaN(h)?60:h)*1e3;if(!l)r.all=s+p;else for(const f of l.split(";"))f==="metric_bucket"?(!d||d.split(";").includes("custom"))&&(r[f]=s+p):r[f]=s+p}else i?r.all=s+CL(i,s):e===429&&(r.all=s+60*1e3);return r}u(v$,"updateRateLimits");function IL(n,e){return n??e()}u(IL,"_nullishCoalesce");function Ns(n){let e,t=n[0],s=1;for(;s<n.length;){const r=n[s],o=n[s+1];if(s+=2,(r==="optionalAccess"||r==="optionalCall")&&t==null)return;r==="access"||r==="optionalAccess"?(e=t,t=o(t)):(r==="call"||r==="optionalCall")&&(t=o((...i)=>t.call(e,...i)),e=void 0)}return t}u(Ns,"_optionalChain");function Qp(){return{traceId:zt(),spanId:zt().substring(16)}}u(Qp,"generatePropagationContext");const Yh=ot;function kL(){const n=Yh.chrome,e=n&&n.app&&n.app.runtime,t="history"in Yh&&!!Yh.history.pushState&&!!Yh.history.replaceState;return!e&&t}u(kL,"supportsHistory");const qe=typeof __SENTRY_DEBUG__>"u"||__SENTRY_DEBUG__;function Pc(){return $0(ot),ot}u(Pc,"getMainCarrier");function $0(n){const e=n.__SENTRY__=n.__SENTRY__||{};return e.version=e.version||zi,e[zi]=e[zi]||{}}u($0,"getSentryCarrier");function $L(n){const e=Zn(),t={sid:zt(),init:!0,timestamp:e,started:e,duration:0,status:"ok",errors:0,ignoreDuration:!1,toJSON:()=>TL(t)};return n&&hc(t,n),t}u($L,"makeSession$1");function hc(n,e={}){if(e.user&&(!n.ipAddress&&e.user.ip_address&&(n.ipAddress=e.user.ip_address),!n.did&&!e.did&&(n.did=e.user.id||e.user.email||e.user.username)),n.timestamp=e.timestamp||Zn(),e.abnormal_mechanism&&(n.abnormal_mechanism=e.abnormal_mechanism),e.ignoreDuration&&(n.ignoreDuration=e.ignoreDuration),e.sid&&(n.sid=e.sid.length===32?e.sid:zt()),e.init!==void 0&&(n.init=e.init),!n.did&&e.did&&(n.did=`${e.did}`),typeof e.started=="number"&&(n.started=e.started),n.ignoreDuration)n.duration=void 0;else if(typeof e.duration=="number")n.duration=e.duration;else{const t=n.timestamp-n.started;n.duration=t>=0?t:0}e.release&&(n.release=e.release),e.environment&&(n.environment=e.environment),!n.ipAddress&&e.ipAddress&&(n.ipAddress=e.ipAddress),!n.userAgent&&e.userAgent&&(n.userAgent=e.userAgent),typeof e.errors=="number"&&(n.errors=e.errors),e.status&&(n.status=e.status)}u(hc,"updateSession");function NL(n,e){let t={};e?t={status:e}:n.status==="ok"&&(t={status:"exited"}),hc(n,t)}u(NL,"closeSession");function TL(n){return yn({sid:`${n.sid}`,init:n.init,started:new Date(n.started*1e3).toISOString(),timestamp:new Date(n.timestamp*1e3).toISOString(),status:n.status,errors:n.errors,did:typeof n.did=="number"||typeof n.did=="string"?`${n.did}`:void 0,duration:n.duration,abnormal_mechanism:n.abnormal_mechanism,attrs:{release:n.release,environment:n.environment,ip_address:n.ipAddress,user_agent:n.userAgent}})}u(TL,"sessionToJSON");const Lb="_sentrySpan";function _l(n,e){e?nr(n,Lb,e):delete n[Lb]}u(_l,"_setSpanForScope");function Jp(n){return n[Lb]}u(Jp,"_getSpanForScope");const EL=100;class N0{static{u(this,"ScopeClass")}constructor(){this._notifyingListeners=!1,this._scopeListeners=[],this._eventProcessors=[],this._breadcrumbs=[],this._attachments=[],this._user={},this._tags={},this._extra={},this._contexts={},this._sdkProcessingMetadata={},this._propagationContext=Qp()}clone(){const e=new N0;return e._breadcrumbs=[...this._breadcrumbs],e._tags={...this._tags},e._extra={...this._extra},e._contexts={...this._contexts},e._user=this._user,e._level=this._level,e._session=this._session,e._transactionName=this._transactionName,e._fingerprint=this._fingerprint,e._eventProcessors=[...this._eventProcessors],e._requestSession=this._requestSession,e._attachments=[...this._attachments],e._sdkProcessingMetadata={...this._sdkProcessingMetadata},e._propagationContext={...this._propagationContext},e._client=this._client,e._lastEventId=this._lastEventId,_l(e,Jp(this)),e}setClient(e){this._client=e}setLastEventId(e){this._lastEventId=e}getClient(){return this._client}lastEventId(){return this._lastEventId}addScopeListener(e){this._scopeListeners.push(e)}addEventProcessor(e){return this._eventProcessors.push(e),this}setUser(e){return this._user=e||{email:void 0,id:void 0,ip_address:void 0,username:void 0},this._session&&hc(this._session,{user:e}),this._notifyScopeListeners(),this}getUser(){return this._user}getRequestSession(){return this._requestSession}setRequestSession(e){return this._requestSession=e,this}setTags(e){return this._tags={...this._tags,...e},this._notifyScopeListeners(),this}setTag(e,t){return this._tags={...this._tags,[e]:t},this._notifyScopeListeners(),this}setExtras(e){return this._extra={...this._extra,...e},this._notifyScopeListeners(),this}setExtra(e,t){return this._extra={...this._extra,[e]:t},this._notifyScopeListeners(),this}setFingerprint(e){return this._fingerprint=e,this._notifyScopeListeners(),this}setLevel(e){return this._level=e,this._notifyScopeListeners(),this}setTransactionName(e){return this._transactionName=e,this._notifyScopeListeners(),this}setContext(e,t){return t===null?delete this._contexts[e]:this._contexts[e]=t,this._notifyScopeListeners(),this}setSession(e){return e?this._session=e:delete this._session,this._notifyScopeListeners(),this}getSession(){return this._session}update(e){if(!e)return this;const t=typeof e=="function"?e(this):e,[s,r]=t instanceof qo?[t.getScopeData(),t.getRequestSession()]:dc(t)?[e,e.requestSession]:[],{tags:o,extra:i,user:a,contexts:c,level:l,fingerprint:d=[],propagationContext:h}=s||{};return this._tags={...this._tags,...o},this._extra={...this._extra,...i},this._contexts={...this._contexts,...c},a&&Object.keys(a).length&&(this._user=a),l&&(this._level=l),d.length&&(this._fingerprint=d),h&&(this._propagationContext=h),r&&(this._requestSession=r),this}clear(){return this._breadcrumbs=[],this._tags={},this._extra={},this._user={},this._contexts={},this._level=void 0,this._transactionName=void 0,this._fingerprint=void 0,this._requestSession=void 0,this._session=void 0,_l(this,void 0),this._attachments=[],this._propagationContext=Qp(),this._notifyScopeListeners(),this}addBreadcrumb(e,t){const s=typeof t=="number"?t:EL;if(s<=0)return this;const r={timestamp:id(),...e},o=this._breadcrumbs;return o.push(r),this._breadcrumbs=o.length>s?o.slice(-s):o,this._notifyScopeListeners(),this}getLastBreadcrumb(){return this._breadcrumbs[this._breadcrumbs.length-1]}clearBreadcrumbs(){return this._breadcrumbs=[],this._notifyScopeListeners(),this}addAttachment(e){return this._attachments.push(e),this}clearAttachments(){return this._attachments=[],this}getScopeData(){return{breadcrumbs:this._breadcrumbs,attachments:this._attachments,contexts:this._contexts,tags:this._tags,extra:this._extra,user:this._user,level:this._level,fingerprint:this._fingerprint||[],eventProcessors:this._eventProcessors,propagationContext:this._propagationContext,sdkProcessingMetadata:this._sdkProcessingMetadata,transactionName:this._transactionName,span:Jp(this)}}setSDKProcessingMetadata(e){return this._sdkProcessingMetadata={...this._sdkProcessingMetadata,...e},this}setPropagationContext(e){return this._propagationContext=e,this}getPropagationContext(){return this._propagationContext}captureException(e,t){const s=t&&t.event_id?t.event_id:zt();if(!this._client)return ae.warn("No client configured on scope - will not capture exception!"),s;const r=new Error("Sentry syntheticException");return this._client.captureException(e,{originalException:e,syntheticException:r,...t,event_id:s},this),s}captureMessage(e,t,s){const r=s&&s.event_id?s.event_id:zt();if(!this._client)return ae.warn("No client configured on scope - will not capture message!"),r;const o=new Error(e);return this._client.captureMessage(e,t,{originalException:e,syntheticException:o,...s,event_id:r},this),r}captureEvent(e,t){const s=t&&t.event_id?t.event_id:zt();return this._client?(this._client.captureEvent(e,{...t,event_id:s},this),s):(ae.warn("No client configured on scope - will not capture event!"),s)}_notifyScopeListeners(){this._notifyingListeners||(this._notifyingListeners=!0,this._scopeListeners.forEach(e=>{e(this)}),this._notifyingListeners=!1)}}const qo=N0;function _L(){return sm("defaultCurrentScope",()=>new qo)}u(_L,"getDefaultCurrentScope");function RL(){return sm("defaultIsolationScope",()=>new qo)}u(RL,"getDefaultIsolationScope");class AL{static{u(this,"AsyncContextStack")}constructor(e,t){let s;e?s=e:s=new qo;let r;t?r=t:r=new qo,this._stack=[{scope:s}],this._isolationScope=r}withScope(e){const t=this._pushScope();let s;try{s=e(t)}catch(r){throw this._popScope(),r}return nm(s)?s.then(r=>(this._popScope(),r),r=>{throw this._popScope(),r}):(this._popScope(),s)}getClient(){return this.getStackTop().client}getScope(){return this.getStackTop().scope}getIsolationScope(){return this._isolationScope}getStackTop(){return this._stack[this._stack.length-1]}_pushScope(){const e=this.getScope().clone();return this._stack.push({client:this.getClient(),scope:e}),e}_popScope(){return this._stack.length<=1?!1:!!this._stack.pop()}}function pc(){const n=Pc(),e=$0(n);return e.stack=e.stack||new AL(_L(),RL())}u(pc,"getAsyncContextStack");function DL(n){return pc().withScope(n)}u(DL,"withScope$1");function OL(n,e){const t=pc();return t.withScope(()=>(t.getStackTop().scope=n,e(n)))}u(OL,"withSetScope");function Q1(n){return pc().withScope(()=>n(pc().getIsolationScope()))}u(Q1,"withIsolationScope");function FL(){return{withIsolationScope:Q1,withScope:DL,withSetScope:OL,withSetIsolationScope:(n,e)=>Q1(e),getCurrentScope:()=>pc().getScope(),getIsolationScope:()=>pc().getIsolationScope()}}u(FL,"getStackAsyncContextStrategy");function ad(n){const e=$0(n);return e.acs?e.acs:FL()}u(ad,"getAsyncContextStrategy");function vt(){const n=Pc();return ad(n).getCurrentScope()}u(vt,"getCurrentScope");function Ss(){const n=Pc();return ad(n).getIsolationScope()}u(Ss,"getIsolationScope");function PL(){return sm("globalScope",()=>new qo)}u(PL,"getGlobalScope");function T0(...n){const e=Pc(),t=ad(e);if(n.length===2){const[s,r]=n;return s?t.withSetScope(s,r):t.withScope(r)}return t.withScope(n[0])}u(T0,"withScope");function tt(){return vt().getClient()}u(tt,"getClient");const LL="_sentryMetrics";function Mb(n){const e=n[LL];if(!e)return;const t={};for(const[,[s,r]]of e)(t[s]||(t[s]=[])).push(yn(r));return t}u(Mb,"getMetricSummaryJsonForSpan");const io="sentry.source",I$="sentry.sample_rate",Ki="sentry.op",$n="sentry.origin",zb="sentry.idle_span_finish_reason",rm="sentry.measurement_unit",om="sentry.measurement_value",ML="sentry.profile_id",E0="sentry.exclusive_time",zL=0,k$=1,vn=2;function BL(n){if(n<400&&n>=100)return{code:k$};if(n>=400&&n<500)switch(n){case 401:return{code:vn,message:"unauthenticated"};case 403:return{code:vn,message:"permission_denied"};case 404:return{code:vn,message:"not_found"};case 409:return{code:vn,message:"already_exists"};case 413:return{code:vn,message:"failed_precondition"};case 429:return{code:vn,message:"resource_exhausted"};case 499:return{code:vn,message:"cancelled"};default:return{code:vn,message:"invalid_argument"}}if(n>=500&&n<600)switch(n){case 501:return{code:vn,message:"unimplemented"};case 503:return{code:vn,message:"unavailable"};case 504:return{code:vn,message:"deadline_exceeded"};default:return{code:vn,message:"internal_error"}}return{code:vn,message:"unknown_error"}}u(BL,"getSpanStatusFromHttpCode");function $$(n,e){n.setAttribute("http.response.status_code",e);const t=BL(e);t.message!=="unknown_error"&&n.setStatus(t)}u($$,"setHttpStatus");const N$=0,T$=1;function WL(n){const{spanId:e,traceId:t}=n.spanContext(),{data:s,op:r,parent_span_id:o,status:i,origin:a}=dt(n);return yn({parent_span_id:o,span_id:e,trace_id:t,data:s,op:r,status:i,origin:a})}u(WL,"spanToTransactionTraceContext");function VL(n){const{spanId:e,traceId:t}=n.spanContext(),{parent_span_id:s}=dt(n);return yn({parent_span_id:s,span_id:e,trace_id:t})}u(VL,"spanToTraceContext");function E$(n){const{traceId:e,spanId:t}=n.spanContext(),s=fa(n);return I0(e,t,s)}u(E$,"spanToTraceHeader");function Wi(n){return typeof n=="number"?J1(n):Array.isArray(n)?n[0]+n[1]/1e9:n instanceof Date?J1(n.getTime()):Zn()}u(Wi,"spanTimeInputToSeconds");function J1(n){return n>9999999999?n/1e3:n}u(J1,"ensureTimestampInSeconds");function dt(n){if(GL(n))return n.getSpanJSON();try{const{spanId:e,traceId:t}=n.spanContext();if(UL(n)){const{attributes:s,startTime:r,name:o,endTime:i,parentSpanId:a,status:c}=n;return yn({span_id:e,trace_id:t,data:s,description:o,parent_span_id:a,start_timestamp:Wi(r),timestamp:Wi(i)||void 0,status:_$(c),op:s[Ki],origin:s[$n],_metrics_summary:Mb(n)})}return{span_id:e,trace_id:t}}catch{return{}}}u(dt,"spanToJSON");function UL(n){const e=n;return!!e.attributes&&!!e.startTime&&!!e.name&&!!e.endTime&&!!e.status}u(UL,"spanIsOpenTelemetrySdkTraceBaseSpan");function GL(n){return typeof n.getSpanJSON=="function"}u(GL,"spanIsSentrySpan");function fa(n){const{traceFlags:e}=n.spanContext();return e===T$}u(fa,"spanIsSampled");function _$(n){if(!(!n||n.code===zL))return n.code===k$?"ok":n.message||"unknown_error"}u(_$,"getStatusMessage");const Vi="_sentryChildSpans",Bb="_sentryRootSpan";function R$(n,e){const t=n[Bb]||n;nr(e,Bb,t),n[Vi]?n[Vi].add(e):nr(n,Vi,new Set([e]))}u(R$,"addChildSpanToSpan");function HL(n,e){n[Vi]&&n[Vi].delete(e)}u(HL,"removeChildSpanFromSpan");function Ep(n){const e=new Set;function t(s){if(!e.has(s)&&fa(s)){e.add(s);const r=s[Vi]?Array.from(s[Vi]):[];for(const o of r)t(o)}}return u(t,"addSpanChildren"),t(n),Array.from(e)}u(Ep,"getSpanDescendants");function An(n){return n[Bb]||n}u(An,"getRootSpan");function On(){const n=Pc(),e=ad(n);return e.getActiveSpan?e.getActiveSpan():Jp(vt())}u(On,"getActiveSpan");let Z1=!1;function jL(){Z1||(Z1=!0,p$(Wb),f$(Wb))}u(jL,"registerSpanErrorInstrumentation");function Wb(){const n=On(),e=n&&An(n);if(e){const t="internal_error";qe&&ae.log(`[Tracing] Root span: ${t} -> Global error occurred`),e.setStatus({code:vn,message:t})}}u(Wb,"errorCallback");Wb.tag="sentry_tracingErrorCallback";const A$="_sentryScope",D$="_sentryIsolationScope";function qL(n,e,t){n&&(nr(n,D$,t),nr(n,A$,e))}u(qL,"setCapturedScopesOnSpan");function eC(n){return{scope:n[A$],isolationScope:n[D$]}}u(eC,"getCapturedScopesOnSpan");function xo(n){if(typeof __SENTRY_TRACING__=="boolean"&&!__SENTRY_TRACING__)return!1;const e=tt(),t=n||e&&e.getOptions();return!!t&&(t.enableTracing||"tracesSampleRate"in t||"tracesSampler"in t)}u(xo,"hasTracingEnabled");class Lc{static{u(this,"SentryNonRecordingSpan")}constructor(e={}){this._traceId=e.traceId||zt(),this._spanId=e.spanId||zt().substring(16)}spanContext(){return{spanId:this._spanId,traceId:this._traceId,traceFlags:N$}}end(e){}setAttribute(e,t){return this}setAttributes(e){return this}setStatus(e){return this}updateName(e){return this}isRecording(){return!1}addEvent(e,t,s){return this}addLink(e){return this}addLinks(e){return this}recordException(e,t){}}const _0="production",O$="_frozenDsc";function tC(n,e){nr(n,O$,e)}u(tC,"freezeDscOnSpan");function im(n,e){const t=e.getOptions(),{publicKey:s}=e.getDsn()||{},r=yn({environment:t.environment||_0,release:t.release,public_key:s,trace_id:n});return e.emit("createDsc",r),r}u(im,"getDynamicSamplingContextFromClient");function ai(n){const e=tt();if(!e)return{};const t=im(dt(n).trace_id||"",e),s=An(n),r=s[O$];if(r)return r;const o=s.spanContext().traceState,i=o&&o.get("sentry.dsc"),a=i&&x$(i);if(a)return a;const c=dt(s),l=c.data||{},d=l[I$];d!=null&&(t.sample_rate=`${d}`);const h=l[io],p=c.description;return h!=="url"&&p&&(t.transaction=p),xo()&&(t.sampled=String(fa(s))),e.emit("createDsc",t,s),t}u(ai,"getDynamicSamplingContextFromSpan");function KL(n){if(!qe)return;const{description:e="< unknown name >",op:t="< unknown op >",parent_span_id:s}=dt(n),{spanId:r}=n.spanContext(),o=fa(n),i=An(n),a=i===n,c=`[Tracing] Starting ${o?"sampled":"unsampled"} ${a?"root ":""}span`,l=[`op: ${t}`,`name: ${e}`,`ID: ${r}`];if(s&&l.push(`parent ID: ${s}`),!a){const{op:d,description:h}=dt(i);l.push(`root ID: ${i.spanContext().spanId}`),d&&l.push(`root op: ${d}`),h&&l.push(`root description: ${h}`)}ae.log(`${c}
  ${l.join(`
  `)}`)}u(KL,"logSpanStart");function XL(n){if(!qe)return;const{description:e="< unknown name >",op:t="< unknown op >"}=dt(n),{spanId:s}=n.spanContext(),o=An(n)===n,i=`[Tracing] Finishing "${t}" ${o?"root ":""}span "${e}" with ID ${s}`;ae.log(i)}u(XL,"logSpanEnd");function Zp(n){if(typeof n=="boolean")return Number(n);const e=typeof n=="string"?parseFloat(n):n;if(typeof e!="number"||isNaN(e)||e<0||e>1){qe&&ae.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(n)} of type ${JSON.stringify(typeof n)}.`);return}return e}u(Zp,"parseSampleRate");function YL(n,e){if(!xo(n))return[!1];let t;typeof n.tracesSampler=="function"?t=n.tracesSampler(e):e.parentSampled!==void 0?t=e.parentSampled:typeof n.tracesSampleRate<"u"?t=n.tracesSampleRate:t=1;const s=Zp(t);return s===void 0?(qe&&ae.warn("[Tracing] Discarding transaction because of invalid sample rate."),[!1]):s?Math.random()<s?[!0,s]:(qe&&ae.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(t)})`),[!1,s]):(qe&&ae.log(`[Tracing] Discarding transaction because ${typeof n.tracesSampler=="function"?"tracesSampler returned 0 or false":"a negative sampling decision was inherited or tracesSampleRate is set to 0"}`),[!1,s])}u(YL,"sampleSpan");function QL(n,e){return e&&(n.sdk=n.sdk||{},n.sdk.name=n.sdk.name||e.name,n.sdk.version=n.sdk.version||e.version,n.sdk.integrations=[...n.sdk.integrations||[],...e.integrations||[]],n.sdk.packages=[...n.sdk.packages||[],...e.packages||[]]),n}u(QL,"enhanceEventWithSdkInfo");function JL(n,e,t,s){const r=k0(t),o={sent_at:new Date().toISOString(),...r&&{sdk:r},...!!s&&e&&{dsn:od(e)}},i="aggregates"in n?[{type:"sessions"},n]:[{type:"session"},n.toJSON()];return pa(o,[i])}u(JL,"createSessionEnvelope");function ZL(n,e,t,s){const r=k0(t),o=n.type&&n.type!=="replay_event"?n.type:"event";QL(n,t&&t.sdk);const i=S$(n,r,s,e);return delete n.sdkProcessingMetadata,pa(i,[[{type:o},n]])}u(ZL,"createEventEnvelope");function eM(n,e){function t(d){return!!d.trace_id&&!!d.public_key}u(t,"dscHasRequiredProps");const s=ai(n[0]),r=e&&e.getDsn(),o=e&&e.getOptions().tunnel,i={sent_at:new Date().toISOString(),...t(s)&&{trace:s},...!!o&&r&&{dsn:od(r)}},a=e&&e.getOptions().beforeSendSpan,c=a?d=>a(dt(d)):d=>dt(d),l=[];for(const d of n){const h=c(d);h&&l.push(yL(h))}return pa(i,l)}u(eM,"createSpanEnvelope");function tM(n,e,t,s=On()){const r=s&&An(s);r&&r.addEvent(n,{[om]:e,[rm]:t})}u(tM,"setMeasurement");function nC(n){if(!n||n.length===0)return;const e={};return n.forEach(t=>{const s=t.attributes||{},r=s[rm],o=s[om];typeof r=="string"&&typeof o=="number"&&(e[t.name]={value:o,unit:r})}),e}u(nC,"timedEventsToMeasurements");const sC=1e3;class R0{static{u(this,"SentrySpan")}constructor(e={}){this._traceId=e.traceId||zt(),this._spanId=e.spanId||zt().substring(16),this._startTime=e.startTimestamp||Zn(),this._attributes={},this.setAttributes({[$n]:"manual",[Ki]:e.op,...e.attributes}),this._name=e.name,e.parentSpanId&&(this._parentSpanId=e.parentSpanId),"sampled"in e&&(this._sampled=e.sampled),e.endTimestamp&&(this._endTime=e.endTimestamp),this._events=[],this._isStandaloneSpan=e.isStandalone,this._endTime&&this._onSpanEnded()}addLink(e){return this}addLinks(e){return this}recordException(e,t){}spanContext(){const{_spanId:e,_traceId:t,_sampled:s}=this;return{spanId:e,traceId:t,traceFlags:s?T$:N$}}setAttribute(e,t){return t===void 0?delete this._attributes[e]:this._attributes[e]=t,this}setAttributes(e){return Object.keys(e).forEach(t=>this.setAttribute(t,e[t])),this}updateStartTime(e){this._startTime=Wi(e)}setStatus(e){return this._status=e,this}updateName(e){return this._name=e,this}end(e){this._endTime||(this._endTime=Wi(e),XL(this),this._onSpanEnded())}getSpanJSON(){return yn({data:this._attributes,description:this._name,op:this._attributes[Ki],parent_span_id:this._parentSpanId,span_id:this._spanId,start_timestamp:this._startTime,status:_$(this._status),timestamp:this._endTime,trace_id:this._traceId,origin:this._attributes[$n],_metrics_summary:Mb(this),profile_id:this._attributes[ML],exclusive_time:this._attributes[E0],measurements:nC(this._events),is_segment:this._isStandaloneSpan&&An(this)===this||void 0,segment_id:this._isStandaloneSpan?An(this).spanContext().spanId:void 0})}isRecording(){return!this._endTime&&!!this._sampled}addEvent(e,t,s){qe&&ae.log("[Tracing] Adding an event to span:",e);const r=rC(t)?t:s||Zn(),o=rC(t)?{}:t||{},i={name:e,time:Wi(r),attributes:o};return this._events.push(i),this}isStandaloneSpan(){return!!this._isStandaloneSpan}_onSpanEnded(){const e=tt();if(e&&e.emit("spanEnd",this),!(this._isStandaloneSpan||this===An(this)))return;if(this._isStandaloneSpan){this._sampled?sM(eM([this],e)):(qe&&ae.log("[Tracing] Discarding standalone span because its trace was not chosen to be sampled."),e&&e.recordDroppedEvent("sample_rate","span"));return}const s=this._convertSpanToTransaction();s&&(eC(this).scope||vt()).captureEvent(s)}_convertSpanToTransaction(){if(!oC(dt(this)))return;this._name||(qe&&ae.warn("Transaction has no name, falling back to `<unlabeled transaction>`."),this._name="<unlabeled transaction>");const{scope:e,isolationScope:t}=eC(this),r=(e||vt()).getClient()||tt();if(this._sampled!==!0){qe&&ae.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."),r&&r.recordDroppedEvent("sample_rate","transaction");return}const i=Ep(this).filter(h=>h!==this&&!nM(h)).map(h=>dt(h)).filter(oC),a=this._attributes[io],c={contexts:{trace:WL(this)},spans:i.length>sC?i.sort((h,p)=>h.start_timestamp-p.start_timestamp).slice(0,sC):i,start_timestamp:this._startTime,timestamp:this._endTime,transaction:this._name,type:"transaction",sdkProcessingMetadata:{capturedSpanScope:e,capturedSpanIsolationScope:t,...yn({dynamicSamplingContext:ai(this)})},_metrics_summary:Mb(this),...a&&{transaction_info:{source:a}}},l=nC(this._events);return l&&Object.keys(l).length&&(qe&&ae.log("[Measurements] Adding measurements to transaction event",JSON.stringify(l,void 0,2)),c.measurements=l),c}}function rC(n){return n&&typeof n=="number"||n instanceof Date||Array.isArray(n)}u(rC,"isSpanTimeInput");function oC(n){return!!n.start_timestamp&&!!n.timestamp&&!!n.span_id&&!!n.trace_id}u(oC,"isFullFinishedSpan");function nM(n){return n instanceof R0&&n.isStandaloneSpan()}u(nM,"isStandaloneSpan");function sM(n){const e=tt();if(!e)return;const t=n[1];if(!t||t.length===0){e.recordDroppedEvent("before_send","span");return}e.sendEnvelope(n)}u(sM,"sendSpanEnvelope");const F$="__SENTRY_SUPPRESS_TRACING__";function ci(n){const e=L$();if(e.startInactiveSpan)return e.startInactiveSpan(n);const t=oM(n),{forceTransaction:s,parentSpan:r}=n;return(n.scope?i=>T0(n.scope,i):r!==void 0?i=>P$(r,i):i=>i())(()=>{const i=vt(),a=aM(i);return n.onlyIfParent&&!a?new Lc:rM({parentSpan:a,spanArguments:t,forceTransaction:s,scope:i})})}u(ci,"startInactiveSpan");function P$(n,e){const t=L$();return t.withActiveSpan?t.withActiveSpan(n,e):T0(s=>(_l(s,n||void 0),e(s)))}u(P$,"withActiveSpan");function rM({parentSpan:n,spanArguments:e,forceTransaction:t,scope:s}){if(!xo())return new Lc;const r=Ss();let o;if(n&&!t)o=iM(n,s,e),R$(n,o);else if(n){const i=ai(n),{traceId:a,spanId:c}=n.spanContext(),l=fa(n);o=iC({traceId:a,parentSpanId:c,...e},s,l),tC(o,i)}else{const{traceId:i,dsc:a,parentSpanId:c,sampled:l}={...r.getPropagationContext(),...s.getPropagationContext()};o=iC({traceId:i,parentSpanId:c,...e},s,l),a&&tC(o,a)}return KL(o),qL(o,s,r),o}u(rM,"createChildOrRootSpan");function oM(n){const t={isStandalone:(n.experimental||{}).standalone,...n};if(n.startTime){const s={...t};return s.startTimestamp=Wi(n.startTime),delete s.startTime,s}return t}u(oM,"parseSentrySpanArguments");function L$(){const n=Pc();return ad(n)}u(L$,"getAcs");function iC(n,e,t){const s=tt(),r=s&&s.getOptions()||{},{name:o="",attributes:i}=n,[a,c]=e.getScopeData().sdkProcessingMetadata[F$]?[!1]:YL(r,{name:o,parentSampled:t,attributes:i,transactionContext:{name:o,parentSampled:t}}),l=new R0({...n,attributes:{[io]:"custom",...n.attributes},sampled:a});return c!==void 0&&l.setAttribute(I$,c),s&&s.emit("spanStart",l),l}u(iC,"_startRootSpan");function iM(n,e,t){const{spanId:s,traceId:r}=n.spanContext(),o=e.getScopeData().sdkProcessingMetadata[F$]?!1:fa(n),i=o?new R0({...t,parentSpanId:s,traceId:r,sampled:o}):new Lc({traceId:r});R$(n,i);const a=tt();return a&&(a.emit("spanStart",i),t.endTimestamp&&a.emit("spanEnd",i)),i}u(iM,"_startChildSpan");function aM(n){const e=Jp(n);if(!e)return;const t=tt();return(t?t.getOptions():{}).parentSpanIsAlwaysRootSpan?An(e):e}u(aM,"getParentSpan");const _p={idleTimeout:1e3,finalTimeout:3e4,childSpanTimeout:15e3},cM="heartbeatFailed",uM="idleTimeout",lM="finalTimeout",dM="externalFinish";function M$(n,e={}){const t=new Map;let s=!1,r,o=dM,i=!e.disableAutoFinish;const a=[],{idleTimeout:c=_p.idleTimeout,finalTimeout:l=_p.finalTimeout,childSpanTimeout:d=_p.childSpanTimeout,beforeSpanEnd:h}=e,p=tt();if(!p||!xo())return new Lc;const f=vt(),m=On(),g=hM(n);g.end=new Proxy(g.end,{apply(v,k,$){h&&h(g);const[T,...E]=$,R=T||Zn(),O=Wi(R),L=Ep(g).filter(V=>V!==g);if(!L.length)return C(O),Reflect.apply(v,k,[O,...E]);const z=L.map(V=>dt(V).timestamp).filter(V=>!!V),W=z.length?Math.max(...z):void 0,A=dt(g).start_timestamp,G=Math.min(A?A+l/1e3:1/0,Math.max(A||-1/0,Math.min(O,W||1/0)));return C(G),Reflect.apply(v,k,[G,...E])}});function y(){r&&(clearTimeout(r),r=void 0)}u(y,"_cancelIdleTimeout");function b(v){y(),r=setTimeout(()=>{!s&&t.size===0&&i&&(o=uM,g.end(v))},c)}u(b,"_restartIdleTimeout");function x(v){r=setTimeout(()=>{!s&&i&&(o=cM,g.end(v))},d)}u(x,"_restartChildSpanTimeout");function S(v){y(),t.set(v,!0);const k=Zn();x(k+d/1e3)}u(S,"_pushActivity");function w(v){if(t.has(v)&&t.delete(v),t.size===0){const k=Zn();b(k+c/1e3)}}u(w,"_popActivity");function C(v){s=!0,t.clear(),a.forEach(O=>O()),_l(f,m);const k=dt(g),{start_timestamp:$}=k;if(!$)return;(k.data||{})[zb]||g.setAttribute(zb,o),ae.log(`[Tracing] Idle span "${k.op}" finished`);const E=Ep(g).filter(O=>O!==g);let R=0;E.forEach(O=>{O.isRecording()&&(O.setStatus({code:vn,message:"cancelled"}),O.end(v),qe&&ae.log("[Tracing] Cancelling span since span ended early",JSON.stringify(O,void 0,2)));const L=dt(O),{timestamp:z=0,start_timestamp:W=0}=L,A=W<=v,G=(l+c)/1e3,V=z-W<=G;if(qe){const q=JSON.stringify(O,void 0,2);A?V||ae.log("[Tracing] Discarding span since it finished after idle span final timeout",q):ae.log("[Tracing] Discarding span since it happened after idle span was finished",q)}(!V||!A)&&(HL(g,O),R++)}),R>0&&g.setAttribute("sentry.idle_span_discarded_spans",R)}return u(C,"onIdleSpanEnded"),a.push(p.on("spanStart",v=>{if(s||v===g||dt(v).timestamp)return;Ep(g).includes(v)&&S(v.spanContext().spanId)})),a.push(p.on("spanEnd",v=>{s||w(v.spanContext().spanId)})),a.push(p.on("idleSpanEnableAutoFinish",v=>{v===g&&(i=!0,b(),t.size&&x())})),e.disableAutoFinish||b(),setTimeout(()=>{s||(g.setStatus({code:vn,message:"deadline_exceeded"}),o=lM,g.end())},l),g}u(M$,"startIdleSpan");function hM(n){const e=ci(n);return _l(vt(),e),qe&&ae.log("[Tracing] Started span is an idle span"),e}u(hM,"_startIdleSpan");function Vb(n,e,t,s=0){return new Us((r,o)=>{const i=n[s];if(e===null||typeof i!="function")r(e);else{const a=i({...e},t);qe&&i.id&&a===null&&ae.log(`Event processor "${i.id}" dropped event`),nm(a)?a.then(c=>Vb(n,c,t,s+1).then(r)).then(null,o):Vb(n,a,t,s+1).then(r).then(null,o)}})}u(Vb,"notifyEventProcessors");function pM(n,e){const{fingerprint:t,span:s,breadcrumbs:r,sdkProcessingMetadata:o}=e;fM(n,e),s&&yM(n,s),bM(n,t),mM(n,r),gM(n,o)}u(pM,"applyScopeDataToEvent");function aC(n,e){const{extra:t,tags:s,user:r,contexts:o,level:i,sdkProcessingMetadata:a,breadcrumbs:c,fingerprint:l,eventProcessors:d,attachments:h,propagationContext:p,transactionName:f,span:m}=e;rl(n,"extra",t),rl(n,"tags",s),rl(n,"user",r),rl(n,"contexts",o),rl(n,"sdkProcessingMetadata",a),i&&(n.level=i),f&&(n.transactionName=f),m&&(n.span=m),c.length&&(n.breadcrumbs=[...n.breadcrumbs,...c]),l.length&&(n.fingerprint=[...n.fingerprint,...l]),d.length&&(n.eventProcessors=[...n.eventProcessors,...d]),h.length&&(n.attachments=[...n.attachments,...h]),n.propagationContext={...n.propagationContext,...p}}u(aC,"mergeScopeData");function rl(n,e,t){if(t&&Object.keys(t).length){n[e]={...n[e]};for(const s in t)Object.prototype.hasOwnProperty.call(t,s)&&(n[e][s]=t[s])}}u(rl,"mergeAndOverwriteScopeData");function fM(n,e){const{extra:t,tags:s,user:r,contexts:o,level:i,transactionName:a}=e,c=yn(t);c&&Object.keys(c).length&&(n.extra={...c,...n.extra});const l=yn(s);l&&Object.keys(l).length&&(n.tags={...l,...n.tags});const d=yn(r);d&&Object.keys(d).length&&(n.user={...d,...n.user});const h=yn(o);h&&Object.keys(h).length&&(n.contexts={...h,...n.contexts}),i&&(n.level=i),a&&n.type!=="transaction"&&(n.transaction=a)}u(fM,"applyDataToEvent");function mM(n,e){const t=[...n.breadcrumbs||[],...e];n.breadcrumbs=t.length?t:void 0}u(mM,"applyBreadcrumbsToEvent");function gM(n,e){n.sdkProcessingMetadata={...n.sdkProcessingMetadata,...e}}u(gM,"applySdkMetadataToEvent");function yM(n,e){n.contexts={trace:VL(e),...n.contexts},n.sdkProcessingMetadata={dynamicSamplingContext:ai(e),...n.sdkProcessingMetadata};const t=An(e),s=dt(t).description;s&&!n.transaction&&n.type==="transaction"&&(n.transaction=s)}u(yM,"applySpanToEvent");function bM(n,e){n.fingerprint=n.fingerprint?g$(n.fingerprint):[],e&&(n.fingerprint=n.fingerprint.concat(e)),n.fingerprint&&!n.fingerprint.length&&delete n.fingerprint}u(bM,"applyFingerprintToEvent");function z$(n,e,t,s,r,o){const{normalizeDepth:i=3,normalizeMaxBreadth:a=1e3}=n,c={...e,event_id:e.event_id||t.event_id||zt(),timestamp:e.timestamp||id()},l=t.integrations||n.integrations.map(y=>y.name);xM(c,n),CM(c,l),r&&r.emit("applyFrameMetadata",e),e.type===void 0&&wM(c,n.stackParser);const d=IM(s,t.captureContext);t.mechanism&&El(c,t.mechanism);const h=r?r.getEventProcessors():[],p=PL().getScopeData();if(o){const y=o.getScopeData();aC(p,y)}if(d){const y=d.getScopeData();aC(p,y)}const f=[...t.attachments||[],...p.attachments];f.length&&(t.attachments=f),pM(c,p);const m=[...h,...p.eventProcessors];return Vb(m,c,t).then(y=>(y&&SM(y),typeof i=="number"&&i>0?vM(y,i,a):y))}u(z$,"prepareEvent");function xM(n,e){const{environment:t,release:s,dist:r,maxValueLength:o=250}=e;"environment"in n||(n.environment="environment"in e?t:_0),n.release===void 0&&s!==void 0&&(n.release=s),n.dist===void 0&&r!==void 0&&(n.dist=r),n.message&&(n.message=nc(n.message,o));const i=n.exception&&n.exception.values&&n.exception.values[0];i&&i.value&&(i.value=nc(i.value,o));const a=n.request;a&&a.url&&(a.url=nc(a.url,o))}u(xM,"applyClientOptions");const cC=new WeakMap;function wM(n,e){const t=ot._sentryDebugIds;if(!t)return;let s;const r=cC.get(e);r?s=r:(s=new Map,cC.set(e,s));const o=Object.entries(t).reduce((i,[a,c])=>{let l;const d=s.get(a);d?l=d:(l=e(a),s.set(a,l));for(let h=l.length-1;h>=0;h--){const p=l[h];if(p.filename){i[p.filename]=c;break}}return i},{});try{n.exception.values.forEach(i=>{i.stacktrace.frames.forEach(a=>{a.filename&&(a.debug_id=o[a.filename])})})}catch{}}u(wM,"applyDebugIds");function SM(n){const e={};try{n.exception.values.forEach(s=>{s.stacktrace.frames.forEach(r=>{r.debug_id&&(r.abs_path?e[r.abs_path]=r.debug_id:r.filename&&(e[r.filename]=r.debug_id),delete r.debug_id)})})}catch{}if(Object.keys(e).length===0)return;n.debug_meta=n.debug_meta||{},n.debug_meta.images=n.debug_meta.images||[];const t=n.debug_meta.images;Object.entries(e).forEach(([s,r])=>{t.push({type:"sourcemap",code_file:s,debug_id:r})})}u(SM,"applyDebugMeta");function CM(n,e){e.length>0&&(n.sdk=n.sdk||{},n.sdk.integrations=[...n.sdk.integrations||[],...e])}u(CM,"applyIntegrationsMetadata");function vM(n,e,t){if(!n)return null;const s={...n,...n.breadcrumbs&&{breadcrumbs:n.breadcrumbs.map(r=>({...r,...r.data&&{data:Rr(r.data,e,t)}}))},...n.user&&{user:Rr(n.user,e,t)},...n.contexts&&{contexts:Rr(n.contexts,e,t)},...n.extra&&{extra:Rr(n.extra,e,t)}};return n.contexts&&n.contexts.trace&&s.contexts&&(s.contexts.trace=n.contexts.trace,n.contexts.trace.data&&(s.contexts.trace.data=Rr(n.contexts.trace.data,e,t))),n.spans&&(s.spans=n.spans.map(r=>({...r,...r.data&&{data:Rr(r.data,e,t)}}))),s}u(vM,"normalizeEvent");function IM(n,e){if(!e)return n;const t=n?n.clone():new qo;return t.update(e),t}u(IM,"getFinalScope");function kM(n){if(n)return $M(n)?{captureContext:n}:TM(n)?{captureContext:n}:n}u(kM,"parseEventHintOrCaptureContext");function $M(n){return n instanceof qo||typeof n=="function"}u($M,"hintIsScopeOrFunction");const NM=["user","level","extra","contexts","tags","fingerprint","requestSession","propagationContext"];function TM(n){return Object.keys(n).some(e=>NM.includes(e))}u(TM,"hintIsScopeContext");function cd(n,e){return vt().captureException(n,kM(e))}u(cd,"captureException");function B$(n,e){return vt().captureEvent(n,e)}u(B$,"captureEvent");function A0(n,e){Ss().setContext(n,e)}u(A0,"setContext");function EM(n,e){Ss().setTag(n,e)}u(EM,"setTag");function _M(n){Ss().setUser(n)}u(_M,"setUser");function RM(n){Ss().addEventProcessor(n)}u(RM,"addEventProcessor");function uC(n){const e=tt(),t=Ss(),s=vt(),{release:r,environment:o=_0}=e&&e.getOptions()||{},{userAgent:i}=ot.navigator||{},a=$L({release:r,environment:o,user:s.getUser()||t.getUser(),...i&&{userAgent:i},...n}),c=t.getSession();return c&&c.status==="ok"&&hc(c,{status:"exited"}),W$(),t.setSession(a),s.setSession(a),a}u(uC,"startSession");function W$(){const n=Ss(),e=vt(),t=e.getSession()||n.getSession();t&&NL(t),V$(),n.setSession(),e.setSession()}u(W$,"endSession");function V$(){const n=Ss(),e=vt(),t=tt(),s=e.getSession()||n.getSession();s&&t&&t.captureSession(s)}u(V$,"_sendSessionUpdate");function lC(n=!1){if(n){W$();return}V$()}u(lC,"captureSession");const AM="7";function DM(n){const e=n.protocol?`${n.protocol}:`:"",t=n.port?`:${n.port}`:"";return`${e}//${n.host}${t}${n.path?`/${n.path}`:""}/api/`}u(DM,"getBaseApiEndpoint");function OM(n){return`${DM(n)}${n.projectId}/envelope/`}u(OM,"_getIngestEndpoint");function FM(n,e){return F3({sentry_key:n.publicKey,sentry_version:AM,...e&&{sentry_client:`${e.name}/${e.version}`}})}u(FM,"_encodedAuth");function PM(n,e,t){return e||`${OM(n)}?${FM(n,t)}`}u(PM,"getEnvelopeEndpointWithUrlEncodedAuth");const dC=[];function LM(n){const e={};return n.forEach(t=>{const{name:s}=t,r=e[s];r&&!r.isDefaultInstance&&t.isDefaultInstance||(e[s]=t)}),Object.values(e)}u(LM,"filterDuplicates");function MM(n){const e=n.defaultIntegrations||[],t=n.integrations;e.forEach(i=>{i.isDefaultInstance=!0});let s;Array.isArray(t)?s=[...e,...t]:typeof t=="function"?s=g$(t(e)):s=e;const r=LM(s),o=r.findIndex(i=>i.name==="Debug");if(o>-1){const[i]=r.splice(o,1);r.push(i)}return r}u(MM,"getIntegrationsToSetup");function zM(n,e){const t={};return e.forEach(s=>{s&&U$(n,s,t)}),t}u(zM,"setupIntegrations");function hC(n,e){for(const t of e)t&&t.afterAllSetup&&t.afterAllSetup(n)}u(hC,"afterSetupIntegrations");function U$(n,e,t){if(t[e.name]){qe&&ae.log(`Integration skipped because it was already installed: ${e.name}`);return}if(t[e.name]=e,dC.indexOf(e.name)===-1&&typeof e.setupOnce=="function"&&(e.setupOnce(),dC.push(e.name)),e.setup&&typeof e.setup=="function"&&e.setup(n),typeof e.preprocessEvent=="function"){const s=e.preprocessEvent.bind(e);n.on("preprocessEvent",(r,o)=>s(r,o,n))}if(typeof e.processEvent=="function"){const s=e.processEvent.bind(e),r=Object.assign((o,i)=>s(o,i,n),{id:e.name});n.addEventProcessor(r)}qe&&ae.log(`Integration installed: ${e.name}`)}u(U$,"setupIntegration");const pC="Not capturing exception because it's already been captured.";class BM{static{u(this,"BaseClient")}constructor(e){if(this._options=e,this._integrations={},this._numProcessing=0,this._outcomes={},this._hooks={},this._eventProcessors=[],e.dsn?this._dsn=O3(e.dsn):qe&&ae.warn("No DSN provided, client will not send events."),this._dsn){const t=PM(this._dsn,e.tunnel,e._metadata?e._metadata.sdk:void 0);this._transport=e.transport({tunnel:this._options.tunnel,recordDroppedEvent:this.recordDroppedEvent.bind(this),...e.transportOptions,url:t})}}captureException(e,t,s){const r=zt();if(q1(e))return qe&&ae.log(pC),r;const o={event_id:r,...t};return this._process(this.eventFromException(e,o).then(i=>this._captureEvent(i,o,s))),o.event_id}captureMessage(e,t,s,r){const o={event_id:zt(),...s},i=w0(e)?e:String(e),a=S0(e)?this.eventFromMessage(i,t,o):this.eventFromException(e,o);return this._process(a.then(c=>this._captureEvent(c,o,r))),o.event_id}captureEvent(e,t,s){const r=zt();if(t&&t.originalException&&q1(t.originalException))return qe&&ae.log(pC),r;const o={event_id:r,...t},a=(e.sdkProcessingMetadata||{}).capturedSpanScope;return this._process(this._captureEvent(e,o,a||s)),o.event_id}captureSession(e){typeof e.release!="string"?qe&&ae.warn("Discarded session because of missing or non-string release"):(this.sendSession(e),hc(e,{init:!1}))}getDsn(){return this._dsn}getOptions(){return this._options}getSdkMetadata(){return this._options._metadata}getTransport(){return this._transport}flush(e){const t=this._transport;return t?(this.emit("flush"),this._isClientDoneProcessing(e).then(s=>t.flush(e).then(r=>s&&r))):bo(!0)}close(e){return this.flush(e).then(t=>(this.getOptions().enabled=!1,this.emit("close"),t))}getEventProcessors(){return this._eventProcessors}addEventProcessor(e){this._eventProcessors.push(e)}init(){(this._isEnabled()||this._options.integrations.some(({name:e})=>e.startsWith("Spotlight")))&&this._setupIntegrations()}getIntegrationByName(e){return this._integrations[e]}addIntegration(e){const t=this._integrations[e.name];U$(this,e,this._integrations),t||hC(this,[e])}sendEvent(e,t={}){this.emit("beforeSendEvent",e,t);let s=ZL(e,this._dsn,this._options._metadata,this._options.tunnel);for(const o of t.attachments||[])s=fL(s,bL(o));const r=this.sendEnvelope(s);r&&r.then(o=>this.emit("afterSendEvent",e,o),null)}sendSession(e){const t=JL(e,this._dsn,this._options._metadata,this._options.tunnel);this.sendEnvelope(t)}recordDroppedEvent(e,t,s){if(this._options.sendClientReports){const r=typeof s=="number"?s:1,o=`${e}:${t}`;qe&&ae.log(`Recording outcome: "${o}"${r>1?` (${r} times)`:""}`),this._outcomes[o]=(this._outcomes[o]||0)+r}}on(e,t){const s=this._hooks[e]=this._hooks[e]||[];return s.push(t),()=>{const r=s.indexOf(t);r>-1&&s.splice(r,1)}}emit(e,...t){const s=this._hooks[e];s&&s.forEach(r=>r(...t))}sendEnvelope(e){return this.emit("beforeEnvelope",e),this._isEnabled()&&this._transport?this._transport.send(e).then(null,t=>(qe&&ae.error("Error while sending envelope:",t),t)):(qe&&ae.error("Transport disabled"),bo({}))}_setupIntegrations(){const{integrations:e}=this._options;this._integrations=zM(this,e),hC(this,e)}_updateSessionFromEvent(e,t){let s=!1,r=!1;const o=t.exception&&t.exception.values;if(o){r=!0;for(const c of o){const l=c.mechanism;if(l&&l.handled===!1){s=!0;break}}}const i=e.status==="ok";(i&&e.errors===0||i&&s)&&(hc(e,{...s&&{status:"crashed"},errors:e.errors||Number(r||s)}),this.captureSession(e))}_isClientDoneProcessing(e){return new Us(t=>{let s=0;const r=1,o=setInterval(()=>{this._numProcessing==0?(clearInterval(o),t(!0)):(s+=r,e&&s>=e&&(clearInterval(o),t(!1)))},r)})}_isEnabled(){return this.getOptions().enabled!==!1&&this._transport!==void 0}_prepareEvent(e,t,s,r=Ss()){const o=this.getOptions(),i=Object.keys(this._integrations);return!t.integrations&&i.length>0&&(t.integrations=i),this.emit("preprocessEvent",e,t),e.type||r.setLastEventId(e.event_id||t.event_id),z$(o,e,t,s,this,r).then(a=>{if(a===null)return a;const c={...r.getPropagationContext(),...s?s.getPropagationContext():void 0};if(!(a.contexts&&a.contexts.trace)&&c){const{traceId:d,spanId:h,parentSpanId:p,dsc:f}=c;a.contexts={trace:yn({trace_id:d,span_id:h,parent_span_id:p}),...a.contexts};const m=f||im(d,this);a.sdkProcessingMetadata={dynamicSamplingContext:m,...a.sdkProcessingMetadata}}return a})}_captureEvent(e,t={},s){return this._processEvent(e,t,s).then(r=>r.event_id,r=>{if(qe){const o=r;o.logLevel==="log"?ae.log(o.message):ae.warn(o)}})}_processEvent(e,t,s){const r=this.getOptions(),{sampleRate:o}=r,i=H$(e),a=G$(e),c=e.type||"error",l=`before send for type \`${c}\``,d=typeof o>"u"?void 0:Zp(o);if(a&&typeof d=="number"&&Math.random()>d)return this.recordDroppedEvent("sample_rate","error",e),Yp(new Fr(`Discarding event because it's not included in the random sample (sampling rate = ${o})`,"log"));const h=c==="replay_event"?"replay":c,f=(e.sdkProcessingMetadata||{}).capturedSpanIsolationScope;return this._prepareEvent(e,t,s,f).then(m=>{if(m===null)throw this.recordDroppedEvent("event_processor",h,e),new Fr("An event processor returned `null`, will not send event.","log");if(t.data&&t.data.__sentry__===!0)return m;const y=VM(this,r,m,t);return WM(y,l)}).then(m=>{if(m===null){if(this.recordDroppedEvent("before_send",h,e),i){const x=1+(e.spans||[]).length;this.recordDroppedEvent("before_send","span",x)}throw new Fr(`${l} returned \`null\`, will not send event.`,"log")}const g=s&&s.getSession();if(!i&&g&&this._updateSessionFromEvent(g,m),i){const b=m.sdkProcessingMetadata&&m.sdkProcessingMetadata.spanCountBeforeProcessing||0,x=m.spans?m.spans.length:0,S=b-x;S>0&&this.recordDroppedEvent("before_send","span",S)}const y=m.transaction_info;if(i&&y&&m.transaction!==e.transaction){const b="custom";m.transaction_info={...y,source:b}}return this.sendEvent(m,t),m}).then(null,m=>{throw m instanceof Fr?m:(this.captureException(m,{data:{__sentry__:!0},originalException:m}),new Fr(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${m}`))})}_process(e){this._numProcessing++,e.then(t=>(this._numProcessing--,t),t=>(this._numProcessing--,t))}_clearOutcomes(){const e=this._outcomes;return this._outcomes={},Object.entries(e).map(([t,s])=>{const[r,o]=t.split(":");return{reason:r,category:o,quantity:s}})}_flushOutcomes(){qe&&ae.log("Flushing outcomes...");const e=this._clearOutcomes();if(e.length===0){qe&&ae.log("No outcomes to send");return}if(!this._dsn){qe&&ae.log("No dsn provided, will not send outcomes");return}qe&&ae.log("Sending outcomes:",e);const t=wL(e,this._options.tunnel&&od(this._dsn));this.sendEnvelope(t)}}function WM(n,e){const t=`${e} must return \`null\` or a valid event.`;if(nm(n))return n.then(s=>{if(!dc(s)&&s!==null)throw new Fr(t);return s},s=>{throw new Fr(`${e} rejected with ${s}`)});if(!dc(n)&&n!==null)throw new Fr(t);return n}u(WM,"_validateBeforeSendResult");function VM(n,e,t,s){const{beforeSend:r,beforeSendTransaction:o,beforeSendSpan:i}=e;if(G$(t)&&r)return r(t,s);if(H$(t)){if(t.spans&&i){const a=[];for(const c of t.spans){const l=i(c);l?a.push(l):n.recordDroppedEvent("before_send","span")}t.spans=a}if(o){if(t.spans){const a=t.spans.length;t.sdkProcessingMetadata={...t.sdkProcessingMetadata,spanCountBeforeProcessing:a}}return o(t,s)}}return t}u(VM,"processBeforeSend");function G$(n){return n.type===void 0}u(G$,"isErrorEvent$1");function H$(n){return n.type==="transaction"}u(H$,"isTransactionEvent$1");function UM(n,e){e.debug===!0&&(qe?ae.enable():Fc(()=>{})),vt().update(e.initialScope);const s=new n(e);return GM(s),s.init(),s}u(UM,"initAndBind");function GM(n){vt().setClient(n)}u(GM,"setCurrentClient");const HM=64;function jM(n,e,t=oL(n.bufferSize||HM)){let s={};const r=u(i=>t.drain(i),"flush");function o(i){const a=[];if(X1(i,(h,p)=>{const f=Y1(p);if(C$(s,f)){const m=fC(h,p);n.recordDroppedEvent("ratelimit_backoff",f,m)}else a.push(h)}),a.length===0)return bo({});const c=pa(i[0],a),l=u(h=>{X1(c,(p,f)=>{const m=fC(p,f);n.recordDroppedEvent(h,Y1(f),m)})},"recordEnvelopeLoss"),d=u(()=>e({body:mL(c)}).then(h=>(h.statusCode!==void 0&&(h.statusCode<200||h.statusCode>=300)&&qe&&ae.warn(`Sentry responded with status code ${h.statusCode} to sent event.`),s=v$(s,h),h),h=>{throw l("network_error"),h}),"requestTask");return t.add(d).then(h=>h,h=>{if(h instanceof Fr)return qe&&ae.error("Skipped sending event because buffer is full."),l("queue_overflow"),bo({});throw h})}return u(o,"send"),{send:o,flush:r}}u(jM,"createTransport");function fC(n,e){if(!(e!=="event"&&e!=="transaction"))return Array.isArray(n)?n[1]:void 0}u(fC,"getEventForEnvelopeItem");function qM(n,e){const t=e&&e.getDsn(),s=e&&e.getOptions().tunnel;return XM(n,t)||KM(n,s)}u(qM,"isSentryRequestUrl");function KM(n,e){return e?mC(n)===mC(e):!1}u(KM,"checkTunnel");function XM(n,e){return e?n.includes(e.host):!1}u(XM,"checkDsn");function mC(n){return n[n.length-1]==="/"?n.slice(0,-1):n}u(mC,"removeTrailingSlash");function j$(n,e,t=[e],s="npm"){const r=n._metadata||{};r.sdk||(r.sdk={name:`sentry.javascript.${e}`,packages:t.map(o=>({name:`${s}:@sentry/${o}`,version:zi})),version:zi}),n._metadata=r}u(j$,"applySdkMetadata");const YM=100;function Ko(n,e){const t=tt(),s=Ss();if(!t)return;const{beforeBreadcrumb:r=null,maxBreadcrumbs:o=YM}=t.getOptions();if(o<=0)return;const a={timestamp:id(),...n},c=r?Fc(()=>r(a,e)):a;c!==null&&(t.emit&&t.emit("beforeAddBreadcrumb",c,e),s.addBreadcrumb(c,o))}u(Ko,"addBreadcrumb");let gC;const QM="FunctionToString",yC=new WeakMap,JM=u(()=>({name:QM,setupOnce(){gC=Function.prototype.toString;try{Function.prototype.toString=function(...n){const e=C0(this),t=yC.has(tt())&&e!==void 0?e:this;return gC.apply(t,n)}}catch{}},setup(n){yC.set(n,!0)}}),"_functionToStringIntegration"),ZM=JM,ez=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/,/^ResizeObserver loop completed with undelivered notifications.$/,/^Cannot redefine property: googletag$/,"undefined is not an object (evaluating 'a.L')",`can't redefine non-configurable property "solana"`,"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)","Can't find variable: _AutofillCallbackHandler"],tz="InboundFilters",nz=u((n={})=>({name:tz,processEvent(e,t,s){const r=s.getOptions(),o=rz(n,r);return oz(e,o)?null:e}}),"_inboundFiltersIntegration"),sz=nz;function rz(n={},e={}){return{allowUrls:[...n.allowUrls||[],...e.allowUrls||[]],denyUrls:[...n.denyUrls||[],...e.denyUrls||[]],ignoreErrors:[...n.ignoreErrors||[],...e.ignoreErrors||[],...n.disableErrorDefaults?[]:ez],ignoreTransactions:[...n.ignoreTransactions||[],...e.ignoreTransactions||[]],ignoreInternal:n.ignoreInternal!==void 0?n.ignoreInternal:!0}}u(rz,"_mergeOptions");function oz(n,e){return e.ignoreInternal&&dz(n)?(qe&&ae.warn(`Event dropped due to being internal Sentry Error.
Event: ${Ro(n)}`),!0):iz(n,e.ignoreErrors)?(qe&&ae.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${Ro(n)}`),!0):pz(n)?(qe&&ae.warn(`Event dropped due to not having an error message, error type or stacktrace.
Event: ${Ro(n)}`),!0):az(n,e.ignoreTransactions)?(qe&&ae.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${Ro(n)}`),!0):cz(n,e.denyUrls)?(qe&&ae.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${Ro(n)}.
Url: ${ef(n)}`),!0):uz(n,e.allowUrls)?!1:(qe&&ae.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${Ro(n)}.
Url: ${ef(n)}`),!0)}u(oz,"_shouldDropEvent$1");function iz(n,e){return n.type||!e||!e.length?!1:lz(n).some(t=>Wo(t,e))}u(iz,"_isIgnoredError");function az(n,e){if(n.type!=="transaction"||!e||!e.length)return!1;const t=n.transaction;return t?Wo(t,e):!1}u(az,"_isIgnoredTransaction");function cz(n,e){if(!e||!e.length)return!1;const t=ef(n);return t?Wo(t,e):!1}u(cz,"_isDeniedUrl");function uz(n,e){if(!e||!e.length)return!0;const t=ef(n);return t?Wo(t,e):!0}u(uz,"_isAllowedUrl");function lz(n){const e=[];n.message&&e.push(n.message);let t;try{t=n.exception.values[n.exception.values.length-1]}catch{}return t&&t.value&&(e.push(t.value),t.type&&e.push(`${t.type}: ${t.value}`)),e}u(lz,"_getPossibleEventMessages");function dz(n){try{return n.exception.values[0].type==="SentryError"}catch{}return!1}u(dz,"_isSentryError");function hz(n=[]){for(let e=n.length-1;e>=0;e--){const t=n[e];if(t&&t.filename!=="<anonymous>"&&t.filename!=="[native code]")return t.filename||null}return null}u(hz,"_getLastValidUrl");function ef(n){try{let e;try{e=n.exception.values[0].stacktrace.frames}catch{}return e?hz(e):null}catch{return qe&&ae.error(`Cannot extract url for event ${Ro(n)}`),null}}u(ef,"_getEventFilterUrl");function pz(n){return n.type||!n.exception||!n.exception.values||n.exception.values.length===0?!1:!n.message&&!n.exception.values.some(e=>e.stacktrace||e.type&&e.type!=="Error"||e.value)}u(pz,"_isUselessError");const fz="Dedupe",mz=u(()=>{let n;return{name:fz,processEvent(e){if(e.type)return e;try{if(yz(e,n))return qe&&ae.warn("Event dropped due to being a duplicate of previously captured event."),null}catch{}return n=e}}},"_dedupeIntegration"),gz=mz;function yz(n,e){return e?!!(bz(n,e)||xz(n,e)):!1}u(yz,"_shouldDropEvent");function bz(n,e){const t=n.message,s=e.message;return!(!t&&!s||t&&!s||!t&&s||t!==s||!K$(n,e)||!q$(n,e))}u(bz,"_isSameMessageEvent");function xz(n,e){const t=bC(e),s=bC(n);return!(!t||!s||t.type!==s.type||t.value!==s.value||!K$(n,e)||!q$(n,e))}u(xz,"_isSameExceptionEvent");function q$(n,e){let t=U1(n),s=U1(e);if(!t&&!s)return!0;if(t&&!s||!t&&s||(t=t,s=s,s.length!==t.length))return!1;for(let r=0;r<s.length;r++){const o=s[r],i=t[r];if(o.filename!==i.filename||o.lineno!==i.lineno||o.colno!==i.colno||o.function!==i.function)return!1}return!0}u(q$,"_isSameStacktrace");function K$(n,e){let t=n.fingerprint,s=e.fingerprint;if(!t&&!s)return!0;if(t&&!s||!t&&s)return!1;t=t,s=s;try{return t.join("")===s.join("")}catch{return!1}}u(K$,"_isSameFingerprint");function bC(n){return n.exception&&n.exception.values&&n.exception.values[0]}u(bC,"_getExceptionFromEvent");function wz(n,e,t,s,r="auto.http.browser"){if(!n.fetchData)return;const o=xo()&&e(n.fetchData.url);if(n.endTimestamp&&o){const m=n.fetchData.__span;if(!m)return;const g=s[m];g&&(vz(g,n),delete s[m]);return}const i=vt(),a=tt(),{method:c,url:l}=n.fetchData,d=Cz(l),h=d?Bi(d).host:void 0,p=!!On(),f=o&&p?ci({name:`${c} ${l}`,attributes:{url:l,type:"fetch","http.method":c,"http.url":d,"server.address":h,[$n]:r,[Ki]:"http.client"}}):new Lc;if(n.fetchData.__span=f.spanContext().spanId,s[f.spanContext().spanId]=f,t(n.fetchData.url)&&a){const m=n.args[0];n.args[1]=n.args[1]||{};const g=n.args[1];g.headers=Sz(m,a,i,g,xo()&&p?f:void 0)}return f}u(wz,"instrumentFetchRequest");function Sz(n,e,t,s,r){const o=Ss(),{traceId:i,spanId:a,sampled:c,dsc:l}={...o.getPropagationContext(),...t.getPropagationContext()},d=r?E$(r):I0(i,a,c),h=w$(l||(r?ai(r):im(i,e))),p=s.headers||(typeof Request<"u"&&mo(n,Request)?n.headers:void 0);if(p)if(typeof Headers<"u"&&mo(p,Headers)){const f=new Headers(p);if(f.set("sentry-trace",d),h){const m=f.get(Ha);if(m){const g=Qh(m);f.set(Ha,g?`${g},${h}`:h)}else f.set(Ha,h)}return f}else if(Array.isArray(p)){const f=[...p.filter(m=>!(Array.isArray(m)&&m[0]==="sentry-trace")).map(m=>{if(Array.isArray(m)&&m[0]===Ha&&typeof m[1]=="string"){const[g,y,...b]=m;return[g,Qh(y),...b]}else return m}),["sentry-trace",d]];return h&&f.push([Ha,h]),f}else{const f="baggage"in p?p.baggage:void 0;let m=[];return Array.isArray(f)?m=f.map(g=>typeof g=="string"?Qh(g):g).filter(g=>g===""):f&&m.push(Qh(f)),h&&m.push(h),{...p,"sentry-trace":d,baggage:m.length>0?m.join(","):void 0}}else return{"sentry-trace":d,baggage:h}}u(Sz,"addTracingHeadersToFetchRequest");function Cz(n){try{return new URL(n).href}catch{return}}u(Cz,"getFullURL$1");function vz(n,e){if(e.response){$$(n,e.response.status);const t=e.response&&e.response.headers&&e.response.headers.get("content-length");if(t){const s=parseInt(t);s>0&&n.setAttribute("http.response_content_length",s)}}else e.error&&n.setStatus({code:vn,message:"internal_error"});n.end()}u(vz,"endSpan");function Qh(n){return n.split(",").filter(e=>!e.split("=")[0].startsWith(v0)).join(",")}u(Qh,"stripBaggageHeaderOfSentryBaggageValues");const Ve=ot;let Ub=0;function X$(){return Ub>0}u(X$,"shouldIgnoreOnError");function Iz(){Ub++,setTimeout(()=>{Ub--})}u(Iz,"ignoreNextOnError");function fc(n,e={},t){if(typeof n!="function")return n;try{const r=n.__sentry_wrapped__;if(r)return typeof r=="function"?r:n;if(C0(n))return n}catch{return n}const s=u(function(){const r=Array.prototype.slice.call(arguments);try{const o=r.map(i=>fc(i,e));return n.apply(this,o)}catch(o){throw Iz(),T0(i=>{i.addEventProcessor(a=>(e.mechanism&&(Ob(a,void 0,void 0),El(a,e.mechanism)),a.extra={...a.extra,arguments:r},a)),cd(o)}),o}},"sentryWrapped");try{for(const r in n)Object.prototype.hasOwnProperty.call(n,r)&&(s[r]=n[r])}catch{}o$(s,n),nr(n,"__sentry_wrapped__",s);try{Object.getOwnPropertyDescriptor(s,"name").configurable&&Object.defineProperty(s,"name",{get(){return n.name}})}catch{}return s}u(fc,"wrap");const gr=typeof __SENTRY_DEBUG__>"u"||__SENTRY_DEBUG__;function D0(n,e){const t=O0(n,e),s={type:Ez(e),value:_z(e)};return t.length&&(s.stacktrace={frames:t}),s.type===void 0&&s.value===""&&(s.value="Unrecoverable error caught"),s}u(D0,"exceptionFromError");function kz(n,e,t,s){const r=tt(),o=r&&r.getOptions().normalizeDepth,i=Fz(e),a={__serialized__:y$(e,o)};if(i)return{exception:{values:[D0(n,i)]},extra:a};const c={exception:{values:[{type:tm(e)?e.constructor.name:s?"UnhandledRejection":"Error",value:Dz(e,{isUnhandledRejection:s})}]},extra:a};if(t){const l=O0(n,t);l.length&&(c.exception.values[0].stacktrace={frames:l})}return c}u(kz,"eventFromPlainObject");function zy(n,e){return{exception:{values:[D0(n,e)]}}}u(zy,"eventFromError");function O0(n,e){const t=e.stacktrace||e.stack||"",s=Nz(e),r=Tz(e);try{return n(t,s,r)}catch{}return[]}u(O0,"parseStackFrames");const $z=/Minified React error #\d+;/i;function Nz(n){return n&&$z.test(n.message)?1:0}u(Nz,"getSkipFirstStackStringLines");function Tz(n){return typeof n.framesToPop=="number"?n.framesToPop:0}u(Tz,"getPopFirstTopFrames");function Y$(n){return typeof WebAssembly<"u"&&typeof WebAssembly.Exception<"u"?n instanceof WebAssembly.Exception:!1}u(Y$,"isWebAssemblyException");function Ez(n){const e=n&&n.name;return!e&&Y$(n)?n.message&&Array.isArray(n.message)&&n.message.length==2?n.message[0]:"WebAssembly.Exception":e}u(Ez,"extractType");function _z(n){const e=n&&n.message;return e?e.error&&typeof e.error.message=="string"?e.error.message:Y$(n)&&Array.isArray(n.message)&&n.message.length==2?n.message[1]:e:"No error message"}u(_z,"extractMessage");function Rz(n,e,t,s){const r=t&&t.syntheticException||void 0,o=F0(n,e,r,s);return El(o),o.level="error",t&&t.event_id&&(o.event_id=t.event_id),bo(o)}u(Rz,"eventFromException");function Az(n,e,t="info",s,r){const o=s&&s.syntheticException||void 0,i=Gb(n,e,o,r);return i.level=t,s&&s.event_id&&(i.event_id=s.event_id),bo(i)}u(Az,"eventFromMessage");function F0(n,e,t,s,r){let o;if(Zk(e)&&e.error)return zy(n,e.error);if(F1(e)||b3(e)){const i=e;if("stack"in e)o=zy(n,e);else{const a=i.name||(F1(i)?"DOMError":"DOMException"),c=i.message?`${a}: ${i.message}`:a;o=Gb(n,c,t,s),Ob(o,c)}return"code"in i&&(o.tags={...o.tags,"DOMException.code":`${i.code}`}),o}return x0(e)?zy(n,e):dc(e)||tm(e)?(o=kz(n,e,t,r),El(o,{synthetic:!0}),o):(o=Gb(n,e,t,s),Ob(o,`${e}`,void 0),El(o,{synthetic:!0}),o)}u(F0,"eventFromUnknownInput");function Gb(n,e,t,s){const r={};if(s&&t){const o=O0(n,t);o.length&&(r.exception={values:[{value:e,stacktrace:{frames:o}}]})}if(w0(e)){const{__sentry_template_string__:o,__sentry_template_values__:i}=e;return r.logentry={message:o,params:i},r}return r.message=e,r}u(Gb,"eventFromString");function Dz(n,{isUnhandledRejection:e}){const t=P3(n),s=e?"promise rejection":"exception";return Zk(n)?`Event \`ErrorEvent\` captured as ${s} with message \`${n.message}\``:tm(n)?`Event \`${Oz(n)}\` (type=${n.type}) captured as ${s}`:`Object captured as ${s} with keys: ${t}`}u(Dz,"getNonErrorObjectExceptionValue");function Oz(n){try{const e=Object.getPrototypeOf(n);return e?e.constructor.name:void 0}catch{}}u(Oz,"getObjectClassName");function Fz(n){for(const e in n)if(Object.prototype.hasOwnProperty.call(n,e)){const t=n[e];if(t instanceof Error)return t}}u(Fz,"getErrorPropertyFromObject");function Pz(n,{metadata:e,tunnel:t,dsn:s}){const r={event_id:n.event_id,sent_at:new Date().toISOString(),...e&&e.sdk&&{sdk:{name:e.sdk.name,version:e.sdk.version}},...!!t&&!!s&&{dsn:od(s)}},o=Lz(n);return pa(r,[o])}u(Pz,"createUserFeedbackEnvelope");function Lz(n){return[{type:"user_report"},n]}u(Lz,"createUserFeedbackEnvelopeItem");class Mz extends BM{static{u(this,"BrowserClient")}constructor(e){const t={parentSpanIsAlwaysRootSpan:!0,...e},s=Ve.SENTRY_SDK_SOURCE||Q3();j$(t,"browser",["browser"],s),super(t),t.sendClientReports&&Ve.document&&Ve.document.addEventListener("visibilitychange",()=>{Ve.document.visibilityState==="hidden"&&this._flushOutcomes()})}eventFromException(e,t){return Rz(this._options.stackParser,e,t,this._options.attachStacktrace)}eventFromMessage(e,t="info",s){return Az(this._options.stackParser,e,t,s,this._options.attachStacktrace)}captureUserFeedback(e){if(!this._isEnabled()){gr&&ae.warn("SDK not enabled, will not capture user feedback.");return}const t=Pz(e,{metadata:this.getSdkMetadata(),dsn:this.getDsn(),tunnel:this.getOptions().tunnel});this.sendEnvelope(t)}_prepareEvent(e,t,s){return e.platform=e.platform||"javascript",super._prepareEvent(e,t,s)}}const _s=typeof __SENTRY_DEBUG__>"u"||__SENTRY_DEBUG__,zz=u((n,e)=>n>e[1]?"poor":n>e[0]?"needs-improvement":"good","getRating"),Mc=u((n,e,t,s)=>{let r,o;return i=>{e.value>=0&&(i||s)&&(o=e.value-(r||0),(o||r===void 0)&&(r=e.value,e.delta=o,e.rating=zz(e.value,t),n(e)))}},"bindReporter"),Le=ot,Bz=u(()=>`v3-${Date.now()}-${Math.floor(Math.random()*(9e12-1))+1e12}`,"generateUniqueID"),ud=u(()=>Le.performance&&performance.getEntriesByType&&performance.getEntriesByType("navigation")[0],"getNavigationEntry"),ld=u(()=>{const n=ud();return n&&n.activationStart||0},"getActivationStart"),zc=u((n,e)=>{const t=ud();let s="navigate";return t&&(Le.document&&Le.document.prerendering||ld()>0?s="prerender":Le.document&&Le.document.wasDiscarded?s="restore":t.type&&(s=t.type.replace(/_/g,"-"))),{name:n,value:typeof e>"u"?-1:e,rating:"good",delta:0,entries:[],id:Bz(),navigationType:s}},"initMetric"),ma=u((n,e,t)=>{try{if(PerformanceObserver.supportedEntryTypes.includes(n)){const s=new PerformanceObserver(r=>{Promise.resolve().then(()=>{e(r.getEntries())})});return s.observe(Object.assign({type:n,buffered:!0},t||{})),s}}catch{}},"observe"),dd=u(n=>{const e=u(t=>{(t.type==="pagehide"||Le.document&&Le.document.visibilityState==="hidden")&&n(t)},"onHiddenOrPageHide");Le.document&&(addEventListener("visibilitychange",e,!0),addEventListener("pagehide",e,!0))},"onHidden"),P0=u(n=>{let e=!1;return t=>{e||(n(t),e=!0)}},"runOnce");let Rl=-1;const Wz=u(()=>{Rl=Le.document.visibilityState==="hidden"&&!Le.document.prerendering?0:1/0},"initHiddenTime"),tf=u(n=>{Le.document.visibilityState==="hidden"&&Rl>-1&&(Rl=n.type==="visibilitychange"?n.timeStamp:0,removeEventListener("visibilitychange",tf,!0),removeEventListener("prerenderingchange",tf,!0))},"onVisibilityUpdate"),Vz=u(()=>{addEventListener("visibilitychange",tf,!0),addEventListener("prerenderingchange",tf,!0)},"addChangeListeners"),am=u(()=>(Le.document&&Rl<0&&(Wz(),Vz()),{get firstHiddenTime(){return Rl}}),"getVisibilityWatcher"),hd=u(n=>{Le.document&&Le.document.prerendering?addEventListener("prerenderingchange",()=>n(),!0):n()},"whenActivated"),Uz=[1800,3e3],Gz=u((n,e={})=>{hd(()=>{const t=am(),s=zc("FCP");let r;const i=ma("paint",u(a=>{a.forEach(c=>{c.name==="first-contentful-paint"&&(i.disconnect(),c.startTime<t.firstHiddenTime&&(s.value=Math.max(c.startTime-ld(),0),s.entries.push(c),r(!0)))})},"handleEntries"));i&&(r=Mc(n,s,Uz,e.reportAllChanges))})},"onFCP"),Hz=[.1,.25],jz=u((n,e={})=>{Gz(P0(()=>{const t=zc("CLS",0);let s,r=0,o=[];const i=u(c=>{c.forEach(l=>{if(!l.hadRecentInput){const d=o[0],h=o[o.length-1];r&&d&&h&&l.startTime-h.startTime<1e3&&l.startTime-d.startTime<5e3?(r+=l.value,o.push(l)):(r=l.value,o=[l])}}),r>t.value&&(t.value=r,t.entries=o,s())},"handleEntries"),a=ma("layout-shift",i);a&&(s=Mc(n,t,Hz,e.reportAllChanges),dd(()=>{i(a.takeRecords()),s(!0)}),setTimeout(s,0))}))},"onCLS"),qz=[100,300],Kz=u((n,e={})=>{hd(()=>{const t=am(),s=zc("FID");let r;const o=u(c=>{c.startTime<t.firstHiddenTime&&(s.value=c.processingStart-c.startTime,s.entries.push(c),r(!0))},"handleEntry"),i=u(c=>{c.forEach(o)},"handleEntries"),a=ma("first-input",i);r=Mc(n,s,qz,e.reportAllChanges),a&&dd(P0(()=>{i(a.takeRecords()),a.disconnect()}))})},"onFID");let Q$=0,By=1/0,Jh=0;const Xz=u(n=>{n.forEach(e=>{e.interactionId&&(By=Math.min(By,e.interactionId),Jh=Math.max(Jh,e.interactionId),Q$=Jh?(Jh-By)/7+1:0)})},"updateEstimate");let Hb;const Yz=u(()=>Hb?Q$:performance.interactionCount||0,"getInteractionCount"),Qz=u(()=>{"interactionCount"in performance||Hb||(Hb=ma("event",Xz,{type:"event",buffered:!0,durationThreshold:0}))},"initInteractionCountPolyfill"),Jz=[200,500],Zz=0,J$=u(()=>Yz()-Zz,"getInteractionCountForNavigation"),xC=10,to=[],Wy={},wC=u(n=>{const e=to[to.length-1],t=Wy[n.interactionId];if(t||to.length<xC||e&&n.duration>e.latency){if(t)t.entries.push(n),t.latency=Math.max(t.latency,n.duration);else{const s={id:n.interactionId,latency:n.duration,entries:[n]};Wy[s.id]=s,to.push(s)}to.sort((s,r)=>r.latency-s.latency),to.splice(xC).forEach(s=>{delete Wy[s.id]})}},"processEntry"),eB=u(()=>{const n=Math.min(to.length-1,Math.floor(J$()/50));return to[n]},"estimateP98LongestInteraction"),tB=u((n,e={})=>{hd(()=>{Qz();const t=zc("INP");let s;const r=u(i=>{i.forEach(c=>{c.interactionId&&wC(c),c.entryType==="first-input"&&!to.some(d=>d.entries.some(h=>c.duration===h.duration&&c.startTime===h.startTime))&&wC(c)});const a=eB();a&&a.latency!==t.value&&(t.value=a.latency,t.entries=a.entries,s())},"handleEntries"),o=ma("event",r,{durationThreshold:e.durationThreshold!=null?e.durationThreshold:40});s=Mc(n,t,Jz,e.reportAllChanges),o&&("PerformanceEventTiming"in Le&&"interactionId"in PerformanceEventTiming.prototype&&o.observe({type:"first-input",buffered:!0}),dd(()=>{r(o.takeRecords()),t.value<0&&J$()>0&&(t.value=0,t.entries=[]),s(!0)}))})},"onINP"),nB=[2500,4e3],SC={},sB=u((n,e={})=>{hd(()=>{const t=am(),s=zc("LCP");let r;const o=u(a=>{const c=a[a.length-1];c&&c.startTime<t.firstHiddenTime&&(s.value=Math.max(c.startTime-ld(),0),s.entries=[c],r())},"handleEntries"),i=ma("largest-contentful-paint",o);if(i){r=Mc(n,s,nB,e.reportAllChanges);const a=P0(()=>{SC[s.id]||(o(i.takeRecords()),i.disconnect(),SC[s.id]=!0,r(!0))});["keydown","click"].forEach(c=>{Le.document&&addEventListener(c,()=>setTimeout(a,0),!0)}),dd(a)}})},"onLCP"),rB=[800,1800],jb=u(n=>{Le.document&&Le.document.prerendering?hd(()=>jb(n)):Le.document&&Le.document.readyState!=="complete"?addEventListener("load",()=>jb(n),!0):setTimeout(n,0)},"whenReady"),oB=u((n,e={})=>{const t=zc("TTFB"),s=Mc(n,t,rB,e.reportAllChanges);jb(()=>{const r=ud();if(r){const o=r.responseStart;if(o<=0||o>performance.now())return;t.value=Math.max(o-ld(),0),t.entries=[r],s(!0)}})},"onTTFB"),xl={},nf={};let Z$,e2,t2,n2,s2;function L0(n,e=!1){return pd("cls",n,aB,Z$,e)}u(L0,"addClsInstrumentationHandler");function r2(n,e=!1){return pd("lcp",n,uB,t2,e)}u(r2,"addLcpInstrumentationHandler");function o2(n){return pd("fid",n,cB,e2)}u(o2,"addFidInstrumentationHandler");function iB(n){return pd("ttfb",n,lB,n2)}u(iB,"addTtfbInstrumentationHandler");function i2(n){return pd("inp",n,dB,s2)}u(i2,"addInpInstrumentationHandler");function mc(n,e){return a2(n,e),nf[n]||(hB(n),nf[n]=!0),c2(n,e)}u(mc,"addPerformanceInstrumentationHandler");function Bc(n,e){const t=xl[n];if(!(!t||!t.length))for(const s of t)try{s(e)}catch(r){_s&&ae.error(`Error while triggering instrumentation handler.
Type: ${n}
Name: ${yo(s)}
Error:`,r)}}u(Bc,"triggerHandlers");function aB(){return jz(n=>{Bc("cls",{metric:n}),Z$=n},{reportAllChanges:!0})}u(aB,"instrumentCls");function cB(){return Kz(n=>{Bc("fid",{metric:n}),e2=n})}u(cB,"instrumentFid");function uB(){return sB(n=>{Bc("lcp",{metric:n}),t2=n},{reportAllChanges:!0})}u(uB,"instrumentLcp");function lB(){return oB(n=>{Bc("ttfb",{metric:n}),n2=n})}u(lB,"instrumentTtfb");function dB(){return tB(n=>{Bc("inp",{metric:n}),s2=n})}u(dB,"instrumentInp");function pd(n,e,t,s,r=!1){a2(n,e);let o;return nf[n]||(o=t(),nf[n]=!0),s&&e({metric:s}),c2(n,e,r?o:void 0)}u(pd,"addMetricObserver");function hB(n){const e={};n==="event"&&(e.durationThreshold=0),ma(n,t=>{Bc(n,{entries:t})},e)}u(hB,"instrumentPerformanceObserver");function a2(n,e){xl[n]=xl[n]||[],xl[n].push(e)}u(a2,"addHandler");function c2(n,e,t){return()=>{t&&t();const s=xl[n];if(!s)return;const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}u(c2,"getCleanupCallback");function pB(n){return"duration"in n}u(pB,"isPerformanceEventTiming");function Vy(n){return typeof n=="number"&&isFinite(n)}u(Vy,"isMeasurementValue");function Xi(n,e,t,{...s}){const r=dt(n).start_timestamp;return r&&r>e&&typeof n.updateStartTime=="function"&&n.updateStartTime(e),P$(n,()=>{const o=ci({startTime:e,...s});return o&&o.end(t),o})}u(Xi,"startAndEndSpan");function u2(n){const e=tt();if(!e)return;const{name:t,transaction:s,attributes:r,startTime:o}=n,{release:i,environment:a}=e.getOptions(),c=e.getIntegrationByName("Replay"),l=c&&c.getReplayId(),d=vt(),h=d.getUser(),p=h!==void 0?h.email||h.id||h.ip_address:void 0;let f;try{f=d.getScopeData().contexts.profile.profile_id}catch{}const m={release:i,environment:a,user:p||void 0,profile_id:f||void 0,replay_id:l||void 0,transaction:s,"user_agent.original":Le.navigator&&Le.navigator.userAgent,...r};return ci({name:t,attributes:m,startTime:o,experimental:{standalone:!0}})}u(u2,"startStandaloneWebVitalSpan");function M0(){return Le&&Le.addEventListener&&Le.performance}u(M0,"getBrowserPerformanceAPI");function en(n){return n/1e3}u(en,"msToSec");function fB(){let n=0,e,t;if(!gB())return;let s=!1;function r(){s||(s=!0,t&&mB(n,e,t),o())}u(r,"_collectClsOnce");const o=L0(({metric:i})=>{const a=i.entries[i.entries.length-1];a&&(n=i.value,e=a)},!0);dd(()=>{r()}),setTimeout(()=>{const i=tt(),a=Ns([i,"optionalAccess",h=>h.on,"call",h=>h("startNavigationSpan",()=>{r(),a&&a()})]),c=On(),l=c&&An(c),d=l&&dt(l);d&&d.op==="pageload"&&(t=l.spanContext().spanId)},0)}u(fB,"trackClsAsStandaloneSpan");function mB(n,e,t){_s&&ae.log(`Sending CLS span (${n})`);const s=en((ss||0)+(Ns([e,"optionalAccess",c=>c.startTime])||0)),r=vt().getScopeData().transactionName,o=e?go(Ns([e,"access",c=>c.sources,"access",c=>c[0],"optionalAccess",c=>c.node])):"Layout shift",i=yn({[$n]:"auto.http.browser.cls",[Ki]:"ui.webvital.cls",[E0]:Ns([e,"optionalAccess",c=>c.duration])||0,"sentry.pageload.span_id":t}),a=u2({name:o,transaction:r,attributes:i,startTime:s});Ns([a,"optionalAccess",c=>c.addEvent,"call",c=>c("cls",{[rm]:"",[om]:n})]),Ns([a,"optionalAccess",c=>c.end,"call",c=>c(s)])}u(mB,"sendStandaloneClsSpan");function gB(){try{return Ns([PerformanceObserver,"access",n=>n.supportedEntryTypes,"optionalAccess",n=>n.includes,"call",n=>n("layout-shift")])}catch{return!1}}u(gB,"supportsLayoutShift");const yB=2147483647;let CC=0,Rn={},Er,wl;function bB({recordClsStandaloneSpans:n}){const e=M0();if(e&&ss){e.mark&&Le.performance.mark("sentry-tracing-init");const t=IB(),s=vB(),r=kB(),o=n?fB():CB();return()=>{t(),s(),r(),o&&o()}}return()=>{}}u(bB,"startTrackingWebVitals");function xB(){mc("longtask",({entries:n})=>{const e=On();if(!e)return;const{op:t,start_timestamp:s}=dt(e);for(const r of n){const o=en(ss+r.startTime),i=en(r.duration);t==="navigation"&&s&&o<s||Xi(e,o,o+i,{name:"Main UI thread blocked",op:"ui.long-task",attributes:{[$n]:"auto.ui.browser.metrics"}})}})}u(xB,"startTrackingLongTasks");function wB(){new PerformanceObserver(e=>{if(On())for(const t of e.getEntries()){if(!t.scripts[0])continue;const s=en(ss+t.startTime),r=en(t.duration),o={[$n]:"auto.ui.browser.metrics"},i=t.scripts[0],{invoker:a,invokerType:c,sourceURL:l,sourceFunctionName:d,sourceCharPosition:h}=i;o["browser.script.invoker"]=a,o["browser.script.invoker_type"]=c,l&&(o["code.filepath"]=l),d&&(o["code.function"]=d),h!==-1&&(o["browser.script.source_char_position"]=h);const p=ci({name:"Main UI thread blocked",op:"ui.long-animation-frame",startTime:s,attributes:o});p&&p.end(s+r)}}).observe({type:"long-animation-frame",buffered:!0})}u(wB,"startTrackingLongAnimationFrames");function SB(){mc("event",({entries:n})=>{if(On()){for(const e of n)if(e.name==="click"){const t=en(ss+e.startTime),s=en(e.duration),r={name:go(e.target),op:`ui.interaction.${e.name}`,startTime:t,attributes:{[$n]:"auto.ui.browser.metrics"}},o=s$(e.target);o&&(r.attributes["ui.component_name"]=o);const i=ci(r);i&&i.end(t+s)}}})}u(SB,"startTrackingInteractions");function CB(){return L0(({metric:n})=>{const e=n.entries[n.entries.length-1];e&&(_s&&ae.log(`[Measurements] Adding CLS ${n.value}`),Rn.cls={value:n.value,unit:""},wl=e)},!0)}u(CB,"_trackCLS");function vB(){return r2(({metric:n})=>{const e=n.entries[n.entries.length-1];e&&(_s&&ae.log("[Measurements] Adding LCP"),Rn.lcp={value:n.value,unit:"millisecond"},Er=e)},!0)}u(vB,"_trackLCP");function IB(){return o2(({metric:n})=>{const e=n.entries[n.entries.length-1];if(!e)return;const t=en(ss),s=en(e.startTime);_s&&ae.log("[Measurements] Adding FID"),Rn.fid={value:n.value,unit:"millisecond"},Rn["mark.fid"]={value:t+s,unit:"second"}})}u(IB,"_trackFID");function kB(){return iB(({metric:n})=>{n.entries[n.entries.length-1]&&(_s&&ae.log("[Measurements] Adding TTFB"),Rn.ttfb={value:n.value,unit:"millisecond"})})}u(kB,"_trackTtfb");function $B(n,e){const t=M0();if(!t||!Le.performance.getEntries||!ss)return;_s&&ae.log("[Tracing] Adding & adjusting spans using Performance API");const s=en(ss),r=t.getEntries(),{op:o,start_timestamp:i}=dt(n);if(r.slice(CC).forEach(a=>{const c=en(a.startTime),l=en(Math.max(0,a.duration));if(!(o==="navigation"&&i&&s+c<i))switch(a.entryType){case"navigation":{TB(n,a,s);break}case"mark":case"paint":case"measure":{NB(n,a,c,l,s);const d=am(),h=a.startTime<d.firstHiddenTime;a.name==="first-paint"&&h&&(_s&&ae.log("[Measurements] Adding FP"),Rn.fp={value:a.startTime,unit:"millisecond"}),a.name==="first-contentful-paint"&&h&&(_s&&ae.log("[Measurements] Adding FCP"),Rn.fcp={value:a.startTime,unit:"millisecond"});break}case"resource":{_B(n,a,a.name,c,l,s);break}}}),CC=Math.max(r.length-1,0),RB(n),o==="pageload"){DB(Rn);const a=Rn["mark.fid"];a&&Rn.fid&&(Xi(n,a.value,a.value+en(Rn.fid.value),{name:"first input delay",op:"ui.action",attributes:{[$n]:"auto.ui.browser.metrics"}}),delete Rn["mark.fid"]),(!("fcp"in Rn)||!e.recordClsOnPageloadSpan)&&delete Rn.cls,Object.entries(Rn).forEach(([c,l])=>{tM(c,l.value,l.unit)}),n.setAttribute("performance.timeOrigin",s),n.setAttribute("performance.activationStart",ld()),AB(n)}Er=void 0,wl=void 0,Rn={}}u($B,"addPerformanceEntries");function NB(n,e,t,s,r){const o=ud(),i=en(o?o.requestStart:0),a=r+Math.max(t,i),c=r+t,l=c+s,d={[$n]:"auto.resource.browser.metrics"};return a!==c&&(d["sentry.browser.measure_happened_before_request"]=!0,d["sentry.browser.measure_start_time"]=a),Xi(n,a,l,{name:e.name,op:e.entryType,attributes:d}),a}u(NB,"_addMeasureSpans");function TB(n,e,t){["unloadEvent","redirect","domContentLoadedEvent","loadEvent","connect"].forEach(s=>{Zh(n,e,s,t)}),Zh(n,e,"secureConnection",t,"TLS/SSL","connectEnd"),Zh(n,e,"fetch",t,"cache","domainLookupStart"),Zh(n,e,"domainLookup",t,"DNS"),EB(n,e,t)}u(TB,"_addNavigationSpans");function Zh(n,e,t,s,r,o){const i=o?e[o]:e[`${t}End`],a=e[`${t}Start`];!a||!i||Xi(n,s+en(a),s+en(i),{op:`browser.${r||t}`,name:e.name,attributes:{[$n]:"auto.ui.browser.metrics"}})}u(Zh,"_addPerformanceNavigationTiming");function EB(n,e,t){const s=t+en(e.requestStart),r=t+en(e.responseEnd),o=t+en(e.responseStart);e.responseEnd&&(Xi(n,s,r,{op:"browser.request",name:e.name,attributes:{[$n]:"auto.ui.browser.metrics"}}),Xi(n,o,r,{op:"browser.response",name:e.name,attributes:{[$n]:"auto.ui.browser.metrics"}}))}u(EB,"_addRequest");function _B(n,e,t,s,r,o){if(e.initiatorType==="xmlhttprequest"||e.initiatorType==="fetch")return;const i=Bi(t),a={[$n]:"auto.resource.browser.metrics"};Uy(a,e,"transferSize","http.response_transfer_size"),Uy(a,e,"encodedBodySize","http.response_content_length"),Uy(a,e,"decodedBodySize","http.decoded_response_content_length"),e.deliveryType!=null&&(a["http.response_delivery_type"]=e.deliveryType),"renderBlockingStatus"in e&&(a["resource.render_blocking_status"]=e.renderBlockingStatus),i.protocol&&(a["url.scheme"]=i.protocol.split(":").pop()),i.host&&(a["server.address"]=i.host),a["url.same_origin"]=t.includes(Le.location.origin);const c=o+s,l=c+r;Xi(n,c,l,{name:t.replace(Le.location.origin,""),op:e.initiatorType?`resource.${e.initiatorType}`:"resource.other",attributes:a})}u(_B,"_addResourceSpans");function RB(n){const e=Le.navigator;if(!e)return;const t=e.connection;t&&(t.effectiveType&&n.setAttribute("effectiveConnectionType",t.effectiveType),t.type&&n.setAttribute("connectionType",t.type),Vy(t.rtt)&&(Rn["connection.rtt"]={value:t.rtt,unit:"millisecond"})),Vy(e.deviceMemory)&&n.setAttribute("deviceMemory",`${e.deviceMemory} GB`),Vy(e.hardwareConcurrency)&&n.setAttribute("hardwareConcurrency",String(e.hardwareConcurrency))}u(RB,"_trackNavigator");function AB(n){Er&&(_s&&ae.log("[Measurements] Adding LCP Data"),Er.element&&n.setAttribute("lcp.element",go(Er.element)),Er.id&&n.setAttribute("lcp.id",Er.id),Er.url&&n.setAttribute("lcp.url",Er.url.trim().slice(0,200)),n.setAttribute("lcp.size",Er.size)),wl&&wl.sources&&(_s&&ae.log("[Measurements] Adding CLS Data"),wl.sources.forEach((e,t)=>n.setAttribute(`cls.source.${t+1}`,go(e.node))))}u(AB,"_setWebVitalAttributes");function Uy(n,e,t,s){const r=e[t];r!=null&&r<yB&&(n[s]=r)}u(Uy,"setResourceEntrySizeData");function DB(n){const e=ud();if(!e)return;const{responseStart:t,requestStart:s}=e;s<=t&&(_s&&ae.log("[Measurements] Adding TTFB Request Time"),n["ttfb.requestTime"]={value:t-s,unit:"millisecond"})}u(DB,"_addTtfbRequestTimeToMeasurements");const OB=1e3;let vC,qb,Kb;function l2(n){const e="dom";oi(e,n),ii(e,FB)}u(l2,"addClickKeypressInstrumentationHandler");function FB(){if(!Le.document)return;const n=Js.bind(null,"dom"),e=IC(n,!0);Le.document.addEventListener("click",e,!1),Le.document.addEventListener("keypress",e,!1),["EventTarget","Node"].forEach(t=>{const s=Le[t]&&Le[t].prototype;!s||!s.hasOwnProperty||!s.hasOwnProperty("addEventListener")||(ps(s,"addEventListener",function(r){return function(o,i,a){if(o==="click"||o=="keypress")try{const c=this,l=c.__sentry_instrumentation_handlers__=c.__sentry_instrumentation_handlers__||{},d=l[o]=l[o]||{refCount:0};if(!d.handler){const h=IC(n);d.handler=h,r.call(this,o,h,a)}d.refCount++}catch{}return r.call(this,o,i,a)}}),ps(s,"removeEventListener",function(r){return function(o,i,a){if(o==="click"||o=="keypress")try{const c=this,l=c.__sentry_instrumentation_handlers__||{},d=l[o];d&&(d.refCount--,d.refCount<=0&&(r.call(this,o,d.handler,a),d.handler=void 0,delete l[o]),Object.keys(l).length===0&&delete c.__sentry_instrumentation_handlers__)}catch{}return r.call(this,o,i,a)}}))})}u(FB,"instrumentDOM");function PB(n){if(n.type!==qb)return!1;try{if(!n.target||n.target._sentryId!==Kb)return!1}catch{}return!0}u(PB,"isSimilarToLastCapturedEvent");function LB(n,e){return n!=="keypress"?!1:!e||!e.tagName?!0:!(e.tagName==="INPUT"||e.tagName==="TEXTAREA"||e.isContentEditable)}u(LB,"shouldSkipDOMEvent");function IC(n,e=!1){return t=>{if(!t||t._sentryCaptured)return;const s=MB(t);if(LB(t.type,s))return;nr(t,"_sentryCaptured",!0),s&&!s._sentryId&&nr(s,"_sentryId",zt());const r=t.type==="keypress"?"input":t.type;PB(t)||(n({event:t,name:r,global:e}),qb=t.type,Kb=s?s._sentryId:void 0),clearTimeout(vC),vC=Le.setTimeout(()=>{Kb=void 0,qb=void 0},OB)}}u(IC,"makeDOMEventHandler");function MB(n){try{return n.target}catch{return null}}u(MB,"getEventTarget$1");let ep;function cm(n){const e="history";oi(e,n),ii(e,zB)}u(cm,"addHistoryInstrumentationHandler");function zB(){if(!kL())return;const n=Le.onpopstate;Le.onpopstate=function(...t){const s=Le.location.href,r=ep;if(ep=s,Js("history",{from:r,to:s}),n)try{return n.apply(this,t)}catch{}};function e(t){return function(...s){const r=s.length>2?s[2]:void 0;if(r){const o=ep,i=String(r);ep=i,Js("history",{from:o,to:i})}return t.apply(this,s)}}u(e,"historyReplacementFunction"),ps(Le.history,"pushState",e),ps(Le.history,"replaceState",e)}u(zB,"instrumentHistory");const Rp={};function d2(n){const e=Rp[n];if(e)return e;let t=Le[n];if(Ab(t))return Rp[n]=t.bind(Le);const s=Le.document;if(s&&typeof s.createElement=="function")try{const r=s.createElement("iframe");r.hidden=!0,s.head.appendChild(r);const o=r.contentWindow;o&&o[n]&&(t=o[n]),s.head.removeChild(r)}catch(r){_s&&ae.warn(`Could not create sandbox iframe for ${n} check, bailing to window.${n}: `,r)}return t&&(Rp[n]=t.bind(Le))}u(d2,"getNativeImplementation");function kC(n){Rp[n]=void 0}u(kC,"clearCachedImplementation");function gc(...n){return d2("setTimeout")(...n)}u(gc,"setTimeout$3");const Oi="__sentry_xhr_v3__";function h2(n){const e="xhr";oi(e,n),ii(e,BB)}u(h2,"addXhrInstrumentationHandler");function BB(){if(!Le.XMLHttpRequest)return;const n=XMLHttpRequest.prototype;n.open=new Proxy(n.open,{apply(e,t,s){const r=Zn()*1e3,o=co(s[0])?s[0].toUpperCase():void 0,i=WB(s[1]);if(!o||!i)return e.apply(t,s);t[Oi]={method:o,url:i,request_headers:{}},o==="POST"&&i.match(/sentry_key/)&&(t.__sentry_own_request__=!0);const a=u(()=>{const c=t[Oi];if(c&&t.readyState===4){try{c.status_code=t.status}catch{}const l={endTimestamp:Zn()*1e3,startTimestamp:r,xhr:t};Js("xhr",l)}},"onreadystatechangeHandler");return"onreadystatechange"in t&&typeof t.onreadystatechange=="function"?t.onreadystatechange=new Proxy(t.onreadystatechange,{apply(c,l,d){return a(),c.apply(l,d)}}):t.addEventListener("readystatechange",a),t.setRequestHeader=new Proxy(t.setRequestHeader,{apply(c,l,d){const[h,p]=d,f=l[Oi];return f&&co(h)&&co(p)&&(f.request_headers[h.toLowerCase()]=p),c.apply(l,d)}}),e.apply(t,s)}}),n.send=new Proxy(n.send,{apply(e,t,s){const r=t[Oi];if(!r)return e.apply(t,s);s[0]!==void 0&&(r.body=s[0]);const o={startTimestamp:Zn()*1e3,xhr:t};return Js("xhr",o),e.apply(t,s)}})}u(BB,"instrumentXHR");function WB(n){if(co(n))return n;try{return n.toString()}catch{}}u(WB,"parseUrl$1");const Gy=[],Ap=new Map;function VB(){if(M0()&&ss){const e=UB();return()=>{e()}}return()=>{}}u(VB,"startTrackingINP");const $C={click:"click",pointerdown:"click",pointerup:"click",mousedown:"click",mouseup:"click",touchstart:"click",touchend:"click",mouseover:"hover",mouseout:"hover",mouseenter:"hover",mouseleave:"hover",pointerover:"hover",pointerout:"hover",pointerenter:"hover",pointerleave:"hover",dragstart:"drag",dragend:"drag",drag:"drag",dragenter:"drag",dragleave:"drag",dragover:"drag",drop:"drag",keydown:"press",keyup:"press",keypress:"press",input:"press"};function UB(){return i2(({metric:n})=>{if(n.value==null)return;const e=n.entries.find(m=>m.duration===n.value&&$C[m.name]);if(!e)return;const{interactionId:t}=e,s=$C[e.name],r=en(ss+e.startTime),o=en(n.value),i=On(),a=i?An(i):void 0,l=(t!=null?Ap.get(t):void 0)||a,d=l?dt(l).description:vt().getScopeData().transactionName,h=go(e.target),p=yn({[$n]:"auto.http.browser.inp",[Ki]:`ui.interaction.${s}`,[E0]:e.duration}),f=u2({name:h,transaction:d,attributes:p,startTime:r});Ns([f,"optionalAccess",m=>m.addEvent,"call",m=>m("inp",{[rm]:"millisecond",[om]:n.value})]),Ns([f,"optionalAccess",m=>m.end,"call",m=>m(r+o)])})}u(UB,"_trackINP");function GB(n){const e=u(({entries:t})=>{const s=On(),r=s&&An(s);t.forEach(o=>{if(!pB(o)||!r)return;const i=o.interactionId;if(i!=null&&!Ap.has(i)){if(Gy.length>10){const a=Gy.shift();Ap.delete(a)}Gy.push(i),Ap.set(i,r)}})},"handleEntries");mc("event",e),mc("first-input",e)}u(GB,"registerInpInteractionListener");function HB(n,e=d2("fetch")){let t=0,s=0;function r(o){const i=o.body.length;t+=i,s++;const a={body:o.body,method:"POST",referrerPolicy:"origin",headers:n.headers,keepalive:t<=6e4&&s<15,...n.fetchOptions};if(!e)return kC("fetch"),Yp("No fetch implementation available");try{return e(n.url,a).then(c=>(t-=i,s--,{statusCode:c.status,headers:{"x-sentry-rate-limits":c.headers.get("X-Sentry-Rate-Limits"),"retry-after":c.headers.get("Retry-After")}}))}catch(c){return kC("fetch"),t-=i,s--,Yp(c)}}return u(r,"makeRequest"),jM(n,r)}u(HB,"makeFetchTransport");const jB=30,qB=50;function Xb(n,e,t,s){const r={filename:n,function:e==="<anonymous>"?qi:e,in_app:!0};return t!==void 0&&(r.lineno=t),s!==void 0&&(r.colno=s),r}u(Xb,"createFrame");const KB=/^\s*at (\S+?)(?::(\d+))(?::(\d+))\s*$/i,XB=/^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,YB=/\((\S*)(?::(\d+))(?::(\d+))\)/,QB=u(n=>{const e=KB.exec(n);if(e){const[,s,r,o]=e;return Xb(s,qi,+r,+o)}const t=XB.exec(n);if(t){if(t[2]&&t[2].indexOf("eval")===0){const i=YB.exec(t[2]);i&&(t[2]=i[1],t[3]=i[2],t[4]=i[3])}const[r,o]=p2(t[1]||qi,t[2]);return Xb(o,r,t[3]?+t[3]:void 0,t[4]?+t[4]:void 0)}},"chromeStackParserFn"),JB=[jB,QB],ZB=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,eW=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,tW=u(n=>{const e=ZB.exec(n);if(e){if(e[3]&&e[3].indexOf(" > eval")>-1){const o=eW.exec(e[3]);o&&(e[1]=e[1]||"eval",e[3]=o[1],e[4]=o[2],e[5]="")}let s=e[3],r=e[1]||qi;return[r,s]=p2(r,s),Xb(s,r,e[4]?+e[4]:void 0,e[5]?+e[5]:void 0)}},"gecko"),nW=[qB,tW],sW=[JB,nW],rW=c$(...sW),p2=u((n,e)=>{const t=n.indexOf("safari-extension")!==-1,s=n.indexOf("safari-web-extension")!==-1;return t||s?[n.indexOf("@")!==-1?n.split("@")[0]:qi,t?`safari-extension:${e}`:`safari-web-extension:${e}`]:[n,e]},"extractSafariExtensionDetails"),tp=1024,oW="Breadcrumbs",iW=u((n={})=>{const e={console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0,...n};return{name:oW,setup(t){e.console&&B3(lW(t)),e.dom&&l2(uW(t,e.dom)),e.xhr&&h2(dW(t)),e.fetch&&d$(hW(t)),e.history&&cm(pW(t)),e.sentry&&t.on("beforeSendEvent",cW(t))}}},"_breadcrumbsIntegration"),aW=iW;function cW(n){return u(function(t){tt()===n&&Ko({category:`sentry.${t.type==="transaction"?"transaction":"event"}`,event_id:t.event_id,level:t.level,message:Ro(t)},{event:t})},"addSentryBreadcrumb")}u(cW,"_getSentryBreadcrumbHandler");function uW(n,e){return u(function(s){if(tt()!==n)return;let r,o,i=typeof e=="object"?e.serializeAttribute:void 0,a=typeof e=="object"&&typeof e.maxStringLength=="number"?e.maxStringLength:void 0;a&&a>tp&&(gr&&ae.warn(`\`dom.maxStringLength\` cannot exceed ${tp}, but a value of ${a} was configured. Sentry will use ${tp} instead.`),a=tp),typeof i=="string"&&(i=[i]);try{const l=s.event,d=fW(l)?l.target:l;r=go(d,{keyAttrs:i,maxStringLength:a}),o=s$(d)}catch{r="<unknown>"}if(r.length===0)return;const c={category:`ui.${s.name}`,message:r};o&&(c.data={"ui.component_name":o}),Ko(c,{event:s.event,name:s.name,global:s.global})},"_innerDomBreadcrumb")}u(uW,"_getDomBreadcrumbHandler");function lW(n){return u(function(t){if(tt()!==n)return;const s={category:"console",data:{arguments:t.args,logger:"console"},level:b$(t.level),message:P1(t.args," ")};if(t.level==="assert")if(t.args[0]===!1)s.message=`Assertion failed: ${P1(t.args.slice(1)," ")||"console.assert"}`,s.data.arguments=t.args.slice(1);else return;Ko(s,{input:t.args,level:t.level})},"_consoleBreadcrumb")}u(lW,"_getConsoleBreadcrumbHandler");function dW(n){return u(function(t){if(tt()!==n)return;const{startTimestamp:s,endTimestamp:r}=t,o=t.xhr[Oi];if(!s||!r||!o)return;const{method:i,url:a,status_code:c,body:l}=o,d={method:i,url:a,status_code:c},h={xhr:t.xhr,input:l,startTimestamp:s,endTimestamp:r},p=t$(c);Ko({category:"xhr",data:d,type:"http",level:p},h)},"_xhrBreadcrumb")}u(dW,"_getXhrBreadcrumbHandler");function hW(n){return u(function(t){if(tt()!==n)return;const{startTimestamp:s,endTimestamp:r}=t;if(r&&!(t.fetchData.url.match(/sentry_key/)&&t.fetchData.method==="POST"))if(t.error){const o=t.fetchData,i={data:t.error,input:t.args,startTimestamp:s,endTimestamp:r};Ko({category:"fetch",data:o,level:"error",type:"http"},i)}else{const o=t.response,i={...t.fetchData,status_code:o&&o.status},a={input:t.args,response:o,startTimestamp:s,endTimestamp:r},c=t$(i.status_code);Ko({category:"fetch",data:i,type:"http",level:c},a)}},"_fetchBreadcrumb")}u(hW,"_getFetchBreadcrumbHandler");function pW(n){return u(function(t){if(tt()!==n)return;let s=t.from,r=t.to;const o=Bi(Ve.location.href);let i=s?Bi(s):void 0;const a=Bi(r);(!i||!i.path)&&(i=o),o.protocol===a.protocol&&o.host===a.host&&(r=a.relative),o.protocol===i.protocol&&o.host===i.host&&(s=i.relative),Ko({category:"navigation",data:{from:s,to:r}})},"_historyBreadcrumb")}u(pW,"_getHistoryBreadcrumbHandler");function fW(n){return!!n&&!!n.target}u(fW,"_isEvent");const mW=["EventTarget","Window","Node","ApplicationCache","AudioTrackList","BroadcastChannel","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","SharedWorker","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"],gW="BrowserApiErrors",yW=u((n={})=>{const e={XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0,...n};return{name:gW,setupOnce(){e.setTimeout&&ps(Ve,"setTimeout",NC),e.setInterval&&ps(Ve,"setInterval",NC),e.requestAnimationFrame&&ps(Ve,"requestAnimationFrame",xW),e.XMLHttpRequest&&"XMLHttpRequest"in Ve&&ps(XMLHttpRequest.prototype,"send",wW);const t=e.eventTarget;t&&(Array.isArray(t)?t:mW).forEach(SW)}}},"_browserApiErrorsIntegration"),bW=yW;function NC(n){return function(...e){const t=e[0];return e[0]=fc(t,{mechanism:{data:{function:yo(n)},handled:!1,type:"instrument"}}),n.apply(this,e)}}u(NC,"_wrapTimeFunction");function xW(n){return function(e){return n.apply(this,[fc(e,{mechanism:{data:{function:"requestAnimationFrame",handler:yo(n)},handled:!1,type:"instrument"}})])}}u(xW,"_wrapRAF");function wW(n){return function(...e){const t=this;return["onload","onerror","onprogress","onreadystatechange"].forEach(r=>{r in t&&typeof t[r]=="function"&&ps(t,r,function(o){const i={mechanism:{data:{function:r,handler:yo(o)},handled:!1,type:"instrument"}},a=C0(o);return a&&(i.mechanism.data.handler=yo(a)),fc(o,i)})}),n.apply(this,e)}}u(wW,"_wrapXHR");function SW(n){const e=Ve,t=e[n]&&e[n].prototype;!t||!t.hasOwnProperty||!t.hasOwnProperty("addEventListener")||(ps(t,"addEventListener",function(s){return function(r,o,i){try{typeof o.handleEvent=="function"&&(o.handleEvent=fc(o.handleEvent,{mechanism:{data:{function:"handleEvent",handler:yo(o),target:n},handled:!1,type:"instrument"}}))}catch{}return s.apply(this,[r,fc(o,{mechanism:{data:{function:"addEventListener",handler:yo(o),target:n},handled:!1,type:"instrument"}}),i])}}),ps(t,"removeEventListener",function(s){return function(r,o,i){const a=o;try{const c=a&&a.__sentry_wrapped__;c&&s.call(this,r,c,i)}catch{}return s.call(this,r,a,i)}}))}u(SW,"_wrapEventTarget");const CW="GlobalHandlers",vW=u((n={})=>{const e={onerror:!0,onunhandledrejection:!0,...n};return{name:CW,setupOnce(){Error.stackTraceLimit=50},setup(t){e.onerror&&(kW(t),TC("onerror")),e.onunhandledrejection&&($W(t),TC("onunhandledrejection"))}}},"_globalHandlersIntegration"),IW=vW;function kW(n){p$(e=>{const{stackParser:t,attachStacktrace:s}=f2();if(tt()!==n||X$())return;const{msg:r,url:o,line:i,column:a,error:c}=e,l=EW(F0(t,c||r,void 0,s,!1),o,i,a);l.level="error",B$(l,{originalException:c,mechanism:{handled:!1,type:"onerror"}})})}u(kW,"_installGlobalOnErrorHandler");function $W(n){f$(e=>{const{stackParser:t,attachStacktrace:s}=f2();if(tt()!==n||X$())return;const r=NW(e),o=S0(r)?TW(r):F0(t,r,void 0,s,!0);o.level="error",B$(o,{originalException:r,mechanism:{handled:!1,type:"onunhandledrejection"}})})}u($W,"_installGlobalOnUnhandledRejectionHandler");function NW(n){if(S0(n))return n;try{if("reason"in n)return n.reason;if("detail"in n&&"reason"in n.detail)return n.detail.reason}catch{}return n}u(NW,"_getUnhandledRejectionError");function TW(n){return{exception:{values:[{type:"UnhandledRejection",value:`Non-Error promise rejection captured with value: ${String(n)}`}]}}}u(TW,"_eventFromRejectionWithPrimitive");function EW(n,e,t,s){const r=n.exception=n.exception||{},o=r.values=r.values||[],i=o[0]=o[0]||{},a=i.stacktrace=i.stacktrace||{},c=a.frames=a.frames||[],l=isNaN(parseInt(s,10))?void 0:s,d=isNaN(parseInt(t,10))?void 0:t,h=co(e)&&e.length>0?e:n$();return c.length===0&&c.push({colno:l,filename:h,function:qi,in_app:!0,lineno:d}),n}u(EW,"_enhanceEventWithInitialFrame");function TC(n){gr&&ae.log(`Global Handler attached: ${n}`)}u(TC,"globalHandlerLog");function f2(){const n=tt();return n&&n.getOptions()||{stackParser:()=>[],attachStacktrace:!1}}u(f2,"getOptions");const _W=()=>({name:"HttpContext",preprocessEvent(n){if(!Ve.navigator&&!Ve.location&&!Ve.document)return;const e=n.request&&n.request.url||Ve.location&&Ve.location.href,{referrer:t}=Ve.document||{},{userAgent:s}=Ve.navigator||{},r={...n.request&&n.request.headers,...t&&{Referer:t},...s&&{"User-Agent":s}},o={...n.request,...e&&{url:e},headers:r};n.request=o}}),RW="cause",AW=5,DW="LinkedErrors",OW=u((n={})=>{const e=n.limit||AW,t=n.key||RW;return{name:DW,preprocessEvent(s,r,o){const i=o.getOptions();v3(D0,i.stackParser,i.maxValueLength,t,e,s,r)}}},"_linkedErrorsIntegration"),m2=OW;function FW(n){return[sz(),ZM(),bW(),aW(),IW(),m2(),gz(),_W()]}u(FW,"getDefaultIntegrations");function PW(n={}){const e={defaultIntegrations:FW(),release:typeof __SENTRY_RELEASE__=="string"?__SENTRY_RELEASE__:Ve.SENTRY_RELEASE&&Ve.SENTRY_RELEASE.id?Ve.SENTRY_RELEASE.id:void 0,autoSessionTracking:!0,sendClientReports:!0};return n.defaultIntegrations==null&&delete n.defaultIntegrations,{...e,...n}}u(PW,"applyDefaultOptions");function LW(){const n=typeof Ve.window<"u"&&Ve;if(!n)return!1;const e=n.chrome?"chrome":"browser",t=n[e],s=t&&t.runtime&&t.runtime.id,r=Ve.location&&Ve.location.href||"",o=["chrome-extension:","moz-extension:","ms-browser-extension:","safari-web-extension:"],i=!!s&&Ve===Ve.top&&o.some(c=>r.startsWith(`${c}//`)),a=typeof n.nw<"u";return!!s&&!i&&!a}u(LW,"shouldShowBrowserExtensionError");function MW(n={}){const e=PW(n);if(!e.skipBrowserExtensionCheck&&LW()){Fc(()=>{console.error("[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/")});return}gr&&(u$()||ae.warn("No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill."));const t={...e,stackParser:M3(e.stackParser||rW),integrations:MM(e),transport:e.transport||HB},s=UM(Mz,t);return e.autoSessionTracking&&zW(),s}u(MW,"init$1");function zW(){if(typeof Ve.document>"u"){gr&&ae.warn("Session tracking in non-browser environment with @sentry/browser is not supported.");return}uC({ignoreDuration:!0}),lC(),cm(({from:n,to:e})=>{n!==void 0&&n!==e&&(uC({ignoreDuration:!0}),lC())})}u(zW,"startSessionTracking");const Tt=ot,z0="sentryReplaySession",BW="replay_event",B0="Unable to send Replay",WW=3e5,VW=9e5,UW=5e3,GW=5500,HW=6e4,jW=5e3,qW=3,EC=15e4,np=5e3,KW=3e3,XW=300,W0=2e7,YW=4999,QW=15e3,_C=36e5;function Yb(n,e){return n??e()}u(Yb,"_nullishCoalesce$1");function Al(n){let e,t=n[0],s=1;for(;s<n.length;){const r=n[s],o=n[s+1];if(s+=2,(r==="optionalAccess"||r==="optionalCall")&&t==null)return;r==="access"||r==="optionalAccess"?(e=t,t=o(t)):(r==="call"||r==="optionalCall")&&(t=o((...i)=>t.call(e,...i)),e=void 0)}return t}u(Al,"_optionalChain$5");var mn;(function(n){n[n.Document=0]="Document",n[n.DocumentType=1]="DocumentType",n[n.Element=2]="Element",n[n.Text=3]="Text",n[n.CDATA=4]="CDATA",n[n.Comment=5]="Comment"})(mn||(mn={}));function JW(n){return n.nodeType===n.ELEMENT_NODE}u(JW,"isElement$1");function Sl(n){const e=Al([n,"optionalAccess",t=>t.host]);return Al([e,"optionalAccess",t=>t.shadowRoot])===n}u(Sl,"isShadowRoot");function Cl(n){return Object.prototype.toString.call(n)==="[object ShadowRoot]"}u(Cl,"isNativeShadowDom");function ZW(n){return n.includes(" background-clip: text;")&&!n.includes(" -webkit-background-clip: text;")&&(n=n.replace(/\sbackground-clip:\s*text;/g," -webkit-background-clip: text; background-clip: text;")),n}u(ZW,"fixBrowserCompatibilityIssuesInCSS");function eV(n){const{cssText:e}=n;if(e.split('"').length<3)return e;const t=["@import",`url(${JSON.stringify(n.href)})`];return n.layerName===""?t.push("layer"):n.layerName&&t.push(`layer(${n.layerName})`),n.supportsText&&t.push(`supports(${n.supportsText})`),n.media.length&&t.push(n.media.mediaText),t.join(" ")+";"}u(eV,"escapeImportStatement");function sf(n){try{const e=n.rules||n.cssRules;return e?ZW(Array.from(e,g2).join("")):null}catch{return null}}u(sf,"stringifyStylesheet");function g2(n){let e;if(nV(n))try{e=sf(n.styleSheet)||eV(n)}catch{}else if(sV(n)&&n.selectorText.includes(":"))return tV(n.cssText);return e||n.cssText}u(g2,"stringifyRule");function tV(n){const e=/(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;return n.replace(e,"$1\\$2")}u(tV,"fixSafariColons");function nV(n){return"styleSheet"in n}u(nV,"isCSSImportRule");function sV(n){return"selectorText"in n}u(sV,"isCSSStyleRule");class y2{static{u(this,"Mirror")}constructor(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}getId(e){if(!e)return-1;const t=Al([this,"access",s=>s.getMeta,"call",s=>s(e),"optionalAccess",s=>s.id]);return Yb(t,()=>-1)}getNode(e){return this.idNodeMap.get(e)||null}getIds(){return Array.from(this.idNodeMap.keys())}getMeta(e){return this.nodeMetaMap.get(e)||null}removeNodeFromMap(e){const t=this.getId(e);this.idNodeMap.delete(t),e.childNodes&&e.childNodes.forEach(s=>this.removeNodeFromMap(s))}has(e){return this.idNodeMap.has(e)}hasNode(e){return this.nodeMetaMap.has(e)}add(e,t){const s=t.id;this.idNodeMap.set(s,e),this.nodeMetaMap.set(e,t)}replace(e,t){const s=this.getNode(e);if(s){const r=this.nodeMetaMap.get(s);r&&this.nodeMetaMap.set(t,r)}this.idNodeMap.set(e,t)}reset(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}}function rV(){return new y2}u(rV,"createMirror");function um({maskInputOptions:n,tagName:e,type:t}){return e==="OPTION"&&(e="SELECT"),!!(n[e.toLowerCase()]||t&&n[t]||t==="password"||e==="INPUT"&&!t&&n.text)}u(um,"shouldMaskInput");function Dl({isMasked:n,element:e,value:t,maskInputFn:s}){let r=t||"";return n?(s&&(r=s(r,e)),"*".repeat(r.length)):r}u(Dl,"maskInputValue");function yc(n){return n.toLowerCase()}u(yc,"toLowerCase");function Qb(n){return n.toUpperCase()}u(Qb,"toUpperCase");const RC="__rrweb_original__";function oV(n){const e=n.getContext("2d");if(!e)return!0;const t=50;for(let s=0;s<n.width;s+=t)for(let r=0;r<n.height;r+=t){const o=e.getImageData,i=RC in o?o[RC]:o;if(new Uint32Array(i.call(e,s,r,Math.min(t,n.width-s),Math.min(t,n.height-r)).data.buffer).some(c=>c!==0))return!1}return!0}u(oV,"is2DCanvasBlank");function V0(n){const e=n.type;return n.hasAttribute("data-rr-is-password")?"password":e?yc(e):null}u(V0,"getInputType");function rf(n,e,t){return e==="INPUT"&&(t==="radio"||t==="checkbox")?n.getAttribute("value")||"":n.value}u(rf,"getInputValue");function b2(n,e){let t;try{t=new URL(n,Yb(e,()=>window.location.href))}catch{return null}const s=/\.([0-9a-z]+)(?:$)/i,r=t.pathname.match(s);return Yb(Al([r,"optionalAccess",o=>o[1]]),()=>null)}u(b2,"extractFileExtension");const AC={};function x2(n){const e=AC[n];if(e)return e;const t=window.document;let s=window[n];if(t&&typeof t.createElement=="function")try{const r=t.createElement("iframe");r.hidden=!0,t.head.appendChild(r);const o=r.contentWindow;o&&o[n]&&(s=o[n]),t.head.removeChild(r)}catch{}return AC[n]=s.bind(window)}u(x2,"getImplementation$1");function Jb(...n){return x2("setTimeout")(...n)}u(Jb,"setTimeout$2");function w2(...n){return x2("clearTimeout")(...n)}u(w2,"clearTimeout$2");let iV=1;const aV=new RegExp("[^a-z0-9-_:]"),Ol=-2;function U0(){return iV++}u(U0,"genId");function cV(n){if(n instanceof HTMLFormElement)return"form";const e=yc(n.tagName);return aV.test(e)?"div":e}u(cV,"getValidTagName");function uV(n){let e="";return n.indexOf("//")>-1?e=n.split("/").slice(0,3).join("/"):e=n.split("/")[0],e=e.split("?")[0],e}u(uV,"extractOrigin");let Fa,DC;const lV=/url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,dV=/^(?:[a-z+]+:)?\/\//i,hV=/^www\..*/i,pV=/^(data:)([^,]*),(.*)/i;function of(n,e){return(n||"").replace(lV,(t,s,r,o,i,a)=>{const c=r||i||a,l=s||o||"";if(!c)return t;if(dV.test(c)||hV.test(c))return`url(${l}${c}${l})`;if(pV.test(c))return`url(${l}${c}${l})`;if(c[0]==="/")return`url(${l}${uV(e)+c}${l})`;const d=e.split("/"),h=c.split("/");d.pop();for(const p of h)p!=="."&&(p===".."?d.pop():d.push(p));return`url(${l}${d.join("/")}${l})`})}u(of,"absoluteToStylesheet");const fV=/^[^ \t\n\r\u000c]+/,mV=/^[, \t\n\r\u000c]+/;function gV(n,e){if(e.trim()==="")return e;let t=0;function s(o){let i;const a=o.exec(e.substring(t));return a?(i=a[0],t+=i.length,i):""}u(s,"collectCharacters");const r=[];for(;s(mV),!(t>=e.length);){let o=s(fV);if(o.slice(-1)===",")o=Qa(n,o.substring(0,o.length-1)),r.push(o);else{let i="";o=Qa(n,o);let a=!1;for(;;){const c=e.charAt(t);if(c===""){r.push((o+i).trim());break}else if(a)c===")"&&(a=!1);else if(c===","){t+=1,r.push((o+i).trim());break}else c==="("&&(a=!0);i+=c,t+=1}}}return r.join(", ")}u(gV,"getAbsoluteSrcsetString");const OC=new WeakMap;function Qa(n,e){return!e||e.trim()===""?e:lm(n,e)}u(Qa,"absoluteToDoc");function yV(n){return!!(n.tagName==="svg"||n.ownerSVGElement)}u(yV,"isSVGElement");function lm(n,e){let t=OC.get(n);if(t||(t=n.createElement("a"),OC.set(n,t)),!e)e="";else if(e.startsWith("blob:")||e.startsWith("data:"))return e;return t.setAttribute("href",e),t.href}u(lm,"getHref");function S2(n,e,t,s,r,o){return s&&(t==="src"||t==="href"&&!(e==="use"&&s[0]==="#")||t==="xlink:href"&&s[0]!=="#"||t==="background"&&(e==="table"||e==="td"||e==="th")?Qa(n,s):t==="srcset"?gV(n,s):t==="style"?of(s,lm(n)):e==="object"&&t==="data"?Qa(n,s):typeof o=="function"?o(t,s,r):s)}u(S2,"transformAttribute");function C2(n,e,t){return(n==="video"||n==="audio")&&e==="autoplay"}u(C2,"ignoreAttribute");function bV(n,e,t,s){try{if(s&&n.matches(s))return!1;if(typeof e=="string"){if(n.classList.contains(e))return!0}else for(let r=n.classList.length;r--;){const o=n.classList[r];if(e.test(o))return!0}if(t)return n.matches(t)}catch{}return!1}u(bV,"_isBlockedElement");function xV(n,e){for(let t=n.classList.length;t--;){const s=n.classList[t];if(e.test(s))return!0}return!1}u(xV,"elementClassMatchesRegex");function Fi(n,e,t=1/0,s=0){return!n||n.nodeType!==n.ELEMENT_NODE||s>t?-1:e(n)?s:Fi(n.parentNode,e,t,s+1)}u(Fi,"distanceToMatch");function Ja(n,e){return t=>{const s=t;if(s===null)return!1;try{if(n){if(typeof n=="string"){if(s.matches(`.${n}`))return!0}else if(xV(s,n))return!0}return!!(e&&s.matches(e))}catch{return!1}}}u(Ja,"createMatchPredicate");function bc(n,e,t,s,r,o){try{const i=n.nodeType===n.ELEMENT_NODE?n:n.parentElement;if(i===null)return!1;if(i.tagName==="INPUT"){const l=i.getAttribute("autocomplete");if(["current-password","new-password","cc-number","cc-exp","cc-exp-month","cc-exp-year","cc-csc"].includes(l))return!0}let a=-1,c=-1;if(o){if(c=Fi(i,Ja(s,r)),c<0)return!0;a=Fi(i,Ja(e,t),c>=0?c:1/0)}else{if(a=Fi(i,Ja(e,t)),a<0)return!1;c=Fi(i,Ja(s,r),a>=0?a:1/0)}return a>=0?c>=0?a<=c:!0:c>=0?!1:!!o}catch{}return!!o}u(bc,"needMaskingText");function wV(n,e,t){const s=n.contentWindow;if(!s)return;let r=!1,o;try{o=s.document.readyState}catch{return}if(o!=="complete"){const a=Jb(()=>{r||(e(),r=!0)},t);n.addEventListener("load",()=>{w2(a),r=!0,e()});return}const i="about:blank";if(s.location.href!==i||n.src===i||n.src==="")return Jb(e,0),n.addEventListener("load",e);n.addEventListener("load",e)}u(wV,"onceIframeLoaded");function SV(n,e,t){let s=!1,r;try{r=n.sheet}catch{return}if(r)return;const o=Jb(()=>{s||(e(),s=!0)},t);n.addEventListener("load",()=>{w2(o),s=!0,e()})}u(SV,"onceStylesheetLoaded");function CV(n,e){const{doc:t,mirror:s,blockClass:r,blockSelector:o,unblockSelector:i,maskAllText:a,maskAttributeFn:c,maskTextClass:l,unmaskTextClass:d,maskTextSelector:h,unmaskTextSelector:p,inlineStylesheet:f,maskInputOptions:m={},maskTextFn:g,maskInputFn:y,dataURLOptions:b={},inlineImages:x,recordCanvas:S,keepIframeSrcFn:w,newlyAddedElement:C=!1}=e,v=vV(t,s);switch(n.nodeType){case n.DOCUMENT_NODE:return n.compatMode!=="CSS1Compat"?{type:mn.Document,childNodes:[],compatMode:n.compatMode}:{type:mn.Document,childNodes:[]};case n.DOCUMENT_TYPE_NODE:return{type:mn.DocumentType,name:n.name,publicId:n.publicId,systemId:n.systemId,rootId:v};case n.ELEMENT_NODE:return kV(n,{doc:t,blockClass:r,blockSelector:o,unblockSelector:i,inlineStylesheet:f,maskAttributeFn:c,maskInputOptions:m,maskInputFn:y,dataURLOptions:b,inlineImages:x,recordCanvas:S,keepIframeSrcFn:w,newlyAddedElement:C,rootId:v,maskAllText:a,maskTextClass:l,unmaskTextClass:d,maskTextSelector:h,unmaskTextSelector:p});case n.TEXT_NODE:return IV(n,{doc:t,maskAllText:a,maskTextClass:l,unmaskTextClass:d,maskTextSelector:h,unmaskTextSelector:p,maskTextFn:g,maskInputOptions:m,maskInputFn:y,rootId:v});case n.CDATA_SECTION_NODE:return{type:mn.CDATA,textContent:"",rootId:v};case n.COMMENT_NODE:return{type:mn.Comment,textContent:n.textContent||"",rootId:v};default:return!1}}u(CV,"serializeNode");function vV(n,e){if(!e.hasNode(n))return;const t=e.getId(n);return t===1?void 0:t}u(vV,"getRootId");function IV(n,e){const{maskAllText:t,maskTextClass:s,unmaskTextClass:r,maskTextSelector:o,unmaskTextSelector:i,maskTextFn:a,maskInputOptions:c,maskInputFn:l,rootId:d}=e,h=n.parentNode&&n.parentNode.tagName;let p=n.textContent;const f=h==="STYLE"?!0:void 0,m=h==="SCRIPT"?!0:void 0,g=h==="TEXTAREA"?!0:void 0;if(f&&p){try{n.nextSibling||n.previousSibling||Al([n,"access",b=>b.parentNode,"access",b=>b.sheet,"optionalAccess",b=>b.cssRules])&&(p=sf(n.parentNode.sheet))}catch(b){`${b}`}p=of(p,lm(e.doc))}m&&(p="SCRIPT_PLACEHOLDER");const y=bc(n,s,o,r,i,t);if(!f&&!m&&!g&&p&&y&&(p=a?a(p,n.parentElement):p.replace(/[\S]/g,"*")),g&&p&&(c.textarea||y)&&(p=l?l(p,n.parentNode):p.replace(/[\S]/g,"*")),h==="OPTION"&&p){const b=um({type:null,tagName:h,maskInputOptions:c});p=Dl({isMasked:bc(n,s,o,r,i,b),element:n,value:p,maskInputFn:l})}return{type:mn.Text,textContent:p||"",isStyle:f,rootId:d}}u(IV,"serializeTextNode");function kV(n,e){const{doc:t,blockClass:s,blockSelector:r,unblockSelector:o,inlineStylesheet:i,maskInputOptions:a={},maskAttributeFn:c,maskInputFn:l,dataURLOptions:d={},inlineImages:h,recordCanvas:p,keepIframeSrcFn:f,newlyAddedElement:m=!1,rootId:g,maskAllText:y,maskTextClass:b,unmaskTextClass:x,maskTextSelector:S,unmaskTextSelector:w}=e,C=bV(n,s,r,o),v=cV(n);let k={};const $=n.attributes.length;for(let E=0;E<$;E++){const R=n.attributes[E];R.name&&!C2(v,R.name,R.value)&&(k[R.name]=S2(t,v,yc(R.name),R.value,n,c))}if(v==="link"&&i){const E=Array.from(t.styleSheets).find(O=>O.href===n.href);let R=null;E&&(R=sf(E)),R&&(delete k.rel,delete k.href,k._cssText=of(R,E.href))}if(v==="style"&&n.sheet&&!(n.innerText||n.textContent||"").trim().length){const E=sf(n.sheet);E&&(k._cssText=of(E,lm(t)))}if(v==="input"||v==="textarea"||v==="select"||v==="option"){const E=n,R=V0(E),O=rf(E,Qb(v),R),L=E.checked;if(R!=="submit"&&R!=="button"&&O){const z=bc(E,b,S,x,w,um({type:R,tagName:Qb(v),maskInputOptions:a}));k.value=Dl({isMasked:z,element:E,value:O,maskInputFn:l})}L&&(k.checked=L)}if(v==="option"&&(n.selected&&!a.select?k.selected=!0:delete k.selected),v==="canvas"&&p){if(n.__context==="2d")oV(n)||(k.rr_dataURL=n.toDataURL(d.type,d.quality));else if(!("__context"in n)){const E=n.toDataURL(d.type,d.quality),R=t.createElement("canvas");R.width=n.width,R.height=n.height;const O=R.toDataURL(d.type,d.quality);E!==O&&(k.rr_dataURL=E)}}if(v==="img"&&h){Fa||(Fa=t.createElement("canvas"),DC=Fa.getContext("2d"));const E=n,R=E.currentSrc||E.getAttribute("src")||"<unknown-src>",O=E.crossOrigin,L=u(()=>{E.removeEventListener("load",L);try{Fa.width=E.naturalWidth,Fa.height=E.naturalHeight,DC.drawImage(E,0,0),k.rr_dataURL=Fa.toDataURL(d.type,d.quality)}catch(z){if(E.crossOrigin!=="anonymous"){E.crossOrigin="anonymous",E.complete&&E.naturalWidth!==0?L():E.addEventListener("load",L);return}else`${R}${z}`}E.crossOrigin==="anonymous"&&(O?k.crossOrigin=O:E.removeAttribute("crossorigin"))},"recordInlineImage");E.complete&&E.naturalWidth!==0?L():E.addEventListener("load",L)}if((v==="audio"||v==="video")&&(k.rr_mediaState=n.paused?"paused":"played",k.rr_mediaCurrentTime=n.currentTime),m||(n.scrollLeft&&(k.rr_scrollLeft=n.scrollLeft),n.scrollTop&&(k.rr_scrollTop=n.scrollTop)),C){const{width:E,height:R}=n.getBoundingClientRect();k={class:k.class,rr_width:`${E}px`,rr_height:`${R}px`}}v==="iframe"&&!f(k.src)&&(!C&&!n.contentDocument&&(k.rr_src=k.src),delete k.src);let T;try{customElements.get(v)&&(T=!0)}catch{}return{type:mn.Element,tagName:v,attributes:k,childNodes:[],isSVG:yV(n)||void 0,needBlock:C,rootId:g,isCustom:T}}u(kV,"serializeElementNode");function Nt(n){return n==null?"":n.toLowerCase()}u(Nt,"lowerIfExists");function $V(n,e){if(e.comment&&n.type===mn.Comment)return!0;if(n.type===mn.Element){if(e.script&&(n.tagName==="script"||n.tagName==="link"&&(n.attributes.rel==="preload"||n.attributes.rel==="modulepreload")&&n.attributes.as==="script"||n.tagName==="link"&&n.attributes.rel==="prefetch"&&typeof n.attributes.href=="string"&&b2(n.attributes.href)==="js"))return!0;if(e.headFavicon&&(n.tagName==="link"&&n.attributes.rel==="shortcut icon"||n.tagName==="meta"&&(Nt(n.attributes.name).match(/^msapplication-tile(image|color)$/)||Nt(n.attributes.name)==="application-name"||Nt(n.attributes.rel)==="icon"||Nt(n.attributes.rel)==="apple-touch-icon"||Nt(n.attributes.rel)==="shortcut icon")))return!0;if(n.tagName==="meta"){if(e.headMetaDescKeywords&&Nt(n.attributes.name).match(/^description|keywords$/))return!0;if(e.headMetaSocial&&(Nt(n.attributes.property).match(/^(og|twitter|fb):/)||Nt(n.attributes.name).match(/^(og|twitter):/)||Nt(n.attributes.name)==="pinterest"))return!0;if(e.headMetaRobots&&(Nt(n.attributes.name)==="robots"||Nt(n.attributes.name)==="googlebot"||Nt(n.attributes.name)==="bingbot"))return!0;if(e.headMetaHttpEquiv&&n.attributes["http-equiv"]!==void 0)return!0;if(e.headMetaAuthorship&&(Nt(n.attributes.name)==="author"||Nt(n.attributes.name)==="generator"||Nt(n.attributes.name)==="framework"||Nt(n.attributes.name)==="publisher"||Nt(n.attributes.name)==="progid"||Nt(n.attributes.property).match(/^article:/)||Nt(n.attributes.property).match(/^product:/)))return!0;if(e.headMetaVerification&&(Nt(n.attributes.name)==="google-site-verification"||Nt(n.attributes.name)==="yandex-verification"||Nt(n.attributes.name)==="csrf-token"||Nt(n.attributes.name)==="p:domain_verify"||Nt(n.attributes.name)==="verify-v1"||Nt(n.attributes.name)==="verification"||Nt(n.attributes.name)==="shopify-checkout-api-token"))return!0}}return!1}u($V,"slimDOMExcluded");function Za(n,e){const{doc:t,mirror:s,blockClass:r,blockSelector:o,unblockSelector:i,maskAllText:a,maskTextClass:c,unmaskTextClass:l,maskTextSelector:d,unmaskTextSelector:h,skipChild:p=!1,inlineStylesheet:f=!0,maskInputOptions:m={},maskAttributeFn:g,maskTextFn:y,maskInputFn:b,slimDOMOptions:x,dataURLOptions:S={},inlineImages:w=!1,recordCanvas:C=!1,onSerialize:v,onIframeLoad:k,iframeLoadTimeout:$=5e3,onStylesheetLoad:T,stylesheetLoadTimeout:E=5e3,keepIframeSrcFn:R=u(()=>!1,"keepIframeSrcFn"),newlyAddedElement:O=!1}=e;let{preserveWhiteSpace:L=!0}=e;const z=CV(n,{doc:t,mirror:s,blockClass:r,blockSelector:o,maskAllText:a,unblockSelector:i,maskTextClass:c,unmaskTextClass:l,maskTextSelector:d,unmaskTextSelector:h,inlineStylesheet:f,maskInputOptions:m,maskAttributeFn:g,maskTextFn:y,maskInputFn:b,dataURLOptions:S,inlineImages:w,recordCanvas:C,keepIframeSrcFn:R,newlyAddedElement:O});if(!z)return null;let W;s.hasNode(n)?W=s.getId(n):$V(z,x)||!L&&z.type===mn.Text&&!z.isStyle&&!z.textContent.replace(/^\s+|\s+$/gm,"").length?W=Ol:W=U0();const A=Object.assign(z,{id:W});if(s.add(n,A),W===Ol)return null;v&&v(n);let G=!p;if(A.type===mn.Element){G=G&&!A.needBlock,delete A.needBlock;const V=n.shadowRoot;V&&Cl(V)&&(A.isShadowHost=!0)}if((A.type===mn.Document||A.type===mn.Element)&&G){x.headWhitespace&&A.type===mn.Element&&A.tagName==="head"&&(L=!1);const V={doc:t,mirror:s,blockClass:r,blockSelector:o,maskAllText:a,unblockSelector:i,maskTextClass:c,unmaskTextClass:l,maskTextSelector:d,unmaskTextSelector:h,skipChild:p,inlineStylesheet:f,maskInputOptions:m,maskAttributeFn:g,maskTextFn:y,maskInputFn:b,slimDOMOptions:x,dataURLOptions:S,inlineImages:w,recordCanvas:C,preserveWhiteSpace:L,onSerialize:v,onIframeLoad:k,iframeLoadTimeout:$,onStylesheetLoad:T,stylesheetLoadTimeout:E,keepIframeSrcFn:R};for(const q of Array.from(n.childNodes)){const Y=Za(q,V);Y&&A.childNodes.push(Y)}if(JW(n)&&n.shadowRoot)for(const q of Array.from(n.shadowRoot.childNodes)){const Y=Za(q,V);Y&&(Cl(n.shadowRoot)&&(Y.isShadow=!0),A.childNodes.push(Y))}}return n.parentNode&&Sl(n.parentNode)&&Cl(n.parentNode)&&(A.isShadow=!0),A.type===mn.Element&&A.tagName==="iframe"&&wV(n,()=>{const V=n.contentDocument;if(V&&k){const q=Za(V,{doc:V,mirror:s,blockClass:r,blockSelector:o,unblockSelector:i,maskAllText:a,maskTextClass:c,unmaskTextClass:l,maskTextSelector:d,unmaskTextSelector:h,skipChild:!1,inlineStylesheet:f,maskInputOptions:m,maskAttributeFn:g,maskTextFn:y,maskInputFn:b,slimDOMOptions:x,dataURLOptions:S,inlineImages:w,recordCanvas:C,preserveWhiteSpace:L,onSerialize:v,onIframeLoad:k,iframeLoadTimeout:$,onStylesheetLoad:T,stylesheetLoadTimeout:E,keepIframeSrcFn:R});q&&k(n,q)}},$),A.type===mn.Element&&A.tagName==="link"&&typeof A.attributes.rel=="string"&&(A.attributes.rel==="stylesheet"||A.attributes.rel==="preload"&&typeof A.attributes.href=="string"&&b2(A.attributes.href)==="css")&&SV(n,()=>{if(T){const V=Za(n,{doc:t,mirror:s,blockClass:r,blockSelector:o,unblockSelector:i,maskAllText:a,maskTextClass:c,unmaskTextClass:l,maskTextSelector:d,unmaskTextSelector:h,skipChild:!1,inlineStylesheet:f,maskInputOptions:m,maskAttributeFn:g,maskTextFn:y,maskInputFn:b,slimDOMOptions:x,dataURLOptions:S,inlineImages:w,recordCanvas:C,preserveWhiteSpace:L,onSerialize:v,onIframeLoad:k,iframeLoadTimeout:$,onStylesheetLoad:T,stylesheetLoadTimeout:E,keepIframeSrcFn:R});V&&T(n,V)}},E),A}u(Za,"serializeNodeWithId");function NV(n,e){const{mirror:t=new y2,blockClass:s="rr-block",blockSelector:r=null,unblockSelector:o=null,maskAllText:i=!1,maskTextClass:a="rr-mask",unmaskTextClass:c=null,maskTextSelector:l=null,unmaskTextSelector:d=null,inlineStylesheet:h=!0,inlineImages:p=!1,recordCanvas:f=!1,maskAllInputs:m=!1,maskAttributeFn:g,maskTextFn:y,maskInputFn:b,slimDOM:x=!1,dataURLOptions:S,preserveWhiteSpace:w,onSerialize:C,onIframeLoad:v,iframeLoadTimeout:k,onStylesheetLoad:$,stylesheetLoadTimeout:T,keepIframeSrcFn:E=u(()=>!1,"keepIframeSrcFn")}=e||{};return Za(n,{doc:n,mirror:t,blockClass:s,blockSelector:r,unblockSelector:o,maskAllText:i,maskTextClass:a,unmaskTextClass:c,maskTextSelector:l,unmaskTextSelector:d,skipChild:!1,inlineStylesheet:h,maskInputOptions:m===!0?{color:!0,date:!0,"datetime-local":!0,email:!0,month:!0,number:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0,textarea:!0,select:!0}:m===!1?{}:m,maskAttributeFn:g,maskTextFn:y,maskInputFn:b,slimDOMOptions:x===!0||x==="all"?{script:!0,comment:!0,headFavicon:!0,headWhitespace:!0,headMetaDescKeywords:x==="all",headMetaSocial:!0,headMetaRobots:!0,headMetaHttpEquiv:!0,headMetaAuthorship:!0,headMetaVerification:!0}:x===!1?{}:x,dataURLOptions:S,inlineImages:p,recordCanvas:f,preserveWhiteSpace:w,onSerialize:C,onIframeLoad:v,iframeLoadTimeout:k,onStylesheetLoad:$,stylesheetLoadTimeout:T,keepIframeSrcFn:E,newlyAddedElement:!1})}u(NV,"snapshot");function Ao(n){let e,t=n[0],s=1;for(;s<n.length;){const r=n[s],o=n[s+1];if(s+=2,(r==="optionalAccess"||r==="optionalCall")&&t==null)return;r==="access"||r==="optionalAccess"?(e=t,t=o(t)):(r==="call"||r==="optionalCall")&&(t=o((...i)=>t.call(e,...i)),e=void 0)}return t}u(Ao,"_optionalChain$4");function Qn(n,e,t=document){const s={capture:!0,passive:!0};return t.addEventListener(n,e,s),()=>t.removeEventListener(n,e,s)}u(Qn,"on");const ja=`Please stop import mirror directly. Instead of that,\r
now you can use replayer.getMirror() to access the mirror instance of a replayer,\r
or you can use record.mirror to access the mirror instance during recording.`;let FC={map:{},getId(){return console.error(ja),-1},getNode(){return console.error(ja),null},removeNodeFromMap(){console.error(ja)},has(){return console.error(ja),!1},reset(){console.error(ja)}};typeof window<"u"&&window.Proxy&&window.Reflect&&(FC=new Proxy(FC,{get(n,e,t){return e==="map"&&console.error(ja),Reflect.get(n,e,t)}}));function Fl(n,e,t={}){let s=null,r=0;return function(...o){const i=Date.now();!r&&t.leading===!1&&(r=i);const a=e-(i-r),c=this;a<=0||a>e?(s&&(OV(s),s=null),r=i,n.apply(c,o)):!s&&t.trailing!==!1&&(s=dm(()=>{r=t.leading===!1?0:Date.now(),s=null,n.apply(c,o)},a))}}u(Fl,"throttle$1");function v2(n,e,t,s,r=window){const o=r.Object.getOwnPropertyDescriptor(n,e);return r.Object.defineProperty(n,e,s?t:{set(i){dm(()=>{t.set.call(this,i)},0),o&&o.set&&o.set.call(this,i)}}),()=>v2(n,e,o||{},!0)}u(v2,"hookSetter");function G0(n,e,t){try{if(!(e in n))return()=>{};const s=n[e],r=t(s);return typeof r=="function"&&(r.prototype=r.prototype||{},Object.defineProperties(r,{__rrweb_original__:{enumerable:!1,value:s}})),n[e]=r,()=>{n[e]=s}}catch{return()=>{}}}u(G0,"patch");let af=Date.now;/[1-9][0-9]{12}/.test(Date.now().toString())||(af=u(()=>new Date().getTime(),"nowTimestamp"));function I2(n){const e=n.document;return{left:e.scrollingElement?e.scrollingElement.scrollLeft:n.pageXOffset!==void 0?n.pageXOffset:Ao([e,"optionalAccess",t=>t.documentElement,"access",t=>t.scrollLeft])||Ao([e,"optionalAccess",t=>t.body,"optionalAccess",t=>t.parentElement,"optionalAccess",t=>t.scrollLeft])||Ao([e,"optionalAccess",t=>t.body,"optionalAccess",t=>t.scrollLeft])||0,top:e.scrollingElement?e.scrollingElement.scrollTop:n.pageYOffset!==void 0?n.pageYOffset:Ao([e,"optionalAccess",t=>t.documentElement,"access",t=>t.scrollTop])||Ao([e,"optionalAccess",t=>t.body,"optionalAccess",t=>t.parentElement,"optionalAccess",t=>t.scrollTop])||Ao([e,"optionalAccess",t=>t.body,"optionalAccess",t=>t.scrollTop])||0}}u(I2,"getWindowScroll");function k2(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight}u(k2,"getWindowHeight");function $2(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth}u($2,"getWindowWidth");function N2(n){return n?n.nodeType===n.ELEMENT_NODE?n:n.parentElement:null}u(N2,"closestElementOfNode");function $s(n,e,t,s,r){if(!n)return!1;const o=N2(n);if(!o)return!1;const i=Ja(e,t);if(!r){const l=s&&o.matches(s);return i(o)&&!l}const a=Fi(o,i);let c=-1;return a<0?!1:(s&&(c=Fi(o,Ja(null,s))),a>-1&&c<0?!0:a<c)}u($s,"isBlocked");function TV(n,e){return e.getId(n)!==-1}u(TV,"isSerialized");function Hy(n,e){return e.getId(n)===Ol}u(Hy,"isIgnored");function T2(n,e){if(Sl(n))return!1;const t=e.getId(n);return e.has(t)?n.parentNode&&n.parentNode.nodeType===n.DOCUMENT_NODE?!1:n.parentNode?T2(n.parentNode,e):!0:!0}u(T2,"isAncestorRemoved");function Zb(n){return!!n.changedTouches}u(Zb,"legacy_isTouchEvent");function EV(n=window){"NodeList"in n&&!n.NodeList.prototype.forEach&&(n.NodeList.prototype.forEach=Array.prototype.forEach),"DOMTokenList"in n&&!n.DOMTokenList.prototype.forEach&&(n.DOMTokenList.prototype.forEach=Array.prototype.forEach),Node.prototype.contains||(Node.prototype.contains=(...e)=>{let t=e[0];if(!(0 in e))throw new TypeError("1 argument is required");do if(this===t)return!0;while(t=t&&t.parentNode);return!1})}u(EV,"polyfill");function E2(n,e){return!!(n.nodeName==="IFRAME"&&e.getMeta(n))}u(E2,"isSerializedIframe");function _2(n,e){return!!(n.nodeName==="LINK"&&n.nodeType===n.ELEMENT_NODE&&n.getAttribute&&n.getAttribute("rel")==="stylesheet"&&e.getMeta(n))}u(_2,"isSerializedStylesheet");function ex(n){return!!Ao([n,"optionalAccess",e=>e.shadowRoot])}u(ex,"hasShadowRoot");class _V{static{u(this,"StyleSheetMirror")}constructor(){this.id=1,this.styleIDMap=new WeakMap,this.idStyleMap=new Map}getId(e){return IL(this.styleIDMap.get(e),()=>-1)}has(e){return this.styleIDMap.has(e)}add(e,t){if(this.has(e))return this.getId(e);let s;return t===void 0?s=this.id++:s=t,this.styleIDMap.set(e,s),this.idStyleMap.set(s,e),s}getStyle(e){return this.idStyleMap.get(e)||null}reset(){this.styleIDMap=new WeakMap,this.idStyleMap=new Map,this.id=1}generateId(){return this.id++}}function R2(n){let e=null;return Ao([n,"access",t=>t.getRootNode,"optionalCall",t=>t(),"optionalAccess",t=>t.nodeType])===Node.DOCUMENT_FRAGMENT_NODE&&n.getRootNode().host&&(e=n.getRootNode().host),e}u(R2,"getShadowHost");function RV(n){let e=n,t;for(;t=R2(e);)e=t;return e}u(RV,"getRootShadowHost");function AV(n){const e=n.ownerDocument;if(!e)return!1;const t=RV(n);return e.contains(t)}u(AV,"shadowHostInDom");function A2(n){const e=n.ownerDocument;return e?e.contains(n)||AV(n):!1}u(A2,"inDom");const PC={};function H0(n){const e=PC[n];if(e)return e;const t=window.document;let s=window[n];if(t&&typeof t.createElement=="function")try{const r=t.createElement("iframe");r.hidden=!0,t.head.appendChild(r);const o=r.contentWindow;o&&o[n]&&(s=o[n]),t.head.removeChild(r)}catch{}return PC[n]=s.bind(window)}u(H0,"getImplementation");function DV(...n){return H0("requestAnimationFrame")(...n)}u(DV,"onRequestAnimationFrame");function dm(...n){return H0("setTimeout")(...n)}u(dm,"setTimeout$1");function OV(...n){return H0("clearTimeout")(...n)}u(OV,"clearTimeout$1");var Ye=(n=>(n[n.DomContentLoaded=0]="DomContentLoaded",n[n.Load=1]="Load",n[n.FullSnapshot=2]="FullSnapshot",n[n.IncrementalSnapshot=3]="IncrementalSnapshot",n[n.Meta=4]="Meta",n[n.Custom=5]="Custom",n[n.Plugin=6]="Plugin",n))(Ye||{}),ze=(n=>(n[n.Mutation=0]="Mutation",n[n.MouseMove=1]="MouseMove",n[n.MouseInteraction=2]="MouseInteraction",n[n.Scroll=3]="Scroll",n[n.ViewportResize=4]="ViewportResize",n[n.Input=5]="Input",n[n.TouchMove=6]="TouchMove",n[n.MediaInteraction=7]="MediaInteraction",n[n.StyleSheetRule=8]="StyleSheetRule",n[n.CanvasMutation=9]="CanvasMutation",n[n.Font=10]="Font",n[n.Log=11]="Log",n[n.Drag=12]="Drag",n[n.StyleDeclaration=13]="StyleDeclaration",n[n.Selection=14]="Selection",n[n.AdoptedStyleSheet=15]="AdoptedStyleSheet",n[n.CustomElement=16]="CustomElement",n))(ze||{}),qn=(n=>(n[n.MouseUp=0]="MouseUp",n[n.MouseDown=1]="MouseDown",n[n.Click=2]="Click",n[n.ContextMenu=3]="ContextMenu",n[n.DblClick=4]="DblClick",n[n.Focus=5]="Focus",n[n.Blur=6]="Blur",n[n.TouchStart=7]="TouchStart",n[n.TouchMove_Departed=8]="TouchMove_Departed",n[n.TouchEnd=9]="TouchEnd",n[n.TouchCancel=10]="TouchCancel",n))(qn||{}),Zr=(n=>(n[n.Mouse=0]="Mouse",n[n.Pen=1]="Pen",n[n.Touch=2]="Touch",n))(Zr||{});function FV(n){let e,t=n[0],s=1;for(;s<n.length;){const r=n[s],o=n[s+1];if(s+=2,(r==="optionalAccess"||r==="optionalCall")&&t==null)return;r==="access"||r==="optionalAccess"?(e=t,t=o(t)):(r==="call"||r==="optionalCall")&&(t=o((...i)=>t.call(e,...i)),e=void 0)}return t}u(FV,"_optionalChain$3");function LC(n){return"__ln"in n}u(LC,"isNodeInLinkedList");class PV{static{u(this,"DoubleLinkedList")}constructor(){this.length=0,this.head=null,this.tail=null}get(e){if(e>=this.length)throw new Error("Position outside of list range");let t=this.head;for(let s=0;s<e;s++)t=FV([t,"optionalAccess",r=>r.next])||null;return t}addNode(e){const t={value:e,previous:null,next:null};if(e.__ln=t,e.previousSibling&&LC(e.previousSibling)){const s=e.previousSibling.__ln.next;t.next=s,t.previous=e.previousSibling.__ln,e.previousSibling.__ln.next=t,s&&(s.previous=t)}else if(e.nextSibling&&LC(e.nextSibling)&&e.nextSibling.__ln.previous){const s=e.nextSibling.__ln.previous;t.previous=s,t.next=e.nextSibling.__ln,e.nextSibling.__ln.previous=t,s&&(s.next=t)}else this.head&&(this.head.previous=t),t.next=this.head,this.head=t;t.next===null&&(this.tail=t),this.length++}removeNode(e){const t=e.__ln;this.head&&(t.previous?(t.previous.next=t.next,t.next?t.next.previous=t.previous:this.tail=t.previous):(this.head=t.next,this.head?this.head.previous=null:this.tail=null),e.__ln&&delete e.__ln,this.length--)}}const MC=u((n,e)=>`${n}@${e}`,"moveKey");class LV{static{u(this,"MutationBuffer")}constructor(){this.frozen=!1,this.locked=!1,this.texts=[],this.attributes=[],this.attributeMap=new WeakMap,this.removes=[],this.mapRemoves=[],this.movedMap={},this.addedSet=new Set,this.movedSet=new Set,this.droppedSet=new Set,this.processMutations=e=>{e.forEach(this.processMutation),this.emit()},this.emit=()=>{if(this.frozen||this.locked)return;const e=[],t=new Set,s=new PV,r=u(c=>{let l=c,d=Ol;for(;d===Ol;)l=l&&l.nextSibling,d=l&&this.mirror.getId(l);return d},"getNextId"),o=u(c=>{if(!c.parentNode||!A2(c))return;const l=Sl(c.parentNode)?this.mirror.getId(R2(c)):this.mirror.getId(c.parentNode),d=r(c);if(l===-1||d===-1)return s.addNode(c);const h=Za(c,{doc:this.doc,mirror:this.mirror,blockClass:this.blockClass,blockSelector:this.blockSelector,maskAllText:this.maskAllText,unblockSelector:this.unblockSelector,maskTextClass:this.maskTextClass,unmaskTextClass:this.unmaskTextClass,maskTextSelector:this.maskTextSelector,unmaskTextSelector:this.unmaskTextSelector,skipChild:!0,newlyAddedElement:!0,inlineStylesheet:this.inlineStylesheet,maskInputOptions:this.maskInputOptions,maskAttributeFn:this.maskAttributeFn,maskTextFn:this.maskTextFn,maskInputFn:this.maskInputFn,slimDOMOptions:this.slimDOMOptions,dataURLOptions:this.dataURLOptions,recordCanvas:this.recordCanvas,inlineImages:this.inlineImages,onSerialize:p=>{E2(p,this.mirror)&&!$s(p,this.blockClass,this.blockSelector,this.unblockSelector,!1)&&this.iframeManager.addIframe(p),_2(p,this.mirror)&&this.stylesheetManager.trackLinkElement(p),ex(c)&&this.shadowDomManager.addShadowRoot(c.shadowRoot,this.doc)},onIframeLoad:(p,f)=>{$s(p,this.blockClass,this.blockSelector,this.unblockSelector,!1)||(this.iframeManager.attachIframe(p,f),p.contentWindow&&this.canvasManager.addWindow(p.contentWindow),this.shadowDomManager.observeAttachShadow(p))},onStylesheetLoad:(p,f)=>{this.stylesheetManager.attachLinkElement(p,f)}});h&&(e.push({parentId:l,nextId:d,node:h}),t.add(h.id))},"pushAdd");for(;this.mapRemoves.length;)this.mirror.removeNodeFromMap(this.mapRemoves.shift());for(const c of this.movedSet)zC(this.removes,c,this.mirror)&&!this.movedSet.has(c.parentNode)||o(c);for(const c of this.addedSet)!BC(this.droppedSet,c)&&!zC(this.removes,c,this.mirror)||BC(this.movedSet,c)?o(c):this.droppedSet.add(c);let i=null;for(;s.length;){let c=null;if(i){const l=this.mirror.getId(i.value.parentNode),d=r(i.value);l!==-1&&d!==-1&&(c=i)}if(!c){let l=s.tail;for(;l;){const d=l;if(l=l.previous,d){const h=this.mirror.getId(d.value.parentNode);if(r(d.value)===-1)continue;if(h!==-1){c=d;break}else{const f=d.value;if(f.parentNode&&f.parentNode.nodeType===Node.DOCUMENT_FRAGMENT_NODE){const m=f.parentNode.host;if(this.mirror.getId(m)!==-1){c=d;break}}}}}}if(!c){for(;s.head;)s.removeNode(s.head.value);break}i=c.previous,s.removeNode(c.value),o(c.value)}const a={texts:this.texts.map(c=>({id:this.mirror.getId(c.node),value:c.value})).filter(c=>!t.has(c.id)).filter(c=>this.mirror.has(c.id)),attributes:this.attributes.map(c=>{const{attributes:l}=c;if(typeof l.style=="string"){const d=JSON.stringify(c.styleDiff),h=JSON.stringify(c._unchangedStyles);d.length<l.style.length&&(d+h).split("var(").length===l.style.split("var(").length&&(l.style=c.styleDiff)}return{id:this.mirror.getId(c.node),attributes:l}}).filter(c=>!t.has(c.id)).filter(c=>this.mirror.has(c.id)),removes:this.removes,adds:e};!a.texts.length&&!a.attributes.length&&!a.removes.length&&!a.adds.length||(this.texts=[],this.attributes=[],this.attributeMap=new WeakMap,this.removes=[],this.addedSet=new Set,this.movedSet=new Set,this.droppedSet=new Set,this.movedMap={},this.mutationCb(a))},this.processMutation=e=>{if(!Hy(e.target,this.mirror))switch(e.type){case"characterData":{const t=e.target.textContent;!$s(e.target,this.blockClass,this.blockSelector,this.unblockSelector,!1)&&t!==e.oldValue&&this.texts.push({value:bc(e.target,this.maskTextClass,this.maskTextSelector,this.unmaskTextClass,this.unmaskTextSelector,this.maskAllText)&&t?this.maskTextFn?this.maskTextFn(t,N2(e.target)):t.replace(/[\S]/g,"*"):t,node:e.target});break}case"attributes":{const t=e.target;let s=e.attributeName,r=e.target.getAttribute(s);if(s==="value"){const i=V0(t),a=t.tagName;r=rf(t,a,i);const c=um({maskInputOptions:this.maskInputOptions,tagName:a,type:i}),l=bc(e.target,this.maskTextClass,this.maskTextSelector,this.unmaskTextClass,this.unmaskTextSelector,c);r=Dl({isMasked:l,element:t,value:r,maskInputFn:this.maskInputFn})}if($s(e.target,this.blockClass,this.blockSelector,this.unblockSelector,!1)||r===e.oldValue)return;let o=this.attributeMap.get(e.target);if(t.tagName==="IFRAME"&&s==="src"&&!this.keepIframeSrcFn(r))if(!t.contentDocument)s="rr_src";else return;if(o||(o={node:e.target,attributes:{},styleDiff:{},_unchangedStyles:{}},this.attributes.push(o),this.attributeMap.set(e.target,o)),s==="type"&&t.tagName==="INPUT"&&(e.oldValue||"").toLowerCase()==="password"&&t.setAttribute("data-rr-is-password","true"),!C2(t.tagName,s)&&(o.attributes[s]=S2(this.doc,yc(t.tagName),yc(s),r,t,this.maskAttributeFn),s==="style")){if(!this.unattachedDoc)try{this.unattachedDoc=document.implementation.createHTMLDocument()}catch{this.unattachedDoc=this.doc}const i=this.unattachedDoc.createElement("span");e.oldValue&&i.setAttribute("style",e.oldValue);for(const a of Array.from(t.style)){const c=t.style.getPropertyValue(a),l=t.style.getPropertyPriority(a);c!==i.style.getPropertyValue(a)||l!==i.style.getPropertyPriority(a)?l===""?o.styleDiff[a]=c:o.styleDiff[a]=[c,l]:o._unchangedStyles[a]=[c,l]}for(const a of Array.from(i.style))t.style.getPropertyValue(a)===""&&(o.styleDiff[a]=!1)}break}case"childList":{if($s(e.target,this.blockClass,this.blockSelector,this.unblockSelector,!0))return;e.addedNodes.forEach(t=>this.genAdds(t,e.target)),e.removedNodes.forEach(t=>{const s=this.mirror.getId(t),r=Sl(e.target)?this.mirror.getId(e.target.host):this.mirror.getId(e.target);$s(e.target,this.blockClass,this.blockSelector,this.unblockSelector,!1)||Hy(t,this.mirror)||!TV(t,this.mirror)||(this.addedSet.has(t)?(tx(this.addedSet,t),this.droppedSet.add(t)):this.addedSet.has(e.target)&&s===-1||T2(e.target,this.mirror)||(this.movedSet.has(t)&&this.movedMap[MC(s,r)]?tx(this.movedSet,t):this.removes.push({parentId:r,id:s,isShadow:Sl(e.target)&&Cl(e.target)?!0:void 0})),this.mapRemoves.push(t))});break}}},this.genAdds=(e,t)=>{if(!this.processedNodeManager.inOtherBuffer(e,this)&&!(this.addedSet.has(e)||this.movedSet.has(e))){if(this.mirror.hasNode(e)){if(Hy(e,this.mirror))return;this.movedSet.add(e);let s=null;t&&this.mirror.hasNode(t)&&(s=this.mirror.getId(t)),s&&s!==-1&&(this.movedMap[MC(this.mirror.getId(e),s)]=!0)}else this.addedSet.add(e),this.droppedSet.delete(e);$s(e,this.blockClass,this.blockSelector,this.unblockSelector,!1)||(e.childNodes.forEach(s=>this.genAdds(s)),ex(e)&&e.shadowRoot.childNodes.forEach(s=>{this.processedNodeManager.add(s,this),this.genAdds(s,e)}))}}}init(e){["mutationCb","blockClass","blockSelector","unblockSelector","maskAllText","maskTextClass","unmaskTextClass","maskTextSelector","unmaskTextSelector","inlineStylesheet","maskInputOptions","maskAttributeFn","maskTextFn","maskInputFn","keepIframeSrcFn","recordCanvas","inlineImages","slimDOMOptions","dataURLOptions","doc","mirror","iframeManager","stylesheetManager","shadowDomManager","canvasManager","processedNodeManager"].forEach(t=>{this[t]=e[t]})}freeze(){this.frozen=!0,this.canvasManager.freeze()}unfreeze(){this.frozen=!1,this.canvasManager.unfreeze(),this.emit()}isFrozen(){return this.frozen}lock(){this.locked=!0,this.canvasManager.lock()}unlock(){this.locked=!1,this.canvasManager.unlock(),this.emit()}reset(){this.shadowDomManager.reset(),this.canvasManager.reset()}}function tx(n,e){n.delete(e),e.childNodes.forEach(t=>tx(n,t))}u(tx,"deepDelete");function zC(n,e,t){return n.length===0?!1:MV(n,e,t)}u(zC,"isParentRemoved");function MV(n,e,t){let s=e.parentNode;for(;s;){const r=t.getId(s);if(n.some(o=>o.id===r))return!0;s=s.parentNode}return!1}u(MV,"_isParentRemoved");function BC(n,e){return n.size===0?!1:D2(n,e)}u(BC,"isAncestorInSet");function D2(n,e){const{parentNode:t}=e;return t?n.has(t)?!0:D2(n,t):!1}u(D2,"_isAncestorInSet");let vl;function zV(n){vl=n}u(zV,"registerErrorHandler");function BV(){vl=void 0}u(BV,"unregisterErrorHandler");const lt=u(n=>vl?u((...t)=>{try{return n(...t)}catch(s){if(vl&&vl(s)===!0)return()=>{};throw s}},"rrwebWrapped"):n,"callbackWrapper");function hr(n){let e,t=n[0],s=1;for(;s<n.length;){const r=n[s],o=n[s+1];if(s+=2,(r==="optionalAccess"||r==="optionalCall")&&t==null)return;r==="access"||r==="optionalAccess"?(e=t,t=o(t)):(r==="call"||r==="optionalCall")&&(t=o((...i)=>t.call(e,...i)),e=void 0)}return t}u(hr,"_optionalChain$2");const ec=[];function fd(n){try{if("composedPath"in n){const e=n.composedPath();if(e.length)return e[0]}else if("path"in n&&n.path.length)return n.path[0]}catch{}return n&&n.target}u(fd,"getEventTarget");function O2(n,e){const t=new LV;ec.push(t),t.init(n);let s=window.MutationObserver||window.__rrMutationObserver;const r=hr([window,"optionalAccess",i=>i.Zone,"optionalAccess",i=>i.__symbol__,"optionalCall",i=>i("MutationObserver")]);r&&window[r]&&(s=window[r]);const o=new s(lt(i=>{n.onMutation&&n.onMutation(i)===!1||t.processMutations.bind(t)(i)}));return o.observe(e,{attributes:!0,attributeOldValue:!0,characterData:!0,characterDataOldValue:!0,childList:!0,subtree:!0}),o}u(O2,"initMutationObserver");function WV({mousemoveCb:n,sampling:e,doc:t,mirror:s}){if(e.mousemove===!1)return()=>{};const r=typeof e.mousemove=="number"?e.mousemove:50,o=typeof e.mousemoveCallback=="number"?e.mousemoveCallback:500;let i=[],a;const c=Fl(lt(h=>{const p=Date.now()-a;n(i.map(f=>(f.timeOffset-=p,f)),h),i=[],a=null}),o),l=lt(Fl(lt(h=>{const p=fd(h),{clientX:f,clientY:m}=Zb(h)?h.changedTouches[0]:h;a||(a=af()),i.push({x:f,y:m,id:s.getId(p),timeOffset:af()-a}),c(typeof DragEvent<"u"&&h instanceof DragEvent?ze.Drag:h instanceof MouseEvent?ze.MouseMove:ze.TouchMove)}),r,{trailing:!1})),d=[Qn("mousemove",l,t),Qn("touchmove",l,t),Qn("drag",l,t)];return lt(()=>{d.forEach(h=>h())})}u(WV,"initMoveObserver");function VV({mouseInteractionCb:n,doc:e,mirror:t,blockClass:s,blockSelector:r,unblockSelector:o,sampling:i}){if(i.mouseInteraction===!1)return()=>{};const a=i.mouseInteraction===!0||i.mouseInteraction===void 0?{}:i.mouseInteraction,c=[];let l=null;const d=u(h=>p=>{const f=fd(p);if($s(f,s,r,o,!0))return;let m=null,g=h;if("pointerType"in p){switch(p.pointerType){case"mouse":m=Zr.Mouse;break;case"touch":m=Zr.Touch;break;case"pen":m=Zr.Pen;break}m===Zr.Touch?qn[h]===qn.MouseDown?g="TouchStart":qn[h]===qn.MouseUp&&(g="TouchEnd"):Zr.Pen}else Zb(p)&&(m=Zr.Touch);m!==null?(l=m,(g.startsWith("Touch")&&m===Zr.Touch||g.startsWith("Mouse")&&m===Zr.Mouse)&&(m=null)):qn[h]===qn.Click&&(m=l,l=null);const y=Zb(p)?p.changedTouches[0]:p;if(!y)return;const b=t.getId(f),{clientX:x,clientY:S}=y;lt(n)({type:qn[g],id:b,x,y:S,...m!==null&&{pointerType:m}})},"getHandler");return Object.keys(qn).filter(h=>Number.isNaN(Number(h))&&!h.endsWith("_Departed")&&a[h]!==!1).forEach(h=>{let p=yc(h);const f=d(h);if(window.PointerEvent)switch(qn[h]){case qn.MouseDown:case qn.MouseUp:p=p.replace("mouse","pointer");break;case qn.TouchStart:case qn.TouchEnd:return}c.push(Qn(p,f,e))}),lt(()=>{c.forEach(h=>h())})}u(VV,"initMouseInteractionObserver");function F2({scrollCb:n,doc:e,mirror:t,blockClass:s,blockSelector:r,unblockSelector:o,sampling:i}){const a=lt(Fl(lt(c=>{const l=fd(c);if(!l||$s(l,s,r,o,!0))return;const d=t.getId(l);if(l===e&&e.defaultView){const h=I2(e.defaultView);n({id:d,x:h.left,y:h.top})}else n({id:d,x:l.scrollLeft,y:l.scrollTop})}),i.scroll||100));return Qn("scroll",a,e)}u(F2,"initScrollObserver");function UV({viewportResizeCb:n},{win:e}){let t=-1,s=-1;const r=lt(Fl(lt(()=>{const o=k2(),i=$2();(t!==o||s!==i)&&(n({width:Number(i),height:Number(o)}),t=o,s=i)}),200));return Qn("resize",r,e)}u(UV,"initViewportResizeObserver");const GV=["INPUT","TEXTAREA","SELECT"],WC=new WeakMap;function HV({inputCb:n,doc:e,mirror:t,blockClass:s,blockSelector:r,unblockSelector:o,ignoreClass:i,ignoreSelector:a,maskInputOptions:c,maskInputFn:l,sampling:d,userTriggeredOnInput:h,maskTextClass:p,unmaskTextClass:f,maskTextSelector:m,unmaskTextSelector:g}){function y(k){let $=fd(k);const T=k.isTrusted,E=$&&Qb($.tagName);if(E==="OPTION"&&($=$.parentElement),!$||!E||GV.indexOf(E)<0||$s($,s,r,o,!0))return;const R=$;if(R.classList.contains(i)||a&&R.matches(a))return;const O=V0($);let L=rf(R,E,O),z=!1;const W=um({maskInputOptions:c,tagName:E,type:O}),A=bc($,p,m,f,g,W);(O==="radio"||O==="checkbox")&&(z=$.checked),L=Dl({isMasked:A,element:$,value:L,maskInputFn:l}),b($,h?{text:L,isChecked:z,userTriggered:T}:{text:L,isChecked:z});const G=$.name;O==="radio"&&G&&z&&e.querySelectorAll(`input[type="radio"][name="${G}"]`).forEach(V=>{if(V!==$){const q=Dl({isMasked:A,element:V,value:rf(V,E,O),maskInputFn:l});b(V,h?{text:q,isChecked:!z,userTriggered:!1}:{text:q,isChecked:!z})}})}u(y,"eventHandler");function b(k,$){const T=WC.get(k);if(!T||T.text!==$.text||T.isChecked!==$.isChecked){WC.set(k,$);const E=t.getId(k);lt(n)({...$,id:E})}}u(b,"cbWithDedup");const S=(d.input==="last"?["change"]:["input","change"]).map(k=>Qn(k,lt(y),e)),w=e.defaultView;if(!w)return()=>{S.forEach(k=>k())};const C=w.Object.getOwnPropertyDescriptor(w.HTMLInputElement.prototype,"value"),v=[[w.HTMLInputElement.prototype,"value"],[w.HTMLInputElement.prototype,"checked"],[w.HTMLSelectElement.prototype,"value"],[w.HTMLTextAreaElement.prototype,"value"],[w.HTMLSelectElement.prototype,"selectedIndex"],[w.HTMLOptionElement.prototype,"selected"]];return C&&C.set&&S.push(...v.map(k=>v2(k[0],k[1],{set(){lt(y)({target:this,isTrusted:!1})}},!1,w))),lt(()=>{S.forEach(k=>k())})}u(HV,"initInputObserver");function cf(n){const e=[];function t(s,r){if(sp("CSSGroupingRule")&&s.parentRule instanceof CSSGroupingRule||sp("CSSMediaRule")&&s.parentRule instanceof CSSMediaRule||sp("CSSSupportsRule")&&s.parentRule instanceof CSSSupportsRule||sp("CSSConditionRule")&&s.parentRule instanceof CSSConditionRule){const i=Array.from(s.parentRule.cssRules).indexOf(s);r.unshift(i)}else if(s.parentStyleSheet){const i=Array.from(s.parentStyleSheet.cssRules).indexOf(s);r.unshift(i)}return r}return u(t,"recurse"),t(n,e)}u(cf,"getNestedCSSRulePositions");function Do(n,e,t){let s,r;return n?(n.ownerNode?s=e.getId(n.ownerNode):r=t.getId(n),{styleId:r,id:s}):{}}u(Do,"getIdAndStyleId");function jV({styleSheetRuleCb:n,mirror:e,stylesheetManager:t},{win:s}){if(!s.CSSStyleSheet||!s.CSSStyleSheet.prototype)return()=>{};const r=s.CSSStyleSheet.prototype.insertRule;s.CSSStyleSheet.prototype.insertRule=new Proxy(r,{apply:lt((d,h,p)=>{const[f,m]=p,{id:g,styleId:y}=Do(h,e,t.styleMirror);return(g&&g!==-1||y&&y!==-1)&&n({id:g,styleId:y,adds:[{rule:f,index:m}]}),d.apply(h,p)})});const o=s.CSSStyleSheet.prototype.deleteRule;s.CSSStyleSheet.prototype.deleteRule=new Proxy(o,{apply:lt((d,h,p)=>{const[f]=p,{id:m,styleId:g}=Do(h,e,t.styleMirror);return(m&&m!==-1||g&&g!==-1)&&n({id:m,styleId:g,removes:[{index:f}]}),d.apply(h,p)})});let i;s.CSSStyleSheet.prototype.replace&&(i=s.CSSStyleSheet.prototype.replace,s.CSSStyleSheet.prototype.replace=new Proxy(i,{apply:lt((d,h,p)=>{const[f]=p,{id:m,styleId:g}=Do(h,e,t.styleMirror);return(m&&m!==-1||g&&g!==-1)&&n({id:m,styleId:g,replace:f}),d.apply(h,p)})}));let a;s.CSSStyleSheet.prototype.replaceSync&&(a=s.CSSStyleSheet.prototype.replaceSync,s.CSSStyleSheet.prototype.replaceSync=new Proxy(a,{apply:lt((d,h,p)=>{const[f]=p,{id:m,styleId:g}=Do(h,e,t.styleMirror);return(m&&m!==-1||g&&g!==-1)&&n({id:m,styleId:g,replaceSync:f}),d.apply(h,p)})}));const c={};rp("CSSGroupingRule")?c.CSSGroupingRule=s.CSSGroupingRule:(rp("CSSMediaRule")&&(c.CSSMediaRule=s.CSSMediaRule),rp("CSSConditionRule")&&(c.CSSConditionRule=s.CSSConditionRule),rp("CSSSupportsRule")&&(c.CSSSupportsRule=s.CSSSupportsRule));const l={};return Object.entries(c).forEach(([d,h])=>{l[d]={insertRule:h.prototype.insertRule,deleteRule:h.prototype.deleteRule},h.prototype.insertRule=new Proxy(l[d].insertRule,{apply:lt((p,f,m)=>{const[g,y]=m,{id:b,styleId:x}=Do(f.parentStyleSheet,e,t.styleMirror);return(b&&b!==-1||x&&x!==-1)&&n({id:b,styleId:x,adds:[{rule:g,index:[...cf(f),y||0]}]}),p.apply(f,m)})}),h.prototype.deleteRule=new Proxy(l[d].deleteRule,{apply:lt((p,f,m)=>{const[g]=m,{id:y,styleId:b}=Do(f.parentStyleSheet,e,t.styleMirror);return(y&&y!==-1||b&&b!==-1)&&n({id:y,styleId:b,removes:[{index:[...cf(f),g]}]}),p.apply(f,m)})})}),lt(()=>{s.CSSStyleSheet.prototype.insertRule=r,s.CSSStyleSheet.prototype.deleteRule=o,i&&(s.CSSStyleSheet.prototype.replace=i),a&&(s.CSSStyleSheet.prototype.replaceSync=a),Object.entries(c).forEach(([d,h])=>{h.prototype.insertRule=l[d].insertRule,h.prototype.deleteRule=l[d].deleteRule})})}u(jV,"initStyleSheetObserver");function P2({mirror:n,stylesheetManager:e},t){let s=null;t.nodeName==="#document"?s=n.getId(t):s=n.getId(t.host);const r=t.nodeName==="#document"?hr([t,"access",i=>i.defaultView,"optionalAccess",i=>i.Document]):hr([t,"access",i=>i.ownerDocument,"optionalAccess",i=>i.defaultView,"optionalAccess",i=>i.ShadowRoot]),o=hr([r,"optionalAccess",i=>i.prototype])?Object.getOwnPropertyDescriptor(hr([r,"optionalAccess",i=>i.prototype]),"adoptedStyleSheets"):void 0;return s===null||s===-1||!r||!o?()=>{}:(Object.defineProperty(t,"adoptedStyleSheets",{configurable:o.configurable,enumerable:o.enumerable,get(){return hr([o,"access",i=>i.get,"optionalAccess",i=>i.call,"call",i=>i(this)])},set(i){const a=hr([o,"access",c=>c.set,"optionalAccess",c=>c.call,"call",c=>c(this,i)]);if(s!==null&&s!==-1)try{e.adoptStyleSheets(i,s)}catch{}return a}}),lt(()=>{Object.defineProperty(t,"adoptedStyleSheets",{configurable:o.configurable,enumerable:o.enumerable,get:o.get,set:o.set})}))}u(P2,"initAdoptedStyleSheetObserver");function qV({styleDeclarationCb:n,mirror:e,ignoreCSSAttributes:t,stylesheetManager:s},{win:r}){const o=r.CSSStyleDeclaration.prototype.setProperty;r.CSSStyleDeclaration.prototype.setProperty=new Proxy(o,{apply:lt((a,c,l)=>{const[d,h,p]=l;if(t.has(d))return o.apply(c,[d,h,p]);const{id:f,styleId:m}=Do(hr([c,"access",g=>g.parentRule,"optionalAccess",g=>g.parentStyleSheet]),e,s.styleMirror);return(f&&f!==-1||m&&m!==-1)&&n({id:f,styleId:m,set:{property:d,value:h,priority:p},index:cf(c.parentRule)}),a.apply(c,l)})});const i=r.CSSStyleDeclaration.prototype.removeProperty;return r.CSSStyleDeclaration.prototype.removeProperty=new Proxy(i,{apply:lt((a,c,l)=>{const[d]=l;if(t.has(d))return i.apply(c,[d]);const{id:h,styleId:p}=Do(hr([c,"access",f=>f.parentRule,"optionalAccess",f=>f.parentStyleSheet]),e,s.styleMirror);return(h&&h!==-1||p&&p!==-1)&&n({id:h,styleId:p,remove:{property:d},index:cf(c.parentRule)}),a.apply(c,l)})}),lt(()=>{r.CSSStyleDeclaration.prototype.setProperty=o,r.CSSStyleDeclaration.prototype.removeProperty=i})}u(qV,"initStyleDeclarationObserver");function KV({mediaInteractionCb:n,blockClass:e,blockSelector:t,unblockSelector:s,mirror:r,sampling:o,doc:i}){const a=lt(l=>Fl(lt(d=>{const h=fd(d);if(!h||$s(h,e,t,s,!0))return;const{currentTime:p,volume:f,muted:m,playbackRate:g}=h;n({type:l,id:r.getId(h),currentTime:p,volume:f,muted:m,playbackRate:g})}),o.media||500)),c=[Qn("play",a(0),i),Qn("pause",a(1),i),Qn("seeked",a(2),i),Qn("volumechange",a(3),i),Qn("ratechange",a(4),i)];return lt(()=>{c.forEach(l=>l())})}u(KV,"initMediaInteractionObserver");function XV({fontCb:n,doc:e}){const t=e.defaultView;if(!t)return()=>{};const s=[],r=new WeakMap,o=t.FontFace;t.FontFace=u(function(c,l,d){const h=new o(c,l,d);return r.set(h,{family:c,buffer:typeof l!="string",descriptors:d,fontSource:typeof l=="string"?l:JSON.stringify(Array.from(new Uint8Array(l)))}),h},"FontFace");const i=G0(e.fonts,"add",function(a){return function(c){return dm(lt(()=>{const l=r.get(c);l&&(n(l),r.delete(c))}),0),a.apply(this,[c])}});return s.push(()=>{t.FontFace=o}),s.push(i),lt(()=>{s.forEach(a=>a())})}u(XV,"initFontObserver");function YV(n){const{doc:e,mirror:t,blockClass:s,blockSelector:r,unblockSelector:o,selectionCb:i}=n;let a=!0;const c=lt(()=>{const l=e.getSelection();if(!l||a&&hr([l,"optionalAccess",p=>p.isCollapsed]))return;a=l.isCollapsed||!1;const d=[],h=l.rangeCount||0;for(let p=0;p<h;p++){const f=l.getRangeAt(p),{startContainer:m,startOffset:g,endContainer:y,endOffset:b}=f;$s(m,s,r,o,!0)||$s(y,s,r,o,!0)||d.push({start:t.getId(m),startOffset:g,end:t.getId(y),endOffset:b})}i({ranges:d})});return c(),Qn("selectionchange",c)}u(YV,"initSelectionObserver");function QV({doc:n,customElementCb:e}){const t=n.defaultView;return!t||!t.customElements?()=>{}:G0(t.customElements,"define",function(r){return function(o,i,a){try{e({define:{name:o}})}catch{}return r.apply(this,[o,i,a])}})}u(QV,"initCustomElementObserver");function JV(n,e={}){const t=n.doc.defaultView;if(!t)return()=>{};let s;n.recordDOM&&(s=O2(n,n.doc));const r=WV(n),o=VV(n),i=F2(n),a=UV(n,{win:t}),c=HV(n),l=KV(n);let d=u(()=>{},"styleSheetObserver"),h=u(()=>{},"adoptedStyleSheetObserver"),p=u(()=>{},"styleDeclarationObserver"),f=u(()=>{},"fontObserver");n.recordDOM&&(d=jV(n,{win:t}),h=P2(n,n.doc),p=qV(n,{win:t}),n.collectFonts&&(f=XV(n)));const m=YV(n),g=QV(n),y=[];for(const b of n.plugins)y.push(b.observer(b.callback,t,b.options));return lt(()=>{ec.forEach(b=>b.reset()),hr([s,"optionalAccess",b=>b.disconnect,"call",b=>b()]),r(),o(),i(),a(),c(),l(),d(),h(),p(),f(),m(),g(),y.forEach(b=>b())})}u(JV,"initObservers");function sp(n){return typeof window[n]<"u"}u(sp,"hasNestedCSSRule");function rp(n){return!!(typeof window[n]<"u"&&window[n].prototype&&"insertRule"in window[n].prototype&&"deleteRule"in window[n].prototype)}u(rp,"canMonkeyPatchNestedCSSRule");class nx{static{u(this,"CrossOriginIframeMirror")}constructor(e){this.generateIdFn=e,this.iframeIdToRemoteIdMap=new WeakMap,this.iframeRemoteIdToIdMap=new WeakMap}getId(e,t,s,r){const o=s||this.getIdToRemoteIdMap(e),i=r||this.getRemoteIdToIdMap(e);let a=o.get(t);return a||(a=this.generateIdFn(),o.set(t,a),i.set(a,t)),a}getIds(e,t){const s=this.getIdToRemoteIdMap(e),r=this.getRemoteIdToIdMap(e);return t.map(o=>this.getId(e,o,s,r))}getRemoteId(e,t,s){const r=s||this.getRemoteIdToIdMap(e);if(typeof t!="number")return t;const o=r.get(t);return o||-1}getRemoteIds(e,t){const s=this.getRemoteIdToIdMap(e);return t.map(r=>this.getRemoteId(e,r,s))}reset(e){if(!e){this.iframeIdToRemoteIdMap=new WeakMap,this.iframeRemoteIdToIdMap=new WeakMap;return}this.iframeIdToRemoteIdMap.delete(e),this.iframeRemoteIdToIdMap.delete(e)}getIdToRemoteIdMap(e){let t=this.iframeIdToRemoteIdMap.get(e);return t||(t=new Map,this.iframeIdToRemoteIdMap.set(e,t)),t}getRemoteIdToIdMap(e){let t=this.iframeRemoteIdToIdMap.get(e);return t||(t=new Map,this.iframeRemoteIdToIdMap.set(e,t)),t}}function VC(n){let e,t=n[0],s=1;for(;s<n.length;){const r=n[s],o=n[s+1];if(s+=2,(r==="optionalAccess"||r==="optionalCall")&&t==null)return;r==="access"||r==="optionalAccess"?(e=t,t=o(t)):(r==="call"||r==="optionalCall")&&(t=o((...i)=>t.call(e,...i)),e=void 0)}return t}u(VC,"_optionalChain$1");class ZV{static{u(this,"IframeManagerNoop")}constructor(){this.crossOriginIframeMirror=new nx(U0),this.crossOriginIframeRootIdMap=new WeakMap}addIframe(){}addLoadListener(){}attachIframe(){}}class eU{static{u(this,"IframeManager")}constructor(e){this.iframes=new WeakMap,this.crossOriginIframeMap=new WeakMap,this.crossOriginIframeMirror=new nx(U0),this.crossOriginIframeRootIdMap=new WeakMap,this.mutationCb=e.mutationCb,this.wrappedEmit=e.wrappedEmit,this.stylesheetManager=e.stylesheetManager,this.recordCrossOriginIframes=e.recordCrossOriginIframes,this.crossOriginIframeStyleMirror=new nx(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror)),this.mirror=e.mirror,this.recordCrossOriginIframes&&window.addEventListener("message",this.handleMessage.bind(this))}addIframe(e){this.iframes.set(e,!0),e.contentWindow&&this.crossOriginIframeMap.set(e.contentWindow,e)}addLoadListener(e){this.loadListener=e}attachIframe(e,t){this.mutationCb({adds:[{parentId:this.mirror.getId(e),nextId:null,node:t}],removes:[],texts:[],attributes:[],isAttachIframe:!0}),VC([this,"access",s=>s.loadListener,"optionalCall",s=>s(e)]),e.contentDocument&&e.contentDocument.adoptedStyleSheets&&e.contentDocument.adoptedStyleSheets.length>0&&this.stylesheetManager.adoptStyleSheets(e.contentDocument.adoptedStyleSheets,this.mirror.getId(e.contentDocument))}handleMessage(e){const t=e;if(t.data.type!=="rrweb"||t.origin!==t.data.origin||!e.source)return;const r=this.crossOriginIframeMap.get(e.source);if(!r)return;const o=this.transformCrossOriginEvent(r,t.data.event);o&&this.wrappedEmit(o,t.data.isCheckout)}transformCrossOriginEvent(e,t){switch(t.type){case Ye.FullSnapshot:{this.crossOriginIframeMirror.reset(e),this.crossOriginIframeStyleMirror.reset(e),this.replaceIdOnNode(t.data.node,e);const s=t.data.node.id;return this.crossOriginIframeRootIdMap.set(e,s),this.patchRootIdOnNode(t.data.node,s),{timestamp:t.timestamp,type:Ye.IncrementalSnapshot,data:{source:ze.Mutation,adds:[{parentId:this.mirror.getId(e),nextId:null,node:t.data.node}],removes:[],texts:[],attributes:[],isAttachIframe:!0}}}case Ye.Meta:case Ye.Load:case Ye.DomContentLoaded:return!1;case Ye.Plugin:return t;case Ye.Custom:return this.replaceIds(t.data.payload,e,["id","parentId","previousId","nextId"]),t;case Ye.IncrementalSnapshot:switch(t.data.source){case ze.Mutation:return t.data.adds.forEach(s=>{this.replaceIds(s,e,["parentId","nextId","previousId"]),this.replaceIdOnNode(s.node,e);const r=this.crossOriginIframeRootIdMap.get(e);r&&this.patchRootIdOnNode(s.node,r)}),t.data.removes.forEach(s=>{this.replaceIds(s,e,["parentId","id"])}),t.data.attributes.forEach(s=>{this.replaceIds(s,e,["id"])}),t.data.texts.forEach(s=>{this.replaceIds(s,e,["id"])}),t;case ze.Drag:case ze.TouchMove:case ze.MouseMove:return t.data.positions.forEach(s=>{this.replaceIds(s,e,["id"])}),t;case ze.ViewportResize:return!1;case ze.MediaInteraction:case ze.MouseInteraction:case ze.Scroll:case ze.CanvasMutation:case ze.Input:return this.replaceIds(t.data,e,["id"]),t;case ze.StyleSheetRule:case ze.StyleDeclaration:return this.replaceIds(t.data,e,["id"]),this.replaceStyleIds(t.data,e,["styleId"]),t;case ze.Font:return t;case ze.Selection:return t.data.ranges.forEach(s=>{this.replaceIds(s,e,["start","end"])}),t;case ze.AdoptedStyleSheet:return this.replaceIds(t.data,e,["id"]),this.replaceStyleIds(t.data,e,["styleIds"]),VC([t,"access",s=>s.data,"access",s=>s.styles,"optionalAccess",s=>s.forEach,"call",s=>s(r=>{this.replaceStyleIds(r,e,["styleId"])})]),t}}return!1}replace(e,t,s,r){for(const o of r)!Array.isArray(t[o])&&typeof t[o]!="number"||(Array.isArray(t[o])?t[o]=e.getIds(s,t[o]):t[o]=e.getId(s,t[o]));return t}replaceIds(e,t,s){return this.replace(this.crossOriginIframeMirror,e,t,s)}replaceStyleIds(e,t,s){return this.replace(this.crossOriginIframeStyleMirror,e,t,s)}replaceIdOnNode(e,t){this.replaceIds(e,t,["id","rootId"]),"childNodes"in e&&e.childNodes.forEach(s=>{this.replaceIdOnNode(s,t)})}patchRootIdOnNode(e,t){e.type!==mn.Document&&!e.rootId&&(e.rootId=t),"childNodes"in e&&e.childNodes.forEach(s=>{this.patchRootIdOnNode(s,t)})}}class tU{static{u(this,"ShadowDomManagerNoop")}init(){}addShadowRoot(){}observeAttachShadow(){}reset(){}}class nU{static{u(this,"ShadowDomManager")}constructor(e){this.shadowDoms=new WeakSet,this.restoreHandlers=[],this.mutationCb=e.mutationCb,this.scrollCb=e.scrollCb,this.bypassOptions=e.bypassOptions,this.mirror=e.mirror,this.init()}init(){this.reset(),this.patchAttachShadow(Element,document)}addShadowRoot(e,t){if(!Cl(e)||this.shadowDoms.has(e))return;this.shadowDoms.add(e),this.bypassOptions.canvasManager.addShadowRoot(e);const s=O2({...this.bypassOptions,doc:t,mutationCb:this.mutationCb,mirror:this.mirror,shadowDomManager:this},e);this.restoreHandlers.push(()=>s.disconnect()),this.restoreHandlers.push(F2({...this.bypassOptions,scrollCb:this.scrollCb,doc:e,mirror:this.mirror})),dm(()=>{e.adoptedStyleSheets&&e.adoptedStyleSheets.length>0&&this.bypassOptions.stylesheetManager.adoptStyleSheets(e.adoptedStyleSheets,this.mirror.getId(e.host)),this.restoreHandlers.push(P2({mirror:this.mirror,stylesheetManager:this.bypassOptions.stylesheetManager},e))},0)}observeAttachShadow(e){!e.contentWindow||!e.contentDocument||this.patchAttachShadow(e.contentWindow.Element,e.contentDocument)}patchAttachShadow(e,t){const s=this;this.restoreHandlers.push(G0(e.prototype,"attachShadow",function(r){return function(o){const i=r.call(this,o);return this.shadowRoot&&A2(this)&&s.addShadowRoot(this.shadowRoot,t),i}}))}reset(){this.restoreHandlers.forEach(e=>{try{e()}catch{}}),this.restoreHandlers=[],this.shadowDoms=new WeakSet,this.bypassOptions.canvasManager.resetShadowRoots()}}class UC{static{u(this,"CanvasManagerNoop")}reset(){}freeze(){}unfreeze(){}lock(){}unlock(){}snapshot(){}addWindow(){}addShadowRoot(){}resetShadowRoots(){}}class sU{static{u(this,"StylesheetManager")}constructor(e){this.trackedLinkElements=new WeakSet,this.styleMirror=new _V,this.mutationCb=e.mutationCb,this.adoptedStyleSheetCb=e.adoptedStyleSheetCb}attachLinkElement(e,t){"_cssText"in t.attributes&&this.mutationCb({adds:[],removes:[],texts:[],attributes:[{id:t.id,attributes:t.attributes}]}),this.trackLinkElement(e)}trackLinkElement(e){this.trackedLinkElements.has(e)||(this.trackedLinkElements.add(e),this.trackStylesheetInLinkElement(e))}adoptStyleSheets(e,t){if(e.length===0)return;const s={id:t,styleIds:[]},r=[];for(const o of e){let i;this.styleMirror.has(o)?i=this.styleMirror.getId(o):(i=this.styleMirror.add(o),r.push({styleId:i,rules:Array.from(o.rules||CSSRule,(a,c)=>({rule:g2(a),index:c}))})),s.styleIds.push(i)}r.length>0&&(s.styles=r),this.adoptedStyleSheetCb(s)}reset(){this.styleMirror.reset(),this.trackedLinkElements=new WeakSet}trackStylesheetInLinkElement(e){}}class rU{static{u(this,"ProcessedNodeManager")}constructor(){this.nodeMap=new WeakMap,this.active=!1}inOtherBuffer(e,t){const s=this.nodeMap.get(e);return s&&Array.from(s).some(r=>r!==t)}add(e,t){this.active||(this.active=!0,DV(()=>{this.nodeMap=new WeakMap,this.active=!1})),this.nodeMap.set(e,(this.nodeMap.get(e)||new Set).add(t))}destroy(){}}let Kt,uf;try{if(Array.from([1],n=>n*2)[0]!==2){const n=document.createElement("iframe");document.body.appendChild(n),Array.from=Ns([n,"access",e=>e.contentWindow,"optionalAccess",e=>e.Array,"access",e=>e.from])||Array.from,document.body.removeChild(n)}}catch(n){}const ur=rV();function uo(n={}){const{emit:e,checkoutEveryNms:t,checkoutEveryNth:s,blockClass:r="rr-block",blockSelector:o=null,unblockSelector:i=null,ignoreClass:a="rr-ignore",ignoreSelector:c=null,maskAllText:l=!1,maskTextClass:d="rr-mask",unmaskTextClass:h=null,maskTextSelector:p=null,unmaskTextSelector:f=null,inlineStylesheet:m=!0,maskAllInputs:g,maskInputOptions:y,slimDOMOptions:b,maskAttributeFn:x,maskInputFn:S,maskTextFn:w,maxCanvasSize:C=null,packFn:v,sampling:k={},dataURLOptions:$={},mousemoveWait:T,recordDOM:E=!0,recordCanvas:R=!1,recordCrossOriginIframes:O=!1,recordAfter:L=n.recordAfter==="DOMContentLoaded"?n.recordAfter:"load",userTriggeredOnInput:z=!1,collectFonts:W=!1,inlineImages:A=!1,plugins:G,keepIframeSrcFn:V=u(()=>!1,"keepIframeSrcFn"),ignoreCSSAttributes:q=new Set([]),errorHandler:Y,onMutation:Q,getCanvasManager:ne}=n;zV(Y);const X=O?window.parent===window:!0;let Z=!1;if(!X)try{window.parent.document&&(Z=!1)}catch{Z=!0}if(X&&!e)throw new Error("emit function is required");if(!X&&!Z)return()=>{};T!==void 0&&k.mousemove===void 0&&(k.mousemove=T),ur.reset();const se=g===!0?{color:!0,date:!0,"datetime-local":!0,email:!0,month:!0,number:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0,textarea:!0,select:!0,radio:!0,checkbox:!0}:y!==void 0?y:{},de=b===!0||b==="all"?{script:!0,comment:!0,headFavicon:!0,headWhitespace:!0,headMetaSocial:!0,headMetaRobots:!0,headMetaHttpEquiv:!0,headMetaVerification:!0,headMetaAuthorship:b==="all",headMetaDescKeywords:b==="all"}:b||{};EV();let me,Ie=0;const Ce=u($e=>{for(const Vt of G||[])Vt.eventProcessor&&($e=Vt.eventProcessor($e));return v&&!Z&&($e=v($e)),$e},"eventProcessor");Kt=u(($e,Vt)=>{const Te=$e;if(Te.timestamp=af(),Ns([ec,"access",pt=>pt[0],"optionalAccess",pt=>pt.isFrozen,"call",pt=>pt()])&&Te.type!==Ye.FullSnapshot&&!(Te.type===Ye.IncrementalSnapshot&&Te.data.source===ze.Mutation)&&ec.forEach(pt=>pt.unfreeze()),X)Ns([e,"optionalCall",pt=>pt(Ce(Te),Vt)]);else if(Z){const pt={type:"rrweb",event:Ce(Te),origin:window.location.origin,isCheckout:Vt};window.parent.postMessage(pt,"*")}if(Te.type===Ye.FullSnapshot)me=Te,Ie=0;else if(Te.type===Ye.IncrementalSnapshot){if(Te.data.source===ze.Mutation&&Te.data.isAttachIframe)return;Ie++;const pt=s&&Ie>=s,Me=t&&me&&Te.timestamp-me.timestamp>t;(pt||Me)&&Cn(!0)}},"wrappedEmit");const ke=u($e=>{Kt({type:Ye.IncrementalSnapshot,data:{source:ze.Mutation,...$e}})},"wrappedMutationEmit"),Ae=u($e=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.Scroll,...$e}}),"wrappedScrollEmit"),Be=u($e=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.CanvasMutation,...$e}}),"wrappedCanvasMutationEmit"),ct=u($e=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.AdoptedStyleSheet,...$e}}),"wrappedAdoptedStyleSheetEmit"),st=new sU({mutationCb:ke,adoptedStyleSheetCb:ct}),Xe=typeof __RRWEB_EXCLUDE_IFRAME__=="boolean"&&__RRWEB_EXCLUDE_IFRAME__?new ZV:new eU({mirror:ur,mutationCb:ke,stylesheetManager:st,recordCrossOriginIframes:O,wrappedEmit:Kt});for(const $e of G||[])$e.getMirror&&$e.getMirror({nodeMirror:ur,crossOriginIframeMirror:Xe.crossOriginIframeMirror,crossOriginIframeStyleMirror:Xe.crossOriginIframeStyleMirror});const rt=new rU,mt=iU(ne,{mirror:ur,win:window,mutationCb:$e=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.CanvasMutation,...$e}}),recordCanvas:R,blockClass:r,blockSelector:o,unblockSelector:i,maxCanvasSize:C,sampling:k.canvas,dataURLOptions:$,errorHandler:Y}),ft=typeof __RRWEB_EXCLUDE_SHADOW_DOM__=="boolean"&&__RRWEB_EXCLUDE_SHADOW_DOM__?new tU:new nU({mutationCb:ke,scrollCb:Ae,bypassOptions:{onMutation:Q,blockClass:r,blockSelector:o,unblockSelector:i,maskAllText:l,maskTextClass:d,unmaskTextClass:h,maskTextSelector:p,unmaskTextSelector:f,inlineStylesheet:m,maskInputOptions:se,dataURLOptions:$,maskAttributeFn:x,maskTextFn:w,maskInputFn:S,recordCanvas:R,inlineImages:A,sampling:k,slimDOMOptions:de,iframeManager:Xe,stylesheetManager:st,canvasManager:mt,keepIframeSrcFn:V,processedNodeManager:rt},mirror:ur}),Cn=u(($e=!1)=>{if(!E)return;Kt({type:Ye.Meta,data:{href:window.location.href,width:$2(),height:k2()}},$e),st.reset(),ft.init(),ec.forEach(Te=>Te.lock());const Vt=NV(document,{mirror:ur,blockClass:r,blockSelector:o,unblockSelector:i,maskAllText:l,maskTextClass:d,unmaskTextClass:h,maskTextSelector:p,unmaskTextSelector:f,inlineStylesheet:m,maskAllInputs:se,maskAttributeFn:x,maskInputFn:S,maskTextFn:w,slimDOM:de,dataURLOptions:$,recordCanvas:R,inlineImages:A,onSerialize:Te=>{E2(Te,ur)&&Xe.addIframe(Te),_2(Te,ur)&&st.trackLinkElement(Te),ex(Te)&&ft.addShadowRoot(Te.shadowRoot,document)},onIframeLoad:(Te,pt)=>{Xe.attachIframe(Te,pt),Te.contentWindow&&mt.addWindow(Te.contentWindow),ft.observeAttachShadow(Te)},onStylesheetLoad:(Te,pt)=>{st.attachLinkElement(Te,pt)},keepIframeSrcFn:V});if(!Vt)return console.warn("Failed to snapshot the document");Kt({type:Ye.FullSnapshot,data:{node:Vt,initialOffset:I2(window)}}),ec.forEach(Te=>Te.unlock()),document.adoptedStyleSheets&&document.adoptedStyleSheets.length>0&&st.adoptStyleSheets(document.adoptedStyleSheets,ur.getId(document))},"takeFullSnapshot");uf=Cn;try{const $e=[],Vt=u(pt=>lt(JV)({onMutation:Q,mutationCb:ke,mousemoveCb:(Me,De)=>Kt({type:Ye.IncrementalSnapshot,data:{source:De,positions:Me}}),mouseInteractionCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.MouseInteraction,...Me}}),scrollCb:Ae,viewportResizeCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.ViewportResize,...Me}}),inputCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.Input,...Me}}),mediaInteractionCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.MediaInteraction,...Me}}),styleSheetRuleCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.StyleSheetRule,...Me}}),styleDeclarationCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.StyleDeclaration,...Me}}),canvasMutationCb:Be,fontCb:Me=>Kt({type:Ye.IncrementalSnapshot,data:{source:ze.Font,...Me}}),selectionCb:Me=>{Kt({type:Ye.IncrementalSnapshot,data:{source:ze.Selection,...Me}})},customElementCb:Me=>{Kt({type:Ye.IncrementalSnapshot,data:{source:ze.CustomElement,...Me}})},blockClass:r,ignoreClass:a,ignoreSelector:c,maskAllText:l,maskTextClass:d,unmaskTextClass:h,maskTextSelector:p,unmaskTextSelector:f,maskInputOptions:se,inlineStylesheet:m,sampling:k,recordDOM:E,recordCanvas:R,inlineImages:A,userTriggeredOnInput:z,collectFonts:W,doc:pt,maskAttributeFn:x,maskInputFn:S,maskTextFn:w,keepIframeSrcFn:V,blockSelector:o,unblockSelector:i,slimDOMOptions:de,dataURLOptions:$,mirror:ur,iframeManager:Xe,stylesheetManager:st,shadowDomManager:ft,processedNodeManager:rt,canvasManager:mt,ignoreCSSAttributes:q,plugins:Ns([G,"optionalAccess",Me=>Me.filter,"call",Me=>Me(De=>De.observer),"optionalAccess",Me=>Me.map,"call",Me=>Me(De=>({observer:De.observer,options:De.options,callback:je=>Kt({type:Ye.Plugin,data:{plugin:De.name,payload:je}})}))])||[]},{}),"observe");Xe.addLoadListener(pt=>{try{$e.push(Vt(pt.contentDocument))}catch(Me){}});const Te=u(()=>{Cn(),$e.push(Vt(document))},"init");return document.readyState==="interactive"||document.readyState==="complete"?Te():($e.push(Qn("DOMContentLoaded",()=>{Kt({type:Ye.DomContentLoaded,data:{}}),L==="DOMContentLoaded"&&Te()})),$e.push(Qn("load",()=>{Kt({type:Ye.Load,data:{}}),L==="load"&&Te()},window))),()=>{$e.forEach(pt=>pt()),rt.destroy(),uf=void 0,BV()}}catch($e){}}u(uo,"record");function oU(n){if(!uf)throw new Error("please take full snapshot after start recording");uf(n)}u(oU,"takeFullSnapshot");uo.mirror=ur;uo.takeFullSnapshot=oU;function iU(n,e){try{return n?n(e):new UC}catch{return new UC}}u(iU,"_getCanvasManager");const Re=typeof __SENTRY_DEBUG__>"u"||__SENTRY_DEBUG__,GC=["info","warn","error","log"],Dp="[Replay] ";function jy(n,e="info"){Ko({category:"console",data:{logger:"replay"},level:e,message:`${Dp}${n}`},{level:e})}u(jy,"_addBreadcrumb");function aU(){let n=!1,e=!1;const t={exception:()=>{},infoTick:()=>{},setConfig:s=>{n=s.captureExceptions,e=s.traceInternals}};return Re?(GC.forEach(s=>{t[s]=(...r)=>{ae[s](Dp,...r),e&&jy(r.join(""),b$(s))}}),t.exception=(s,...r)=>{r.length&&t.error&&t.error(...r),ae.error(Dp,s),n?cd(s):e&&jy(s,"error")},t.infoTick=(...s)=>{ae.info(Dp,...s),e&&setTimeout(()=>jy(s[0]),0)}):GC.forEach(s=>{t[s]=()=>{}}),t}u(aU,"makeReplayLogger");const Fe=aU(),cU=3,uU=5;function j0(n){return n>9999999999?n:n*1e3}u(j0,"timestampToMs");function qy(n){return n>9999999999?n/1e3:n}u(qy,"timestampToS");function md(n,e){e.category!=="sentry.transaction"&&(["ui.click","ui.input"].includes(e.category)?n.triggerUserActivity():n.checkAndHandleExpiredSession(),n.addUpdate(()=>(n.throttledAddEvent({type:Ye.Custom,timestamp:(e.timestamp||0)*1e3,data:{tag:"breadcrumb",payload:Rr(e,10,1e3)}}),e.category==="console")))}u(md,"addBreadcrumbEvent");const lU="button,a";function L2(n){return n.closest(lU)||n}u(L2,"getClosestInteractive");function M2(n){const e=z2(n);return!e||!(e instanceof Element)?e:L2(e)}u(M2,"getClickTargetNode");function z2(n){return dU(n)?n.target:n}u(z2,"getTargetNode");function dU(n){return typeof n=="object"&&!!n&&"target"in n}u(dU,"isEventWithTarget");let Oo;function hU(n){return Oo||(Oo=[],pU()),Oo.push(n),()=>{const e=Oo?Oo.indexOf(n):-1;e>-1&&Oo.splice(e,1)}}u(hU,"onWindowOpen");function pU(){ps(Tt,"open",function(n){return function(...e){if(Oo)try{Oo.forEach(t=>t())}catch{}return n.apply(Tt,e)}})}u(pU,"monkeyPatchWindowOpen");const fU=new Set([ze.Mutation,ze.StyleSheetRule,ze.StyleDeclaration,ze.AdoptedStyleSheet,ze.CanvasMutation,ze.Selection,ze.MediaInteraction]);function mU(n,e,t){n.handleClick(e,t)}u(mU,"handleClick");class gU{static{u(this,"ClickDetector")}constructor(e,t,s=md){this._lastMutation=0,this._lastScroll=0,this._clicks=[],this._timeout=t.timeout/1e3,this._threshold=t.threshold/1e3,this._scrollTimeout=t.scrollTimeout/1e3,this._replay=e,this._ignoreSelector=t.ignoreSelector,this._addBreadcrumbEvent=s}addListeners(){const e=hU(()=>{this._lastMutation=HC()});this._teardown=()=>{e(),this._clicks=[],this._lastMutation=0,this._lastScroll=0}}removeListeners(){this._teardown&&this._teardown(),this._checkClickTimeout&&clearTimeout(this._checkClickTimeout)}handleClick(e,t){if(bU(t,this._ignoreSelector)||!xU(e))return;const s={timestamp:qy(e.timestamp),clickBreadcrumb:e,clickCount:0,node:t};this._clicks.some(r=>r.node===s.node&&Math.abs(r.timestamp-s.timestamp)<1)||(this._clicks.push(s),this._clicks.length===1&&this._scheduleCheckClicks())}registerMutation(e=Date.now()){this._lastMutation=qy(e)}registerScroll(e=Date.now()){this._lastScroll=qy(e)}registerClick(e){const t=L2(e);this._handleMultiClick(t)}_handleMultiClick(e){this._getClicks(e).forEach(t=>{t.clickCount++})}_getClicks(e){return this._clicks.filter(t=>t.node===e)}_checkClicks(){const e=[],t=HC();this._clicks.forEach(s=>{!s.mutationAfter&&this._lastMutation&&(s.mutationAfter=s.timestamp<=this._lastMutation?this._lastMutation-s.timestamp:void 0),!s.scrollAfter&&this._lastScroll&&(s.scrollAfter=s.timestamp<=this._lastScroll?this._lastScroll-s.timestamp:void 0),s.timestamp+this._timeout<=t&&e.push(s)});for(const s of e){const r=this._clicks.indexOf(s);r>-1&&(this._generateBreadcrumbs(s),this._clicks.splice(r,1))}this._clicks.length&&this._scheduleCheckClicks()}_generateBreadcrumbs(e){const t=this._replay,s=e.scrollAfter&&e.scrollAfter<=this._scrollTimeout,r=e.mutationAfter&&e.mutationAfter<=this._threshold,o=!s&&!r,{clickCount:i,clickBreadcrumb:a}=e;if(o){const c=Math.min(e.mutationAfter||this._timeout,this._timeout)*1e3,l=c<this._timeout*1e3?"mutation":"timeout",d={type:"default",message:a.message,timestamp:a.timestamp,category:"ui.slowClickDetected",data:{...a.data,url:Tt.location.href,route:t.getCurrentRoute(),timeAfterClickMs:c,endReason:l,clickCount:i||1}};this._addBreadcrumbEvent(t,d);return}if(i>1){const c={type:"default",message:a.message,timestamp:a.timestamp,category:"ui.multiClick",data:{...a.data,url:Tt.location.href,route:t.getCurrentRoute(),clickCount:i,metric:!0}};this._addBreadcrumbEvent(t,c)}}_scheduleCheckClicks(){this._checkClickTimeout&&clearTimeout(this._checkClickTimeout),this._checkClickTimeout=gc(()=>this._checkClicks(),1e3)}}const yU=["A","BUTTON","INPUT"];function bU(n,e){return!!(!yU.includes(n.tagName)||n.tagName==="INPUT"&&!["submit","button"].includes(n.getAttribute("type")||"")||n.tagName==="A"&&(n.hasAttribute("download")||n.hasAttribute("target")&&n.getAttribute("target")!=="_self")||e&&n.matches(e))}u(bU,"ignoreElement");function xU(n){return!!(n.data&&typeof n.data.nodeId=="number"&&n.timestamp)}u(xU,"isClickBreadcrumb");function HC(){return Date.now()/1e3}u(HC,"nowInSeconds");function wU(n,e){try{if(!SU(e))return;const{source:t}=e.data;if(fU.has(t)&&n.registerMutation(e.timestamp),t===ze.Scroll&&n.registerScroll(e.timestamp),CU(e)){const{type:s,id:r}=e.data,o=uo.mirror.getNode(r);o instanceof HTMLElement&&s===qn.Click&&n.registerClick(o)}}catch{}}u(wU,"updateClickDetectorForRecordingEvent");function SU(n){return n.type===cU}u(SU,"isIncrementalEvent");function CU(n){return n.data.source===ze.MouseInteraction}u(CU,"isIncrementalMouseInteraction");function Lr(n){return{timestamp:Date.now()/1e3,type:"default",...n}}u(Lr,"createBreadcrumb");var lf;(function(n){n[n.Document=0]="Document",n[n.DocumentType=1]="DocumentType",n[n.Element=2]="Element",n[n.Text=3]="Text",n[n.CDATA=4]="CDATA",n[n.Comment=5]="Comment"})(lf||(lf={}));const vU=new Set(["id","class","aria-label","role","name","alt","title","data-test-id","data-testid","disabled","aria-disabled","data-sentry-component"]);function IU(n){const e={};!n["data-sentry-component"]&&n["data-sentry-element"]&&(n["data-sentry-component"]=n["data-sentry-element"]);for(const t in n)if(vU.has(t)){let s=t;(t==="data-testid"||t==="data-test-id")&&(s="testId"),e[s]=n[t]}return e}u(IU,"getAttributesToRecord");const kU=u(n=>e=>{if(!n.isEnabled())return;const t=$U(e);if(!t)return;const s=e.name==="click",r=s?e.event:void 0;s&&n.clickDetector&&r&&r.target&&!r.altKey&&!r.metaKey&&!r.ctrlKey&&!r.shiftKey&&mU(n.clickDetector,t,M2(e.event)),md(n,t)},"handleDomListener");function B2(n,e){const t=uo.mirror.getId(n),s=t&&uo.mirror.getNode(t),r=s&&uo.mirror.getMeta(s),o=r&&TU(r)?r:null;return{message:e,data:o?{nodeId:t,node:{id:t,tagName:o.tagName,textContent:Array.from(o.childNodes).map(i=>i.type===lf.Text&&i.textContent).filter(Boolean).map(i=>i.trim()).join(""),attributes:IU(o.attributes)}}:{}}}u(B2,"getBaseDomBreadcrumb");function $U(n){const{target:e,message:t}=NU(n);return Lr({category:`ui.${n.name}`,...B2(e,t)})}u($U,"handleDom");function NU(n){const e=n.name==="click";let t,s=null;try{s=e?M2(n.event):z2(n.event),t=go(s,{maxStringLength:200})||"<unknown>"}catch{t="<unknown>"}return{target:s,message:t}}u(NU,"getDomTarget");function TU(n){return n.type===lf.Element}u(TU,"isElement");function EU(n,e){if(!n.isEnabled())return;n.updateUserActivity();const t=_U(e);t&&md(n,t)}u(EU,"handleKeyboardEvent");function _U(n){const{metaKey:e,shiftKey:t,ctrlKey:s,altKey:r,key:o,target:i}=n;if(!i||RU(i)||!o)return null;const a=e||s||r,c=o.length===1;if(!a&&c)return null;const l=go(i,{maxStringLength:200})||"<unknown>",d=B2(i,l);return Lr({category:"ui.keyDown",message:l,data:{...d.data,metaKey:e,shiftKey:t,ctrlKey:s,altKey:r,key:o}})}u(_U,"getKeyboardBreadcrumb");function RU(n){return n.tagName==="INPUT"||n.tagName==="TEXTAREA"||n.isContentEditable}u(RU,"isInputElement");const AU={resource:LU,paint:FU,navigation:PU};function op(n,e){return({metric:t})=>void e.replayPerformanceEntries.push(n(t))}u(op,"webVitalHandler");function DU(n){return n.map(OU).filter(Boolean)}u(DU,"createPerformanceEntries");function OU(n){const e=AU[n.entryType];return e?e(n):null}u(OU,"createPerformanceEntry");function xc(n){return((ss||Tt.performance.timeOrigin)+n)/1e3}u(xc,"getAbsoluteTime$1");function FU(n){const{duration:e,entryType:t,name:s,startTime:r}=n,o=xc(r);return{type:t,name:s,start:o,end:o+e,data:void 0}}u(FU,"createPaintEntry");function PU(n){const{entryType:e,name:t,decodedBodySize:s,duration:r,domComplete:o,encodedBodySize:i,domContentLoadedEventStart:a,domContentLoadedEventEnd:c,domInteractive:l,loadEventStart:d,loadEventEnd:h,redirectCount:p,startTime:f,transferSize:m,type:g}=n;return r===0?null:{type:`${e}.${g}`,start:xc(f),end:xc(o),name:t,data:{size:m,decodedBodySize:s,encodedBodySize:i,duration:r,domInteractive:l,domContentLoadedEventStart:a,domContentLoadedEventEnd:c,loadEventStart:d,loadEventEnd:h,domComplete:o,redirectCount:p}}}u(PU,"createNavigationEntry");function LU(n){const{entryType:e,initiatorType:t,name:s,responseEnd:r,startTime:o,decodedBodySize:i,encodedBodySize:a,responseStatus:c,transferSize:l}=n;return["fetch","xmlhttprequest"].includes(t)?null:{type:`${e}.${t}`,start:xc(o),end:xc(r),name:s,data:{size:l,statusCode:c,decodedBodySize:i,encodedBodySize:a}}}u(LU,"createResourceEntry");function MU(n){const e=n.entries[n.entries.length-1],t=e&&e.element?[e.element]:void 0;return hm(n,"largest-contentful-paint",t)}u(MU,"getLargestContentfulPaint");function zU(n){return n.sources!==void 0}u(zU,"isLayoutShift");function BU(n){const e=[],t=[];for(const s of n.entries)if(zU(s)){const r=[];for(const o of s.sources)if(o.node){t.push(o.node);const i=uo.mirror.getId(o.node);i&&r.push(i)}e.push({value:s.value,nodeIds:r.length?r:void 0})}return hm(n,"cumulative-layout-shift",t,e)}u(BU,"getCumulativeLayoutShift");function WU(n){const e=n.entries[n.entries.length-1],t=e&&e.target?[e.target]:void 0;return hm(n,"first-input-delay",t)}u(WU,"getFirstInputDelay");function VU(n){const e=n.entries[n.entries.length-1],t=e&&e.target?[e.target]:void 0;return hm(n,"interaction-to-next-paint",t)}u(VU,"getInteractionToNextPaint");function hm(n,e,t,s){const r=n.value,o=n.rating,i=xc(r);return{type:"web-vital",name:e,start:i,end:i,data:{value:r,size:r,rating:o,nodeIds:t?t.map(a=>uo.mirror.getId(a)):void 0,attributions:s}}}u(hm,"getWebVital");function UU(n){function e(r){n.performanceEntries.includes(r)||n.performanceEntries.push(r)}u(e,"addPerformanceEntry");function t({entries:r}){r.forEach(e)}u(t,"onEntries");const s=[];return["navigation","paint","resource"].forEach(r=>{s.push(mc(r,t))}),s.push(r2(op(MU,n)),L0(op(BU,n)),o2(op(WU,n)),i2(op(VU,n))),()=>{s.forEach(r=>r())}}u(UU,"setupPerformanceObserver");const GU='var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},_=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},x=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=A(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},A=function(t,n,r){return-1==t.s?Math.max(A(t.l,n,r+1),A(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},U=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=x(f,15),M=b.t,E=b.l,A=x(h,15),U=A.t,C=A.l,F=D(M),I=F.c,S=F.n,L=D(U),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=x(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,U)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(U,C,0),R=U;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){_(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;_(r,m,Q[et]),m+=R[et],et>3&&(_(r,m,rt>>5&8191),m+=i[et])}else _(r,m,N[rt]),m+=P[rt]}return _(r,m,N[256]),m+P[256]},C=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=C[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,_=c.p||new n(32768),x=c.h||new n(z+1),A=Math.ceil(o/3),D=2*A,T=function(t){return(a[t]^a[t+1]<<A^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=x[H];if(_[J]=K,x[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=U(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-_[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=_[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=U(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=x,c.p=_,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J="undefined"!=typeof TextEncoder&&new TextEncoder,K="undefined"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(J)return J.encode(n);for(var e=n.length,i=new t(n.length+(n.length>>1)),a=0,s=function(t){i[a++]=t},o=0;o<e;++o){if(a+5>i.length){var f=new t(a+8+(e-o<<1));f.set(i),i=f}var h=n.charCodeAt(o);h<128||r?s(h):h<2048?(s(192|h>>6),s(128|63&h)):h>55295&&h<57344?(s(240|(h=65536+(1047552&h)|1023&n.charCodeAt(++o))>>18),s(128|h>>12&63),s(128|h>>6&63),s(128|63&h)):(s(224|h>>12),s(128|h>>6&63),s(128|63&h))}return b(i,0,a)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&"function"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});';function HU(){const n=new Blob([GU]);return URL.createObjectURL(n)}u(HU,"e");class q0 extends Error{static{u(this,"EventBufferSizeExceededError")}constructor(){super(`Event buffer exceeded maximum size of ${W0}.`)}}class W2{static{u(this,"EventBufferArray")}constructor(){this.events=[],this._totalSize=0,this.hasCheckout=!1}get hasEvents(){return this.events.length>0}get type(){return"sync"}destroy(){this.events=[]}async addEvent(e){const t=JSON.stringify(e).length;if(this._totalSize+=t,this._totalSize>W0)throw new q0;this.events.push(e)}finish(){return new Promise(e=>{const t=this.events;this.clear(),e(JSON.stringify(t))})}clear(){this.events=[],this._totalSize=0,this.hasCheckout=!1}getEarliestTimestamp(){const e=this.events.map(t=>t.timestamp).sort()[0];return e?j0(e):null}}class jU{static{u(this,"WorkerHandler")}constructor(e){this._worker=e,this._id=0}ensureReady(){return this._ensureReadyPromise?this._ensureReadyPromise:(this._ensureReadyPromise=new Promise((e,t)=>{this._worker.addEventListener("message",({data:s})=>{s.success?e():t()},{once:!0}),this._worker.addEventListener("error",s=>{t(s)},{once:!0})}),this._ensureReadyPromise)}destroy(){Re&&Fe.info("Destroying compression worker"),this._worker.terminate()}postMessage(e,t){const s=this._getAndIncrementId();return new Promise((r,o)=>{const i=u(({data:a})=>{const c=a;if(c.method===e&&c.id===s){if(this._worker.removeEventListener("message",i),!c.success){Re&&Fe.error("Error in compression worker: ",c.response),o(new Error("Error in compression worker"));return}r(c.response)}},"listener");this._worker.addEventListener("message",i),this._worker.postMessage({id:s,method:e,arg:t})})}_getAndIncrementId(){return this._id++}}class qU{static{u(this,"EventBufferCompressionWorker")}constructor(e){this._worker=new jU(e),this._earliestTimestamp=null,this._totalSize=0,this.hasCheckout=!1}get hasEvents(){return!!this._earliestTimestamp}get type(){return"worker"}ensureReady(){return this._worker.ensureReady()}destroy(){this._worker.destroy()}addEvent(e){const t=j0(e.timestamp);(!this._earliestTimestamp||t<this._earliestTimestamp)&&(this._earliestTimestamp=t);const s=JSON.stringify(e);return this._totalSize+=s.length,this._totalSize>W0?Promise.reject(new q0):this._sendEventToWorker(s)}finish(){return this._finishRequest()}clear(){this._earliestTimestamp=null,this._totalSize=0,this.hasCheckout=!1,this._worker.postMessage("clear").then(null,e=>{Re&&Fe.exception(e,'Sending "clear" message to worker failed',e)})}getEarliestTimestamp(){return this._earliestTimestamp}_sendEventToWorker(e){return this._worker.postMessage("addEvent",e)}async _finishRequest(){const e=await this._worker.postMessage("finish");return this._earliestTimestamp=null,this._totalSize=0,e}}class KU{static{u(this,"EventBufferProxy")}constructor(e){this._fallback=new W2,this._compression=new qU(e),this._used=this._fallback,this._ensureWorkerIsLoadedPromise=this._ensureWorkerIsLoaded()}get type(){return this._used.type}get hasEvents(){return this._used.hasEvents}get hasCheckout(){return this._used.hasCheckout}set hasCheckout(e){this._used.hasCheckout=e}destroy(){this._fallback.destroy(),this._compression.destroy()}clear(){return this._used.clear()}getEarliestTimestamp(){return this._used.getEarliestTimestamp()}addEvent(e){return this._used.addEvent(e)}async finish(){return await this.ensureWorkerIsLoaded(),this._used.finish()}ensureWorkerIsLoaded(){return this._ensureWorkerIsLoadedPromise}async _ensureWorkerIsLoaded(){try{await this._compression.ensureReady()}catch(e){Re&&Fe.exception(e,"Failed to load the compression worker, falling back to simple buffer");return}await this._switchToCompressionWorker()}async _switchToCompressionWorker(){const{events:e,hasCheckout:t}=this._fallback,s=[];for(const r of e)s.push(this._compression.addEvent(r));this._compression.hasCheckout=t,this._used=this._compression;try{await Promise.all(s),this._fallback.clear()}catch(r){Re&&Fe.exception(r,"Failed to add events when switching buffers.")}}}function XU({useCompression:n,workerUrl:e}){if(n&&window.Worker){const t=YU(e);if(t)return t}return Re&&Fe.info("Using simple buffer"),new W2}u(XU,"createEventBuffer");function YU(n){try{const e=n||QU();if(!e)return;Re&&Fe.info(`Using compression worker${n?` from ${n}`:""}`);const t=new Worker(e);return new KU(t)}catch(e){Re&&Fe.exception(e,"Failed to create compression worker")}}u(YU,"_loadWorker");function QU(){return typeof __SENTRY_EXCLUDE_REPLAY_WORKER__>"u"||!__SENTRY_EXCLUDE_REPLAY_WORKER__?HU():""}u(QU,"_getWorkerUrl");function K0(){try{return"sessionStorage"in Tt&&!!Tt.sessionStorage}catch{return!1}}u(K0,"hasSessionStorage");function JU(n){ZU(),n.session=void 0}u(JU,"clearSession");function ZU(){if(K0())try{Tt.sessionStorage.removeItem(z0)}catch{}}u(ZU,"deleteSession");function V2(n){return n===void 0?!1:Math.random()<n}u(V2,"isSampled");function U2(n){const e=Date.now(),t=n.id||zt(),s=n.started||e,r=n.lastActivity||e,o=n.segmentId||0,i=n.sampled,a=n.previousSessionId;return{id:t,started:s,lastActivity:r,segmentId:o,sampled:i,previousSessionId:a}}u(U2,"makeSession");function X0(n){if(K0())try{Tt.sessionStorage.setItem(z0,JSON.stringify(n))}catch{}}u(X0,"saveSession");function e4(n,e){return V2(n)?"session":e?"buffer":!1}u(e4,"getSessionSampleType");function jC({sessionSampleRate:n,allowBuffering:e,stickySession:t=!1},{previousSessionId:s}={}){const r=e4(n,e),o=U2({sampled:r,previousSessionId:s});return t&&X0(o),o}u(jC,"createSession");function t4(){if(!K0())return null;try{const n=Tt.sessionStorage.getItem(z0);if(!n)return null;const e=JSON.parse(n);return Re&&Fe.infoTick("Loading existing session"),U2(e)}catch{return null}}u(t4,"fetchSession");function sx(n,e,t=+new Date){return n===null||e===void 0||e<0?!0:e===0?!1:n+e<=t}u(sx,"isExpired");function G2(n,{maxReplayDuration:e,sessionIdleExpire:t,targetTime:s=Date.now()}){return sx(n.started,e,s)||sx(n.lastActivity,t,s)}u(G2,"isSessionExpired");function H2(n,{sessionIdleExpire:e,maxReplayDuration:t}){return!(!G2(n,{sessionIdleExpire:e,maxReplayDuration:t})||n.sampled==="buffer"&&n.segmentId===0)}u(H2,"shouldRefreshSession");function Ky({sessionIdleExpire:n,maxReplayDuration:e,previousSessionId:t},s){const r=s.stickySession&&t4();return r?H2(r,{sessionIdleExpire:n,maxReplayDuration:e})?(Re&&Fe.infoTick("Session in sessionStorage is expired, creating new one..."),jC(s,{previousSessionId:r.id})):r:(Re&&Fe.infoTick("Creating new session"),jC(s,{previousSessionId:t}))}u(Ky,"loadOrCreateSession");function n4(n){return n.type===Ye.Custom}u(n4,"isCustomEvent");function Y0(n,e,t){return q2(n,e)?(j2(n,e,t),!0):!1}u(Y0,"addEventSync");function s4(n,e,t){return q2(n,e)?j2(n,e,t):Promise.resolve(null)}u(s4,"addEvent");async function j2(n,e,t){if(!n.eventBuffer)return null;try{t&&n.recordingMode==="buffer"&&n.eventBuffer.clear(),t&&(n.eventBuffer.hasCheckout=!0);const s=n.getOptions(),r=r4(e,s.beforeAddRecordingEvent);return r?await n.eventBuffer.addEvent(r):void 0}catch(s){const r=s&&s instanceof q0?"addEventSizeExceeded":"addEvent";n.handleException(s),await n.stop({reason:r});const o=tt();o&&o.recordDroppedEvent("internal_sdk_error","replay")}}u(j2,"_addEvent");function q2(n,e){if(!n.eventBuffer||n.isPaused()||!n.isEnabled())return!1;const t=j0(e.timestamp);return t+n.timeouts.sessionIdlePause<Date.now()?!1:t>n.getContext().initialTimestamp+n.getOptions().maxReplayDuration?(Re&&Fe.infoTick(`Skipping event with timestamp ${t} because it is after maxReplayDuration`),!1):!0}u(q2,"shouldAddEvent");function r4(n,e){try{if(typeof e=="function"&&n4(n))return e(n)}catch(t){return Re&&Fe.exception(t,"An error occurred in the `beforeAddRecordingEvent` callback, skipping the event..."),null}return n}u(r4,"maybeApplyCallback");function Q0(n){return!n.type}u(Q0,"isErrorEvent");function rx(n){return n.type==="transaction"}u(rx,"isTransactionEvent");function o4(n){return n.type==="replay_event"}u(o4,"isReplayEvent");function qC(n){return n.type==="feedback"}u(qC,"isFeedbackEvent");function i4(n){return(e,t)=>{if(!n.isEnabled()||!Q0(e)&&!rx(e))return;const s=t&&t.statusCode;if(!(!s||s<200||s>=300)){if(rx(e)){a4(n,e);return}c4(n,e)}}}u(i4,"handleAfterSendEvent");function a4(n,e){const t=n.getContext();e.contexts&&e.contexts.trace&&e.contexts.trace.trace_id&&t.traceIds.size<100&&t.traceIds.add(e.contexts.trace.trace_id)}u(a4,"handleTransactionEvent");function c4(n,e){const t=n.getContext();if(e.event_id&&t.errorIds.size<100&&t.errorIds.add(e.event_id),n.recordingMode!=="buffer"||!e.tags||!e.tags.replayId)return;const{beforeErrorSampling:s}=n.getOptions();typeof s=="function"&&!s(e)||gc(async()=>{try{await n.sendBufferedReplayOrFlush()}catch(r){n.handleException(r)}})}u(c4,"handleErrorEvent");function u4(n){return e=>{!n.isEnabled()||!Q0(e)||l4(n,e)}}u(u4,"handleBeforeSendEvent");function l4(n,e){const t=e.exception&&e.exception.values&&e.exception.values[0]&&e.exception.values[0].value;if(typeof t=="string"&&(t.match(/(reactjs\.org\/docs\/error-decoder\.html\?invariant=|react\.dev\/errors\/)(418|419|422|423|425)/)||t.match(/(does not match server-rendered HTML|Hydration failed because)/i))){const s=Lr({category:"replay.hydrate-error",data:{url:n$()}});md(n,s)}}u(l4,"handleHydrationError");function d4(n){const e=tt();e&&e.on("beforeAddBreadcrumb",t=>h4(n,t))}u(d4,"handleBreadcrumbs");function h4(n,e){if(!n.isEnabled()||!K2(e))return;const t=p4(e);t&&md(n,t)}u(h4,"beforeAddBreadcrumb");function p4(n){return!K2(n)||["fetch","xhr","sentry.event","sentry.transaction"].includes(n.category)||n.category.startsWith("ui.")?null:n.category==="console"?f4(n):Lr(n)}u(p4,"normalizeBreadcrumb");function f4(n){const e=n.data&&n.data.arguments;if(!Array.isArray(e)||e.length===0)return Lr(n);let t=!1;const s=e.map(r=>{if(!r)return r;if(typeof r=="string")return r.length>np?(t=!0,`${r.slice(0,np)}…`):r;if(typeof r=="object")try{const o=Rr(r,7);return JSON.stringify(o).length>np?(t=!0,`${JSON.stringify(o,null,2).slice(0,np)}…`):o}catch{}return r});return Lr({...n,data:{...n.data,arguments:s,...t?{_meta:{warnings:["CONSOLE_ARG_TRUNCATED"]}}:{}}})}u(f4,"normalizeConsoleBreadcrumb");function K2(n){return!!n.category}u(K2,"isBreadcrumbWithCategory");function m4(n,e){return n.type||!n.exception||!n.exception.values||!n.exception.values.length?!1:!!(e.originalException&&e.originalException.__rrweb__)}u(m4,"isRrwebError");function g4(n,e){n.triggerUserActivity(),n.addUpdate(()=>e.timestamp?(n.throttledAddEvent({type:Ye.Custom,timestamp:e.timestamp*1e3,data:{tag:"breadcrumb",payload:{timestamp:e.timestamp,type:"default",category:"sentry.feedback",data:{feedbackId:e.event_id}}}}),!1):!0)}u(g4,"addFeedbackBreadcrumb");function y4(n,e){return n.recordingMode!=="buffer"||e.message===B0||!e.exception||e.type?!1:V2(n.getOptions().errorSampleRate)}u(y4,"shouldSampleForBufferEvent");function b4(n){return Object.assign((e,t)=>!n.isEnabled()||n.isPaused()?e:o4(e)?(delete e.breadcrumbs,e):!Q0(e)&&!rx(e)&&!qC(e)||!n.checkAndHandleExpiredSession()?e:qC(e)?(n.flush(),e.contexts.feedback.replay_id=n.getSessionId(),g4(n,e),e):m4(e,t)&&!n.getOptions()._experiments.captureExceptions?(Re&&Fe.log("Ignoring error from rrweb internals",e),null):((y4(n,e)||n.recordingMode==="session")&&(e.tags={...e.tags,replayId:n.getSessionId()}),e),{id:"Replay"})}u(b4,"handleGlobalEventListener");function pm(n,e){return e.map(({type:t,start:s,end:r,name:o,data:i})=>{const a=n.throttledAddEvent({type:Ye.Custom,timestamp:s,data:{tag:"performanceSpan",payload:{op:t,description:o,startTimestamp:s,endTimestamp:r,data:i}}});return typeof a=="string"?Promise.resolve(null):a})}u(pm,"createPerformanceSpans");function x4(n){const{from:e,to:t}=n,s=Date.now()/1e3;return{type:"navigation.push",start:s,end:s,name:t,data:{previous:e}}}u(x4,"handleHistory");function w4(n){return e=>{if(!n.isEnabled())return;const t=x4(e);t!==null&&(n.getContext().urls.push(t.name),n.triggerUserActivity(),n.addUpdate(()=>(pm(n,[t]),!1)))}}u(w4,"handleHistorySpanListener");function S4(n,e){return Re&&n.getOptions()._experiments.traceInternals?!1:qM(e,tt())}u(S4,"shouldFilterRequest");function X2(n,e){n.isEnabled()&&e!==null&&(S4(n,e.name)||n.addUpdate(()=>(pm(n,[e]),!0)))}u(X2,"addNetworkBreadcrumb");function fm(n){if(!n)return;const e=new TextEncoder;try{if(typeof n=="string")return e.encode(n).length;if(n instanceof URLSearchParams)return e.encode(n.toString()).length;if(n instanceof FormData){const t=Z2(n);return e.encode(t).length}if(n instanceof Blob)return n.size;if(n instanceof ArrayBuffer)return n.byteLength}catch{}}u(fm,"getBodySize");function Y2(n){if(!n)return;const e=parseInt(n,10);return isNaN(e)?void 0:e}u(Y2,"parseContentLengthHeader");function Q2(n){try{if(typeof n=="string")return[n];if(n instanceof URLSearchParams)return[n.toString()];if(n instanceof FormData)return[Z2(n)];if(!n)return[void 0]}catch(e){return Re&&Fe.exception(e,"Failed to serialize body",n),[void 0,"BODY_PARSE_ERROR"]}return Re&&Fe.info("Skipping network body because of body type",n),[void 0,"UNPARSEABLE_BODY_TYPE"]}u(Q2,"getBodyString");function df(n,e){if(!n)return{headers:{},size:void 0,_meta:{warnings:[e]}};const t={...n._meta},s=t.warnings||[];return t.warnings=[...s,e],n._meta=t,n}u(df,"mergeWarning");function J2(n,e){if(!e)return null;const{startTimestamp:t,endTimestamp:s,url:r,method:o,statusCode:i,request:a,response:c}=e;return{type:n,start:t/1e3,end:s/1e3,name:r,data:yn({method:o,statusCode:i,request:a,response:c})}}u(J2,"makeNetworkReplayBreadcrumb");function Pl(n){return{headers:{},size:n,_meta:{warnings:["URL_SKIPPED"]}}}u(Pl,"buildSkippedNetworkRequestOrResponse");function Vo(n,e,t){if(!e&&Object.keys(n).length===0)return;if(!e)return{headers:n};if(!t)return{headers:n,size:e};const s={headers:n,size:e},{body:r,warnings:o}=C4(t);return s.body=r,o&&o.length>0&&(s._meta={warnings:o}),s}u(Vo,"buildNetworkRequestOrResponse");function ox(n,e){return Object.entries(n).reduce((t,[s,r])=>{const o=s.toLowerCase();return e.includes(o)&&n[s]&&(t[o]=r),t},{})}u(ox,"getAllowedHeaders");function Z2(n){return new URLSearchParams(n).toString()}u(Z2,"_serializeFormData");function C4(n){if(!n||typeof n!="string")return{body:n};const e=n.length>EC,t=v4(n);if(e){const s=n.slice(0,EC);return t?{body:s,warnings:["MAYBE_JSON_TRUNCATED"]}:{body:`${s}…`,warnings:["TEXT_TRUNCATED"]}}if(t)try{return{body:JSON.parse(n)}}catch{}return{body:n}}u(C4,"normalizeNetworkBody");function v4(n){const e=n[0],t=n[n.length-1];return e==="["&&t==="]"||e==="{"&&t==="}"}u(v4,"_strIsProbablyJson");function hf(n,e){const t=I4(n);return Wo(t,e)}u(hf,"urlMatches");function I4(n,e=Tt.document.baseURI){if(n.startsWith("http://")||n.startsWith("https://")||n.startsWith(Tt.location.origin))return n;const t=new URL(n,e);if(t.origin!==new URL(e).origin)return n;const s=t.href;return!n.endsWith("/")&&s.endsWith("/")?s.slice(0,-1):s}u(I4,"getFullUrl");async function k4(n,e,t){try{const s=await N4(n,e,t),r=J2("resource.fetch",s);X2(t.replay,r)}catch(s){Re&&Fe.exception(s,"Failed to capture fetch breadcrumb")}}u(k4,"captureFetchBreadcrumbToReplay");function $4(n,e){const{input:t,response:s}=e,r=t?eN(t):void 0,o=fm(r),i=s?Y2(s.headers.get("content-length")):void 0;o!==void 0&&(n.data.request_body_size=o),i!==void 0&&(n.data.response_body_size=i)}u($4,"enrichFetchBreadcrumb");async function N4(n,e,t){const s=Date.now(),{startTimestamp:r=s,endTimestamp:o=s}=e,{url:i,method:a,status_code:c=0,request_body_size:l,response_body_size:d}=n.data,h=hf(i,t.networkDetailAllowUrls)&&!hf(i,t.networkDetailDenyUrls),p=h?T4(t,e.input,l):Pl(l),f=await E4(h,t,e.response,d);return{startTimestamp:r,endTimestamp:o,url:i,method:a,statusCode:c,request:p,response:f}}u(N4,"_prepareFetchData");function T4({networkCaptureBodies:n,networkRequestHeaders:e},t,s){const r=t?A4(t,e):{};if(!n)return Vo(r,s,void 0);const o=eN(t),[i,a]=Q2(o),c=Vo(r,s,i);return a?df(c,a):c}u(T4,"_getRequestInfo");async function E4(n,{networkCaptureBodies:e,networkResponseHeaders:t},s,r){if(!n&&r!==void 0)return Pl(r);const o=s?tN(s.headers,t):{};if(!s||!e&&r!==void 0)return Vo(o,r,void 0);const[i,a]=await R4(s),c=_4(i,{networkCaptureBodies:e,responseBodySize:r,captureDetails:n,headers:o});return a?df(c,a):c}u(E4,"_getResponseInfo");function _4(n,{networkCaptureBodies:e,responseBodySize:t,captureDetails:s,headers:r}){try{const o=n&&n.length&&t===void 0?fm(n):t;return s?e?Vo(r,o,n):Vo(r,o,void 0):Pl(o)}catch(o){return Re&&Fe.exception(o,"Failed to serialize response body"),Vo(r,t,void 0)}}u(_4,"getResponseData");async function R4(n){const e=D4(n);if(!e)return[void 0,"BODY_PARSE_ERROR"];try{return[await O4(e)]}catch(t){return t instanceof Error&&t.message.indexOf("Timeout")>-1?(Re&&Fe.warn("Parsing text body from response timed out"),[void 0,"BODY_PARSE_TIMEOUT"]):(Re&&Fe.exception(t,"Failed to get text body from response"),[void 0,"BODY_PARSE_ERROR"])}}u(R4,"_parseFetchResponseBody");function eN(n=[]){if(!(n.length!==2||typeof n[1]!="object"))return n[1].body}u(eN,"_getFetchRequestArgBody");function tN(n,e){const t={};return e.forEach(s=>{n.get(s)&&(t[s]=n.get(s))}),t}u(tN,"getAllHeaders");function A4(n,e){return n.length===1&&typeof n[0]!="string"?KC(n[0],e):n.length===2?KC(n[1],e):{}}u(A4,"getRequestHeaders");function KC(n,e){if(!n)return{};const t=n.headers;return t?t instanceof Headers?tN(t,e):Array.isArray(t)?{}:ox(t,e):{}}u(KC,"getHeadersFromOptions");function D4(n){try{return n.clone()}catch(e){Re&&Fe.exception(e,"Failed to clone response body")}}u(D4,"_tryCloneResponse");function O4(n){return new Promise((e,t)=>{const s=gc(()=>t(new Error("Timeout while trying to read response body")),500);F4(n).then(r=>e(r),r=>t(r)).finally(()=>clearTimeout(s))})}u(O4,"_tryGetResponseText");async function F4(n){return await n.text()}u(F4,"_getResponseText");async function P4(n,e,t){try{const s=M4(n,e,t),r=J2("resource.xhr",s);X2(t.replay,r)}catch(s){Re&&Fe.exception(s,"Failed to capture xhr breadcrumb")}}u(P4,"captureXhrBreadcrumbToReplay");function L4(n,e){const{xhr:t,input:s}=e;if(!t)return;const r=fm(s),o=t.getResponseHeader("content-length")?Y2(t.getResponseHeader("content-length")):V4(t.response,t.responseType);r!==void 0&&(n.data.request_body_size=r),o!==void 0&&(n.data.response_body_size=o)}u(L4,"enrichXhrBreadcrumb");function M4(n,e,t){const s=Date.now(),{startTimestamp:r=s,endTimestamp:o=s,input:i,xhr:a}=e,{url:c,method:l,status_code:d=0,request_body_size:h,response_body_size:p}=n.data;if(!c)return null;if(!a||!hf(c,t.networkDetailAllowUrls)||hf(c,t.networkDetailDenyUrls)){const v=Pl(h),k=Pl(p);return{startTimestamp:r,endTimestamp:o,url:c,method:l,statusCode:d,request:v,response:k}}const f=a[Oi],m=f?ox(f.request_headers,t.networkRequestHeaders):{},g=ox(z4(a),t.networkResponseHeaders),[y,b]=t.networkCaptureBodies?Q2(i):[void 0],[x,S]=t.networkCaptureBodies?B4(a):[void 0],w=Vo(m,h,y),C=Vo(g,p,x);return{startTimestamp:r,endTimestamp:o,url:c,method:l,statusCode:d,request:b?df(w,b):w,response:S?df(C,S):C}}u(M4,"_prepareXhrData");function z4(n){const e=n.getAllResponseHeaders();return e?e.split(`\r
`).reduce((t,s)=>{const[r,o]=s.split(": ");return o&&(t[r.toLowerCase()]=o),t},{}):{}}u(z4,"getResponseHeaders");function B4(n){const e=[];try{return[n.responseText]}catch(t){e.push(t)}try{return W4(n.response,n.responseType)}catch(t){e.push(t)}return Re&&Fe.warn("Failed to get xhr response body",...e),[void 0]}u(B4,"_getXhrResponseBody");function W4(n,e){try{if(typeof n=="string")return[n];if(n instanceof Document)return[n.body.outerHTML];if(e==="json"&&n&&typeof n=="object")return[JSON.stringify(n)];if(!n)return[void 0]}catch(t){return Re&&Fe.exception(t,"Failed to serialize body",n),[void 0,"BODY_PARSE_ERROR"]}return Re&&Fe.info("Skipping network body because of body type",n),[void 0,"UNPARSEABLE_BODY_TYPE"]}u(W4,"_parseXhrResponse");function V4(n,e){try{const t=e==="json"&&n&&typeof n=="object"?JSON.stringify(n):n;return fm(t)}catch{return}}u(V4,"_getBodySize");function U4(n){const e=tt();try{const{networkDetailAllowUrls:t,networkDetailDenyUrls:s,networkCaptureBodies:r,networkRequestHeaders:o,networkResponseHeaders:i}=n.getOptions(),a={replay:n,networkDetailAllowUrls:t,networkDetailDenyUrls:s,networkCaptureBodies:r,networkRequestHeaders:o,networkResponseHeaders:i};e&&e.on("beforeAddBreadcrumb",(c,l)=>G4(a,c,l))}catch{}}u(U4,"handleNetworkBreadcrumbs");function G4(n,e,t){if(e.data)try{H4(e)&&q4(t)&&(L4(e,t),P4(e,t,n)),j4(e)&&K4(t)&&($4(e,t),k4(e,t,n))}catch(s){Re&&Fe.exception(s,"Error when enriching network breadcrumb")}}u(G4,"beforeAddNetworkBreadcrumb");function H4(n){return n.category==="xhr"}u(H4,"_isXhrBreadcrumb");function j4(n){return n.category==="fetch"}u(j4,"_isFetchBreadcrumb");function q4(n){return n&&n.xhr}u(q4,"_isXhrHint");function K4(n){return n&&n.response}u(K4,"_isFetchHint");function X4(n){const e=tt();l2(kU(n)),cm(w4(n)),d4(n),U4(n);const t=b4(n);RM(t),e&&(e.on("beforeSendEvent",u4(n)),e.on("afterSendEvent",i4(n)),e.on("createDsc",s=>{const r=n.getSessionId();r&&n.isEnabled()&&n.recordingMode==="session"&&n.checkAndHandleExpiredSession()&&(s.replay_id=r)}),e.on("spanStart",s=>{n.lastActiveSpan=s}),e.on("spanEnd",s=>{n.lastActiveSpan=s}),e.on("beforeSendFeedback",(s,r)=>{const o=n.getSessionId();r&&r.includeReplay&&n.isEnabled()&&o&&s.contexts&&s.contexts.feedback&&(s.contexts.feedback.replay_id=o)}))}u(X4,"addGlobalListeners");async function Y4(n){try{return Promise.all(pm(n,[Q4(Tt.performance.memory)]))}catch{return[]}}u(Y4,"addMemoryEntry");function Q4(n){const{jsHeapSizeLimit:e,totalJSHeapSize:t,usedJSHeapSize:s}=n,r=Date.now()/1e3;return{type:"memory",name:"memory",start:r,end:r,data:{memory:{jsHeapSizeLimit:e,totalJSHeapSize:t,usedJSHeapSize:s}}}}u(Q4,"createMemoryEntry");function J4(n,e,t){let s,r,o;const i=t&&t.maxWait?Math.max(t.maxWait,e):0;function a(){return c(),s=n(),s}u(a,"invokeFunc");function c(){r!==void 0&&clearTimeout(r),o!==void 0&&clearTimeout(o),r=o=void 0}u(c,"cancelTimers");function l(){return r!==void 0||o!==void 0?a():s}u(l,"flush");function d(){return r&&clearTimeout(r),r=gc(a,e),i&&o===void 0&&(o=gc(a,i)),s}return u(d,"debounced"),d.cancel=c,d.flush=l,d}u(J4,"debounce$1");function Z4(n){let e=!1;return(t,s)=>{if(!n.checkAndHandleExpiredSession()){Re&&Fe.warn("Received replay event after session expired.");return}const r=s||!e;e=!0,n.clickDetector&&wU(n.clickDetector,t),n.addUpdate(()=>{if(n.recordingMode==="buffer"&&r&&n.setInitialState(),!Y0(n,t,r))return!0;if(!r)return!1;const o=n.session;if(tG(n,r),n.recordingMode==="buffer"&&o&&n.eventBuffer){const i=n.eventBuffer.getEarliestTimestamp();i&&(Re&&Fe.info(`Updating session start time to earliest event in buffer to ${new Date(i)}`),o.started=i,n.getOptions().stickySession&&X0(o))}return o&&o.previousSessionId||n.recordingMode==="session"&&n.flush(),!0})}}u(Z4,"getHandleRecordingEmit");function eG(n){const e=n.getOptions();return{type:Ye.Custom,timestamp:Date.now(),data:{tag:"options",payload:{shouldRecordCanvas:n.isRecordingCanvas(),sessionSampleRate:e.sessionSampleRate,errorSampleRate:e.errorSampleRate,useCompressionOption:e.useCompression,blockAllMedia:e.blockAllMedia,maskAllText:e.maskAllText,maskAllInputs:e.maskAllInputs,useCompression:n.eventBuffer?n.eventBuffer.type==="worker":!1,networkDetailHasUrls:e.networkDetailAllowUrls.length>0,networkCaptureBodies:e.networkCaptureBodies,networkRequestHasHeaders:e.networkRequestHeaders.length>0,networkResponseHasHeaders:e.networkResponseHeaders.length>0}}}}u(eG,"createOptionsEvent");function tG(n,e){!e||!n.session||n.session.segmentId!==0||Y0(n,eG(n),!1)}u(tG,"addSettingsEvent");function nG(){const n=vt().getPropagationContext().dsc;n&&delete n.replay_id;const e=On();if(e){const t=ai(e);delete t.replay_id}}u(nG,"resetReplayIdOnDynamicSamplingContext");function sG(n,e,t,s){return pa(S$(n,k0(n),s,t),[[{type:"replay_event"},n],[{type:"replay_recording",length:typeof e=="string"?new TextEncoder().encode(e).length:e.length},e]])}u(sG,"createReplayEnvelope");function rG({recordingData:n,headers:e}){let t;const s=`${JSON.stringify(e)}
`;if(typeof n=="string")t=`${s}${n}`;else{const o=new TextEncoder().encode(s);t=new Uint8Array(o.length+n.length),t.set(o),t.set(n,o.length)}return t}u(rG,"prepareRecordingData");async function oG({client:n,scope:e,replayId:t,event:s}){const r=typeof n._integrations=="object"&&n._integrations!==null&&!Array.isArray(n._integrations)?Object.keys(n._integrations):void 0,o={event_id:t,integrations:r};n.emit("preprocessEvent",s,o);const i=await z$(n.getOptions(),s,o,e,n,Ss());if(!i)return null;i.platform=i.platform||"javascript";const a=n.getSdkMetadata(),{name:c,version:l}=a&&a.sdk||{};return i.sdk={...i.sdk,name:c||"sentry.javascript.unknown",version:l||"0.0.0"},i}u(oG,"prepareReplayEvent");async function iG({recordingData:n,replayId:e,segmentId:t,eventContext:s,timestamp:r,session:o}){const i=rG({recordingData:n,headers:{segment_id:t}}),{urls:a,errorIds:c,traceIds:l,initialTimestamp:d}=s,h=tt(),p=vt(),f=h&&h.getTransport(),m=h&&h.getDsn();if(!h||!f||!m||!o.sampled)return bo({});const g={type:BW,replay_start_timestamp:d/1e3,timestamp:r/1e3,error_ids:c,trace_ids:l,urls:a,replay_id:e,segment_id:t,replay_type:o.sampled},y=await oG({scope:p,client:h,replayId:e,event:g});if(!y)return h.recordDroppedEvent("event_processor","replay",g),Re&&Fe.info("An event processor returned `null`, will not send event."),bo({});delete y.sdkProcessingMetadata;const b=sG(y,i,m,h.getOptions().tunnel);let x;try{x=await f.send(b)}catch(w){const C=new Error(B0);try{C.cause=w}catch{}throw C}if(typeof x.statusCode=="number"&&(x.statusCode<200||x.statusCode>=300))throw new nN(x.statusCode);const S=v$({},x);if(C$(S,"replay"))throw new J0(S);return x}u(iG,"sendReplayRequest");class nN extends Error{static{u(this,"TransportStatusCodeError")}constructor(e){super(`Transport returned status code ${e}`)}}class J0 extends Error{static{u(this,"RateLimitError")}constructor(e){super("Rate limit hit"),this.rateLimits=e}}async function sN(n,e={count:0,interval:jW}){const{recordingData:t,onError:s}=n;if(t.length)try{return await iG(n),!0}catch(r){if(r instanceof nN||r instanceof J0)throw r;if(A0("Replays",{_retryCount:e.count}),s&&s(r),e.count>=qW){const o=new Error(`${B0} - max retries exceeded`);try{o.cause=r}catch{}throw o}return e.interval*=++e.count,new Promise((o,i)=>{gc(async()=>{try{await sN(n,e),o(!0)}catch(a){i(a)}},e.interval)})}}u(sN,"sendReplay");const rN="__THROTTLED",aG="__SKIPPED";function cG(n,e,t){const s=new Map,r=u(a=>{const c=a-t;s.forEach((l,d)=>{d<c&&s.delete(d)})},"_cleanup"),o=u(()=>[...s.values()].reduce((a,c)=>a+c,0),"_getTotalCount");let i=!1;return(...a)=>{const c=Math.floor(Date.now()/1e3);if(r(c),o()>=e){const d=i;return i=!0,d?aG:rN}i=!1;const l=s.get(c)||0;return s.set(c,l+1),n(...a)}}u(cG,"throttle");class Fo{static{u(this,"ReplayContainer")}constructor({options:e,recordingOptions:t}){Fo.prototype.__init.call(this),Fo.prototype.__init2.call(this),Fo.prototype.__init3.call(this),Fo.prototype.__init4.call(this),Fo.prototype.__init5.call(this),Fo.prototype.__init6.call(this),this.eventBuffer=null,this.performanceEntries=[],this.replayPerformanceEntries=[],this.recordingMode="session",this.timeouts={sessionIdlePause:WW,sessionIdleExpire:VW},this._lastActivity=Date.now(),this._isEnabled=!1,this._isPaused=!1,this._requiresManualStart=!1,this._hasInitializedCoreListeners=!1,this._context={errorIds:new Set,traceIds:new Set,urls:[],initialTimestamp:Date.now(),initialUrl:""},this._recordingOptions=t,this._options=e,this._debouncedFlush=J4(()=>this._flush(),this._options.flushMinDelay,{maxWait:this._options.flushMaxDelay}),this._throttledAddEvent=cG((i,a)=>s4(this,i,a),300,5);const{slowClickTimeout:s,slowClickIgnoreSelectors:r}=this.getOptions(),o=s?{threshold:Math.min(KW,s),timeout:s,scrollTimeout:XW,ignoreSelector:r?r.join(","):""}:void 0;if(o&&(this.clickDetector=new gU(this,o)),Re){const i=e._experiments;Fe.setConfig({captureExceptions:!!i.captureExceptions,traceInternals:!!i.traceInternals})}}getContext(){return this._context}isEnabled(){return this._isEnabled}isPaused(){return this._isPaused}isRecordingCanvas(){return!!this._canvas}getOptions(){return this._options}handleException(e){Re&&Fe.exception(e),this._options.onError&&this._options.onError(e)}initializeSampling(e){const{errorSampleRate:t,sessionSampleRate:s}=this._options,r=t<=0&&s<=0;if(this._requiresManualStart=r,!r){if(this._initializeSessionForSampling(e),!this.session){Re&&Fe.exception(new Error("Unable to initialize and create session"));return}this.session.sampled!==!1&&(this.recordingMode=this.session.sampled==="buffer"&&this.session.segmentId===0?"buffer":"session",Re&&Fe.infoTick(`Starting replay in ${this.recordingMode} mode`),this._initializeRecording())}}start(){if(this._isEnabled&&this.recordingMode==="session"){Re&&Fe.info("Recording is already in progress");return}if(this._isEnabled&&this.recordingMode==="buffer"){Re&&Fe.info("Buffering is in progress, call `flush()` to save the replay");return}Re&&Fe.infoTick("Starting replay in session mode"),this._updateUserActivity();const e=Ky({maxReplayDuration:this._options.maxReplayDuration,sessionIdleExpire:this.timeouts.sessionIdleExpire},{stickySession:this._options.stickySession,sessionSampleRate:1,allowBuffering:!1});this.session=e,this._initializeRecording()}startBuffering(){if(this._isEnabled){Re&&Fe.info("Buffering is in progress, call `flush()` to save the replay");return}Re&&Fe.infoTick("Starting replay in buffer mode");const e=Ky({sessionIdleExpire:this.timeouts.sessionIdleExpire,maxReplayDuration:this._options.maxReplayDuration},{stickySession:this._options.stickySession,sessionSampleRate:0,allowBuffering:!0});this.session=e,this.recordingMode="buffer",this._initializeRecording()}startRecording(){try{const e=this._canvas;this._stopRecording=uo({...this._recordingOptions,...this.recordingMode==="buffer"?{checkoutEveryNms:HW}:this._options._experiments.continuousCheckout&&{checkoutEveryNms:Math.max(36e4,this._options._experiments.continuousCheckout)},emit:Z4(this),onMutation:this._onMutationHandler,...e?{recordCanvas:e.recordCanvas,getCanvasManager:e.getCanvasManager,sampling:e.sampling,dataURLOptions:e.dataURLOptions}:{}})}catch(e){this.handleException(e)}}stopRecording(){try{return this._stopRecording&&(this._stopRecording(),this._stopRecording=void 0),!0}catch(e){return this.handleException(e),!1}}async stop({forceFlush:e=!1,reason:t}={}){if(this._isEnabled){this._isEnabled=!1;try{Re&&Fe.info(`Stopping Replay${t?` triggered by ${t}`:""}`),nG(),this._removeListeners(),this.stopRecording(),this._debouncedFlush.cancel(),e&&await this._flush({force:!0}),this.eventBuffer&&this.eventBuffer.destroy(),this.eventBuffer=null,JU(this)}catch(s){this.handleException(s)}}}pause(){this._isPaused||(this._isPaused=!0,this.stopRecording(),Re&&Fe.info("Pausing replay"))}resume(){!this._isPaused||!this._checkSession()||(this._isPaused=!1,this.startRecording(),Re&&Fe.info("Resuming replay"))}async sendBufferedReplayOrFlush({continueRecording:e=!0}={}){if(this.recordingMode==="session")return this.flushImmediate();const t=Date.now();Re&&Fe.info("Converting buffer to session"),await this.flushImmediate();const s=this.stopRecording();!e||!s||this.recordingMode!=="session"&&(this.recordingMode="session",this.session&&(this._updateUserActivity(t),this._updateSessionActivity(t),this._maybeSaveSession()),this.startRecording())}addUpdate(e){const t=e();this.recordingMode!=="buffer"&&t!==!0&&this._debouncedFlush()}triggerUserActivity(){if(this._updateUserActivity(),!this._stopRecording){if(!this._checkSession())return;this.resume();return}this.checkAndHandleExpiredSession(),this._updateSessionActivity()}updateUserActivity(){this._updateUserActivity(),this._updateSessionActivity()}conditionalFlush(){return this.recordingMode==="buffer"?Promise.resolve():this.flushImmediate()}flush(){return this._debouncedFlush()}flushImmediate(){return this._debouncedFlush(),this._debouncedFlush.flush()}cancelFlush(){this._debouncedFlush.cancel()}getSessionId(){return this.session&&this.session.id}checkAndHandleExpiredSession(){if(this._lastActivity&&sx(this._lastActivity,this.timeouts.sessionIdlePause)&&this.session&&this.session.sampled==="session"){this.pause();return}return!!this._checkSession()}setInitialState(){const e=`${Tt.location.pathname}${Tt.location.hash}${Tt.location.search}`,t=`${Tt.location.origin}${e}`;this.performanceEntries=[],this.replayPerformanceEntries=[],this._clearContext(),this._context.initialUrl=t,this._context.initialTimestamp=Date.now(),this._context.urls.push(t)}throttledAddEvent(e,t){const s=this._throttledAddEvent(e,t);if(s===rN){const r=Lr({category:"replay.throttled"});this.addUpdate(()=>!Y0(this,{type:uU,timestamp:r.timestamp||0,data:{tag:"breadcrumb",payload:r,metric:!0}}))}return s}getCurrentRoute(){const e=this.lastActiveSpan||On(),t=e&&An(e),r=(t&&dt(t).data||{})[io];if(!(!t||!r||!["route","custom"].includes(r)))return dt(t).description}_initializeRecording(){this.setInitialState(),this._updateSessionActivity(),this.eventBuffer=XU({useCompression:this._options.useCompression,workerUrl:this._options.workerUrl}),this._removeListeners(),this._addListeners(),this._isEnabled=!0,this._isPaused=!1,this.startRecording()}_initializeSessionForSampling(e){const t=this._options.errorSampleRate>0,s=Ky({sessionIdleExpire:this.timeouts.sessionIdleExpire,maxReplayDuration:this._options.maxReplayDuration,previousSessionId:e},{stickySession:this._options.stickySession,sessionSampleRate:this._options.sessionSampleRate,allowBuffering:t});this.session=s}_checkSession(){if(!this.session)return!1;const e=this.session;return H2(e,{sessionIdleExpire:this.timeouts.sessionIdleExpire,maxReplayDuration:this._options.maxReplayDuration})?(this._refreshSession(e),!1):!0}async _refreshSession(e){this._isEnabled&&(await this.stop({reason:"refresh session"}),this.initializeSampling(e.id))}_addListeners(){try{Tt.document.addEventListener("visibilitychange",this._handleVisibilityChange),Tt.addEventListener("blur",this._handleWindowBlur),Tt.addEventListener("focus",this._handleWindowFocus),Tt.addEventListener("keydown",this._handleKeyboardEvent),this.clickDetector&&this.clickDetector.addListeners(),this._hasInitializedCoreListeners||(X4(this),this._hasInitializedCoreListeners=!0)}catch(e){this.handleException(e)}this._performanceCleanupCallback=UU(this)}_removeListeners(){try{Tt.document.removeEventListener("visibilitychange",this._handleVisibilityChange),Tt.removeEventListener("blur",this._handleWindowBlur),Tt.removeEventListener("focus",this._handleWindowFocus),Tt.removeEventListener("keydown",this._handleKeyboardEvent),this.clickDetector&&this.clickDetector.removeListeners(),this._performanceCleanupCallback&&this._performanceCleanupCallback()}catch(e){this.handleException(e)}}__init(){this._handleVisibilityChange=()=>{Tt.document.visibilityState==="visible"?this._doChangeToForegroundTasks():this._doChangeToBackgroundTasks()}}__init2(){this._handleWindowBlur=()=>{const e=Lr({category:"ui.blur"});this._doChangeToBackgroundTasks(e)}}__init3(){this._handleWindowFocus=()=>{const e=Lr({category:"ui.focus"});this._doChangeToForegroundTasks(e)}}__init4(){this._handleKeyboardEvent=e=>{EU(this,e)}}_doChangeToBackgroundTasks(e){!this.session||G2(this.session,{maxReplayDuration:this._options.maxReplayDuration,sessionIdleExpire:this.timeouts.sessionIdleExpire})||(e&&this._createCustomBreadcrumb(e),this.conditionalFlush())}_doChangeToForegroundTasks(e){if(!this.session)return;if(!this.checkAndHandleExpiredSession()){Re&&Fe.info("Document has become active, but session has expired");return}e&&this._createCustomBreadcrumb(e)}_updateUserActivity(e=Date.now()){this._lastActivity=e}_updateSessionActivity(e=Date.now()){this.session&&(this.session.lastActivity=e,this._maybeSaveSession())}_createCustomBreadcrumb(e){this.addUpdate(()=>{this.throttledAddEvent({type:Ye.Custom,timestamp:e.timestamp||0,data:{tag:"breadcrumb",payload:e}})})}_addPerformanceEntries(){let e=DU(this.performanceEntries).concat(this.replayPerformanceEntries);if(this.performanceEntries=[],this.replayPerformanceEntries=[],this._requiresManualStart){const t=this._context.initialTimestamp/1e3;e=e.filter(s=>s.start>=t)}return Promise.all(pm(this,e))}_clearContext(){this._context.errorIds.clear(),this._context.traceIds.clear(),this._context.urls=[]}_updateInitialTimestampFromEventBuffer(){const{session:e,eventBuffer:t}=this;if(!e||!t||this._requiresManualStart||e.segmentId)return;const s=t.getEarliestTimestamp();s&&s<this._context.initialTimestamp&&(this._context.initialTimestamp=s)}_popEventContext(){const e={initialTimestamp:this._context.initialTimestamp,initialUrl:this._context.initialUrl,errorIds:Array.from(this._context.errorIds),traceIds:Array.from(this._context.traceIds),urls:this._context.urls};return this._clearContext(),e}async _runFlush(){const e=this.getSessionId();if(!this.session||!this.eventBuffer||!e){Re&&Fe.error("No session or eventBuffer found to flush.");return}if(await this._addPerformanceEntries(),!(!this.eventBuffer||!this.eventBuffer.hasEvents)&&(await Y4(this),!!this.eventBuffer&&e===this.getSessionId()))try{this._updateInitialTimestampFromEventBuffer();const t=Date.now();if(t-this._context.initialTimestamp>this._options.maxReplayDuration+3e4)throw new Error("Session is too long, not sending replay");const s=this._popEventContext(),r=this.session.segmentId++;this._maybeSaveSession();const o=await this.eventBuffer.finish();await sN({replayId:e,recordingData:o,segmentId:r,eventContext:s,session:this.session,timestamp:t,onError:i=>this.handleException(i)})}catch(t){this.handleException(t),this.stop({reason:"sendReplay"});const s=tt();if(s){const r=t instanceof J0?"ratelimit_backoff":"send_error";s.recordDroppedEvent(r,"replay")}}}__init5(){this._flush=async({force:e=!1}={})=>{if(!this._isEnabled&&!e)return;if(!this.checkAndHandleExpiredSession()){Re&&Fe.error("Attempting to finish replay event after session expired.");return}if(!this.session)return;const t=this.session.started,r=Date.now()-t;this._debouncedFlush.cancel();const o=r<this._options.minReplayDuration,i=r>this._options.maxReplayDuration+5e3;if(o||i){Re&&Fe.info(`Session duration (${Math.floor(r/1e3)}s) is too ${o?"short":"long"}, not sending replay.`),o&&this._debouncedFlush();return}const a=this.eventBuffer;a&&this.session.segmentId===0&&!a.hasCheckout&&Re&&Fe.info("Flushing initial segment without checkout.");const c=!!this._flushLock;this._flushLock||(this._flushLock=this._runFlush());try{await this._flushLock}catch(l){this.handleException(l)}finally{this._flushLock=void 0,c&&this._debouncedFlush()}}}_maybeSaveSession(){this.session&&this._options.stickySession&&X0(this.session)}__init6(){this._onMutationHandler=e=>{const t=e.length,s=this._options.mutationLimit,r=this._options.mutationBreadcrumbLimit,o=s&&t>s;if(t>r||o){const i=Lr({category:"replay.mutations",data:{count:t,limit:o}});this._createCustomBreadcrumb(i)}return o?(this.stop({reason:"mutationLimit",forceFlush:this.recordingMode==="session"}),!1):!0}}}function ol(n,e){return[...n,...e].join(",")}u(ol,"getOption");function uG({mask:n,unmask:e,block:t,unblock:s,ignore:r}){const o=['base[href="/"]'],i=ol(n,[".sentry-mask","[data-sentry-mask]"]),a=ol(e,[]);return{maskTextSelector:i,unmaskTextSelector:a,blockSelector:ol(t,[".sentry-block","[data-sentry-block]",...o]),unblockSelector:ol(s,[]),ignoreSelector:ol(r,[".sentry-ignore","[data-sentry-ignore]",'input[type="file"]'])}}u(uG,"getPrivacyOptions");function lG({el:n,key:e,maskAttributes:t,maskAllText:s,privacyOptions:r,value:o}){return!s||r.unmaskTextSelector&&n.matches(r.unmaskTextSelector)?o:t.includes(e)||e==="value"&&n.tagName==="INPUT"&&["submit","button"].includes(n.getAttribute("type")||"")?o.replace(/[\S]/g,"*"):o}u(lG,"maskAttribute");const XC='img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]',dG=["content-length","content-type","accept"];let YC=!1;const hG=u(n=>new mm(n),"replayIntegration");class mm{static{u(this,"Replay")}static __initStatic(){this.id="Replay"}constructor({flushMinDelay:e=UW,flushMaxDelay:t=GW,minReplayDuration:s=YW,maxReplayDuration:r=_C,stickySession:o=!0,useCompression:i=!0,workerUrl:a,_experiments:c={},maskAllText:l=!0,maskAllInputs:d=!0,blockAllMedia:h=!0,mutationBreadcrumbLimit:p=750,mutationLimit:f=1e4,slowClickTimeout:m=7e3,slowClickIgnoreSelectors:g=[],networkDetailAllowUrls:y=[],networkDetailDenyUrls:b=[],networkCaptureBodies:x=!0,networkRequestHeaders:S=[],networkResponseHeaders:w=[],mask:C=[],maskAttributes:v=["title","placeholder"],unmask:k=[],block:$=[],unblock:T=[],ignore:E=[],maskFn:R,beforeAddRecordingEvent:O,beforeErrorSampling:L,onError:z}={}){this.name=mm.id;const W=uG({mask:C,unmask:k,block:$,unblock:T,ignore:E});if(this._recordingOptions={maskAllInputs:d,maskAllText:l,maskInputOptions:{password:!0},maskTextFn:R,maskInputFn:R,maskAttributeFn:(A,G,V)=>lG({maskAttributes:v,maskAllText:l,privacyOptions:W,key:A,value:G,el:V}),...W,slimDOMOptions:"all",inlineStylesheet:!0,inlineImages:!1,collectFonts:!0,errorHandler:A=>{try{A.__rrweb__=!0}catch{}}},this._initialOptions={flushMinDelay:e,flushMaxDelay:t,minReplayDuration:Math.min(s,QW),maxReplayDuration:Math.min(r,_C),stickySession:o,useCompression:i,workerUrl:a,blockAllMedia:h,maskAllInputs:d,maskAllText:l,mutationBreadcrumbLimit:p,mutationLimit:f,slowClickTimeout:m,slowClickIgnoreSelectors:g,networkDetailAllowUrls:y,networkDetailDenyUrls:b,networkCaptureBodies:x,networkRequestHeaders:QC(S),networkResponseHeaders:QC(w),beforeAddRecordingEvent:O,beforeErrorSampling:L,onError:z,_experiments:c},this._initialOptions.blockAllMedia&&(this._recordingOptions.blockSelector=this._recordingOptions.blockSelector?`${this._recordingOptions.blockSelector},${XC}`:XC),this._isInitialized&&j1())throw new Error("Multiple Sentry Session Replay instances are not supported");this._isInitialized=!0}get _isInitialized(){return YC}set _isInitialized(e){YC=e}afterAllSetup(e){!j1()||this._replay||(this._setup(e),this._initialize(e))}start(){this._replay&&this._replay.start()}startBuffering(){this._replay&&this._replay.startBuffering()}stop(){return this._replay?this._replay.stop({forceFlush:this._replay.recordingMode==="session"}):Promise.resolve()}flush(e){return this._replay?this._replay.isEnabled()?this._replay.sendBufferedReplayOrFlush(e):(this._replay.start(),Promise.resolve()):Promise.resolve()}getReplayId(){if(!(!this._replay||!this._replay.isEnabled()))return this._replay.getSessionId()}getRecordingMode(){if(!(!this._replay||!this._replay.isEnabled()))return this._replay.recordingMode}_initialize(e){this._replay&&(this._maybeLoadFromReplayCanvasIntegration(e),this._replay.initializeSampling())}_setup(e){const t=pG(this._initialOptions,e);this._replay=new Fo({options:t,recordingOptions:this._recordingOptions})}_maybeLoadFromReplayCanvasIntegration(e){try{const t=e.getIntegrationByName("ReplayCanvas");if(!t)return;this._replay._canvas=t.getOptions()}catch{}}}mm.__initStatic();function pG(n,e){const t=e.getOptions(),s={sessionSampleRate:0,errorSampleRate:0,...yn(n)},r=Zp(t.replaysSessionSampleRate),o=Zp(t.replaysOnErrorSampleRate);return r==null&&o==null&&Fc(()=>{}),r!=null&&(s.sessionSampleRate=r),o!=null&&(s.errorSampleRate=o),s}u(pG,"loadReplayOptionsFromClient");function QC(n){return[...dG,...n.map(e=>e.toLowerCase())]}u(QC,"_getMergedNetworkHeaders");const JC=new WeakMap,Xy=new Map,Op={traceFetch:!0,traceXHR:!0,enableHTTPTimings:!0,trackFetchStreamPerformance:!1};function fG(n,e){const{traceFetch:t,traceXHR:s,trackFetchStreamPerformance:r,shouldCreateSpanForRequest:o,enableHTTPTimings:i,tracePropagationTargets:a}={traceFetch:Op.traceFetch,traceXHR:Op.traceXHR,trackFetchStreamPerformance:Op.trackFetchStreamPerformance,...e},c=typeof o=="function"?o:h=>!0,l=u(h=>bG(h,a),"shouldAttachHeadersWithTargets"),d={};t&&(n.addEventProcessor(h=>(h.type==="transaction"&&h.spans&&h.spans.forEach(p=>{if(p.op==="http.client"){const f=Xy.get(p.span_id);f&&(p.timestamp=f/1e3,Xy.delete(p.span_id))}}),h)),r&&G3(h=>{if(h.response){const p=JC.get(h.response);p&&h.endTimestamp&&Xy.set(p,h.endTimestamp)}}),d$(h=>{const p=wz(h,c,l,d);if(h.response&&h.fetchData.__span&&JC.set(h.response,h.fetchData.__span),p){const f=oN(h.fetchData.url),m=f?Bi(f).host:void 0;p.setAttributes({"http.url":f,"server.address":m})}i&&p&&ZC(p)})),s&&h2(h=>{const p=xG(h,c,l,d);i&&p&&ZC(p)})}u(fG,"instrumentOutgoingRequests");function mG(n){return n.entryType==="resource"&&"initiatorType"in n&&typeof n.nextHopProtocol=="string"&&(n.initiatorType==="fetch"||n.initiatorType==="xmlhttprequest")}u(mG,"isPerformanceResourceTiming");function ZC(n){const{url:e}=dt(n).data||{};if(!e||typeof e!="string")return;const t=mc("resource",({entries:s})=>{s.forEach(r=>{mG(r)&&r.name.endsWith(e)&&(yG(r).forEach(i=>n.setAttribute(...i)),setTimeout(t))})})}u(ZC,"addHTTPTimings");function gG(n){let e="unknown",t="unknown",s="";for(const r of n){if(r==="/"){[e,t]=n.split("/");break}if(!isNaN(Number(r))){e=s==="h"?"http":s,t=n.split(s)[1];break}s+=r}return s===n&&(e=s),{name:e,version:t}}u(gG,"extractNetworkProtocol");function Tr(n=0){return((ss||performance.timeOrigin)+n)/1e3}u(Tr,"getAbsoluteTime");function yG(n){const{name:e,version:t}=gG(n.nextHopProtocol),s=[];return s.push(["network.protocol.version",t],["network.protocol.name",e]),ss?[...s,["http.request.redirect_start",Tr(n.redirectStart)],["http.request.fetch_start",Tr(n.fetchStart)],["http.request.domain_lookup_start",Tr(n.domainLookupStart)],["http.request.domain_lookup_end",Tr(n.domainLookupEnd)],["http.request.connect_start",Tr(n.connectStart)],["http.request.secure_connection_start",Tr(n.secureConnectionStart)],["http.request.connection_end",Tr(n.connectEnd)],["http.request.request_start",Tr(n.requestStart)],["http.request.response_start",Tr(n.responseStart)],["http.request.response_end",Tr(n.responseEnd)]]:s}u(yG,"resourceTimingEntryToSpanData");function bG(n,e){const t=Ve.location&&Ve.location.href;if(t){let s,r;try{s=new URL(n,t),r=new URL(t).origin}catch{return!1}const o=s.origin===r;return e?Wo(s.toString(),e)||o&&Wo(s.pathname,e):o}else{const s=!!n.match(/^\/(?!\/)/);return e?Wo(n,e):s}}u(bG,"shouldAttachHeaders");function xG(n,e,t,s){const r=n.xhr,o=r&&r[Oi];if(!r||r.__sentry_own_request__||!o)return;const i=xo()&&e(o.url);if(n.endTimestamp&&i){const p=r.__sentry_xhr_span_id__;if(!p)return;const f=s[p];f&&o.status_code!==void 0&&($$(f,o.status_code),f.end(),delete s[p]);return}const a=oN(o.url),c=a?Bi(a).host:void 0,l=!!On(),d=i&&l?ci({name:`${o.method} ${o.url}`,attributes:{type:"xhr","http.method":o.method,"http.url":a,url:o.url,"server.address":c,[$n]:"auto.http.browser",[Ki]:"http.client"}}):new Lc;r.__sentry_xhr_span_id__=d.spanContext().spanId,s[r.__sentry_xhr_span_id__]=d;const h=tt();return r.setRequestHeader&&t(o.url)&&h&&wG(r,h,xo()&&l?d:void 0),d}u(xG,"xhrCallback");function wG(n,e,t){const s=vt(),r=Ss(),{traceId:o,spanId:i,sampled:a,dsc:c}={...r.getPropagationContext(),...s.getPropagationContext()},l=t&&xo()?E$(t):I0(o,i,a),d=w$(c||(t?ai(t):im(o,e)));SG(n,l,d)}u(wG,"addTracingHeadersToXhrRequest");function SG(n,e,t){try{n.setRequestHeader("sentry-trace",e),t&&n.setRequestHeader(Ha,t)}catch{}}u(SG,"setHeaderOnXhr");function oN(n){try{return new URL(n,Ve.location.origin).href}catch{return}}u(oN,"getFullURL");function CG(){Ve&&Ve.document?Ve.document.addEventListener("visibilitychange",()=>{const n=On();if(!n)return;const e=An(n);if(Ve.document.hidden&&e){const t="cancelled",{op:s,status:r}=dt(e);gr&&ae.log(`[Tracing] Transaction: ${t} -> since tab moved to the background, op: ${s}`),r||e.setStatus({code:vn,message:t}),e.setAttribute("sentry.cancellation_reason","document.hidden"),e.end()}}):gr&&ae.warn("[Tracing] Could not set up background tab detection due to lack of global document")}u(CG,"registerBackgroundTabDetection");const vG="BrowserTracing",IG={..._p,instrumentNavigation:!0,instrumentPageLoad:!0,markBackgroundSpan:!0,enableLongTask:!0,enableLongAnimationFrame:!0,enableInp:!0,_experiments:{},...Op},kG=u((n={})=>{jL();const{enableInp:e,enableLongTask:t,enableLongAnimationFrame:s,_experiments:{enableInteractions:r,enableStandaloneClsSpans:o},beforeStartSpan:i,idleTimeout:a,finalTimeout:c,childSpanTimeout:l,markBackgroundSpan:d,traceFetch:h,traceXHR:p,trackFetchStreamPerformance:f,shouldCreateSpanForRequest:m,enableHTTPTimings:g,instrumentPageLoad:y,instrumentNavigation:b}={...IG,...n},x=bB({recordClsStandaloneSpans:o||!1});e&&VB(),s&&ot.PerformanceObserver&&PerformanceObserver.supportedEntryTypes&&PerformanceObserver.supportedEntryTypes.includes("long-animation-frame")?wB():t&&xB(),r&&SB();const S={name:void 0,source:void 0};function w(C,v){const k=v.op==="pageload",$=i?i(v):v,T=$.attributes||{};v.name!==$.name&&(T[io]="custom",$.attributes=T),S.name=$.name,S.source=T[io];const E=M$($,{idleTimeout:a,finalTimeout:c,childSpanTimeout:l,disableAutoFinish:k,beforeSpanEnd:O=>{x(),$B(O,{recordClsOnPageloadSpan:!o})}});function R(){["interactive","complete"].includes(Ve.document.readyState)&&C.emit("idleSpanEnableAutoFinish",E)}return u(R,"emitFinish"),k&&Ve.document&&(Ve.document.addEventListener("readystatechange",()=>{R()}),R()),E}return u(w,"_createRouteSpan"),{name:vG,afterAllSetup(C){let v,k=Ve.location&&Ve.location.href;C.on("startNavigationSpan",$=>{tt()===C&&(v&&!dt(v).timestamp&&(gr&&ae.log(`[Tracing] Finishing current root span with op: ${dt(v).op}`),v.end()),v=w(C,{op:"navigation",...$}))}),C.on("startPageLoadSpan",($,T={})=>{if(tt()!==C)return;v&&!dt(v).timestamp&&(gr&&ae.log(`[Tracing] Finishing current root span with op: ${dt(v).op}`),v.end());const E=T.sentryTrace||ev("sentry-trace"),R=T.baggage||ev("baggage"),O=pL(E,R);vt().setPropagationContext(O),v=w(C,{op:"pageload",...$})}),C.on("spanEnd",$=>{const T=dt($).op;if($!==An($)||T!=="navigation"&&T!=="pageload")return;const E=vt(),R=E.getPropagationContext();E.setPropagationContext({...R,sampled:R.sampled!==void 0?R.sampled:fa($),dsc:R.dsc||ai($)})}),Ve.location&&(y&&$G(C,{name:Ve.location.pathname,startTime:ss?ss/1e3:void 0,attributes:{[io]:"url",[$n]:"auto.pageload.browser"}}),b&&cm(({to:$,from:T})=>{if(T===void 0&&k&&k.indexOf($)!==-1){k=void 0;return}T!==$&&(k=void 0,NG(C,{name:Ve.location.pathname,attributes:{[io]:"url",[$n]:"auto.navigation.browser"}}))})),d&&CG(),r&&TG(a,c,l,S),e&&GB(),fG(C,{traceFetch:h,traceXHR:p,trackFetchStreamPerformance:f,tracePropagationTargets:C.getOptions().tracePropagationTargets,shouldCreateSpanForRequest:m,enableHTTPTimings:g})}}},"browserTracingIntegration");function $G(n,e,t){n.emit("startPageLoadSpan",e,t),vt().setTransactionName(e.name);const s=On();return(s&&dt(s).op)==="pageload"?s:void 0}u($G,"startBrowserTracingPageLoadSpan");function NG(n,e){Ss().setPropagationContext(Qp()),vt().setPropagationContext(Qp()),n.emit("startNavigationSpan",e),vt().setTransactionName(e.name);const t=On();return(t&&dt(t).op)==="navigation"?t:void 0}u(NG,"startBrowserTracingNavigationSpan");function ev(n){const e=N3(`meta[name=${n}]`);return e?e.getAttribute("content"):void 0}u(ev,"getMetaContent");function TG(n,e,t,s){let r;const o=u(()=>{const i="ui.action.click",a=On(),c=a&&An(a);if(c){const l=dt(c).op;if(["navigation","pageload"].includes(l)){gr&&ae.warn(`[Tracing] Did not create ${i} span because a pageload or navigation span is in progress.`);return}}if(r&&(r.setAttribute(zb,"interactionInterrupted"),r.end(),r=void 0),!s.name){gr&&ae.warn(`[Tracing] Did not create ${i} transaction because _latestRouteName is missing.`);return}r=M$({name:s.name,op:i,attributes:{[io]:s.source||"url"}},{idleTimeout:n,finalTimeout:e,childSpanTimeout:t})},"registerInteractionTransaction");Ve.document&&addEventListener("click",o,{once:!1,capture:!0})}u(TG,"registerInteractionListener");var iN={exports:{}},nt={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var gd=Symbol.for("react.element"),EG=Symbol.for("react.portal"),_G=Symbol.for("react.fragment"),RG=Symbol.for("react.strict_mode"),AG=Symbol.for("react.profiler"),DG=Symbol.for("react.provider"),OG=Symbol.for("react.context"),FG=Symbol.for("react.forward_ref"),PG=Symbol.for("react.suspense"),LG=Symbol.for("react.memo"),MG=Symbol.for("react.lazy"),tv=Symbol.iterator;function zG(n){return n===null||typeof n!="object"?null:(n=tv&&n[tv]||n["@@iterator"],typeof n=="function"?n:null)}u(zG,"A");var aN={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},cN=Object.assign,uN={};function Wc(n,e,t){this.props=n,this.context=e,this.refs=uN,this.updater=t||aN}u(Wc,"E");Wc.prototype.isReactComponent={};Wc.prototype.setState=function(n,e){if(typeof n!="object"&&typeof n!="function"&&n!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,n,e,"setState")};Wc.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")};function lN(){}u(lN,"F");lN.prototype=Wc.prototype;function Z0(n,e,t){this.props=n,this.context=e,this.refs=uN,this.updater=t||aN}u(Z0,"G");var ew=Z0.prototype=new lN;ew.constructor=Z0;cN(ew,Wc.prototype);ew.isPureReactComponent=!0;var nv=Array.isArray,dN=Object.prototype.hasOwnProperty,tw={current:null},hN={key:!0,ref:!0,__self:!0,__source:!0};function pN(n,e,t){var s,r={},o=null,i=null;if(e!=null)for(s in e.ref!==void 0&&(i=e.ref),e.key!==void 0&&(o=""+e.key),e)dN.call(e,s)&&!hN.hasOwnProperty(s)&&(r[s]=e[s]);var a=arguments.length-2;if(a===1)r.children=t;else if(1<a){for(var c=Array(a),l=0;l<a;l++)c[l]=arguments[l+2];r.children=c}if(n&&n.defaultProps)for(s in a=n.defaultProps,a)r[s]===void 0&&(r[s]=a[s]);return{$$typeof:gd,type:n,key:o,ref:i,props:r,_owner:tw.current}}u(pN,"M");function BG(n,e){return{$$typeof:gd,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}u(BG,"N");function nw(n){return typeof n=="object"&&n!==null&&n.$$typeof===gd}u(nw,"O");function WG(n){var e={"=":"=0",":":"=2"};return"$"+n.replace(/[=:]/g,function(t){return e[t]})}u(WG,"escape");var sv=/\/+/g;function Yy(n,e){return typeof n=="object"&&n!==null&&n.key!=null?WG(""+n.key):e.toString(36)}u(Yy,"Q");function Fp(n,e,t,s,r){var o=typeof n;(o==="undefined"||o==="boolean")&&(n=null);var i=!1;if(n===null)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(n.$$typeof){case gd:case EG:i=!0}}if(i)return i=n,r=r(i),n=s===""?"."+Yy(i,0):s,nv(r)?(t="",n!=null&&(t=n.replace(sv,"$&/")+"/"),Fp(r,e,t,"",function(l){return l})):r!=null&&(nw(r)&&(r=BG(r,t+(!r.key||i&&i.key===r.key?"":(""+r.key).replace(sv,"$&/")+"/")+n)),e.push(r)),1;if(i=0,s=s===""?".":s+":",nv(n))for(var a=0;a<n.length;a++){o=n[a];var c=s+Yy(o,a);i+=Fp(o,e,t,c,r)}else if(c=zG(n),typeof c=="function")for(n=c.call(n),a=0;!(o=n.next()).done;)o=o.value,c=s+Yy(o,a++),i+=Fp(o,e,t,c,r);else if(o==="object")throw e=String(n),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return i}u(Fp,"R");function ip(n,e,t){if(n==null)return n;var s=[],r=0;return Fp(n,s,"","",function(o){return e.call(t,o,r++)}),s}u(ip,"S");function VG(n){if(n._status===-1){var e=n._result;e=e(),e.then(function(t){(n._status===0||n._status===-1)&&(n._status=1,n._result=t)},function(t){(n._status===0||n._status===-1)&&(n._status=2,n._result=t)}),n._status===-1&&(n._status=0,n._result=e)}if(n._status===1)return n._result.default;throw n._result}u(VG,"T");var as={current:null},Pp={transition:null},UG={ReactCurrentDispatcher:as,ReactCurrentBatchConfig:Pp,ReactCurrentOwner:tw};nt.Children={map:ip,forEach:function(n,e,t){ip(n,function(){e.apply(this,arguments)},t)},count:function(n){var e=0;return ip(n,function(){e++}),e},toArray:function(n){return ip(n,function(e){return e})||[]},only:function(n){if(!nw(n))throw Error("React.Children.only expected to receive a single React element child.");return n}};nt.Component=Wc;nt.Fragment=_G;nt.Profiler=AG;nt.PureComponent=Z0;nt.StrictMode=RG;nt.Suspense=PG;nt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=UG;nt.cloneElement=function(n,e,t){if(n==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+n+".");var s=cN({},n.props),r=n.key,o=n.ref,i=n._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,i=tw.current),e.key!==void 0&&(r=""+e.key),n.type&&n.type.defaultProps)var a=n.type.defaultProps;for(c in e)dN.call(e,c)&&!hN.hasOwnProperty(c)&&(s[c]=e[c]===void 0&&a!==void 0?a[c]:e[c])}var c=arguments.length-2;if(c===1)s.children=t;else if(1<c){a=Array(c);for(var l=0;l<c;l++)a[l]=arguments[l+2];s.children=a}return{$$typeof:gd,type:n.type,key:r,ref:o,props:s,_owner:i}};nt.createContext=function(n){return n={$$typeof:OG,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},n.Provider={$$typeof:DG,_context:n},n.Consumer=n};nt.createElement=pN;nt.createFactory=function(n){var e=pN.bind(null,n);return e.type=n,e};nt.createRef=function(){return{current:null}};nt.forwardRef=function(n){return{$$typeof:FG,render:n}};nt.isValidElement=nw;nt.lazy=function(n){return{$$typeof:MG,_payload:{_status:-1,_result:n},_init:VG}};nt.memo=function(n,e){return{$$typeof:LG,type:n,compare:e===void 0?null:e}};nt.startTransition=function(n){var e=Pp.transition;Pp.transition={};try{n()}finally{Pp.transition=e}};nt.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};nt.useCallback=function(n,e){return as.current.useCallback(n,e)};nt.useContext=function(n){return as.current.useContext(n)};nt.useDebugValue=function(){};nt.useDeferredValue=function(n){return as.current.useDeferredValue(n)};nt.useEffect=function(n,e){return as.current.useEffect(n,e)};nt.useId=function(){return as.current.useId()};nt.useImperativeHandle=function(n,e,t){return as.current.useImperativeHandle(n,e,t)};nt.useInsertionEffect=function(n,e){return as.current.useInsertionEffect(n,e)};nt.useLayoutEffect=function(n,e){return as.current.useLayoutEffect(n,e)};nt.useMemo=function(n,e){return as.current.useMemo(n,e)};nt.useReducer=function(n,e,t){return as.current.useReducer(n,e,t)};nt.useRef=function(n){return as.current.useRef(n)};nt.useState=function(n){return as.current.useState(n)};nt.useSyncExternalStore=function(n,e,t){return as.current.useSyncExternalStore(n,e,t)};nt.useTransition=function(){return as.current.useTransition()};nt.version="18.2.0";iN.exports=nt;var GG=iN.exports;function HG(n){const e={...n};return j$(e,"react"),A0("react",{version:GG.version}),MW(e)}u(HG,"init");var fN=(n=>(n[n.UnsupportedFormat=0]="UnsupportedFormat",n[n.Corrupted=1]="Corrupted",n[n.Unknown=2]="Unknown",n))(fN||{});const jG={0:["CameraMetadataException"],1:["RawDecoderException","TiffParserException","RawParserException"],2:[]};function qG(n){if(!(n instanceof WebAssembly.RuntimeError))return 2;const e=n.message.toLowerCase(),t=Number(Object.entries(jG).find(([s,r])=>r.some(o=>e.includes(o.toLowerCase())))?.[0]);return Number.isInteger(t)?t:2}u(qG,"classifyRawError");var KG={exports:{}};(function(n){var e=Object.prototype.hasOwnProperty,t="~";function s(){}u(s,"Events"),Object.create&&(s.prototype=Object.create(null),new s().__proto__||(t=!1));function r(c,l,d){this.fn=c,this.context=l,this.once=d||!1}u(r,"EE");function o(c,l,d,h,p){if(typeof d!="function")throw new TypeError("The listener must be a function");var f=new r(d,h||c,p),m=t?t+l:l;return c._events[m]?c._events[m].fn?c._events[m]=[c._events[m],f]:c._events[m].push(f):(c._events[m]=f,c._eventsCount++),c}u(o,"addListener");function i(c,l){--c._eventsCount===0?c._events=new s:delete c._events[l]}u(i,"clearEvent");function a(){this._events=new s,this._eventsCount=0}u(a,"EventEmitter"),a.prototype.eventNames=u(function(){var l=[],d,h;if(this._eventsCount===0)return l;for(h in d=this._events)e.call(d,h)&&l.push(t?h.slice(1):h);return Object.getOwnPropertySymbols?l.concat(Object.getOwnPropertySymbols(d)):l},"eventNames"),a.prototype.listeners=u(function(l){var d=t?t+l:l,h=this._events[d];if(!h)return[];if(h.fn)return[h.fn];for(var p=0,f=h.length,m=new Array(f);p<f;p++)m[p]=h[p].fn;return m},"listeners"),a.prototype.listenerCount=u(function(l){var d=t?t+l:l,h=this._events[d];return h?h.fn?1:h.length:0},"listenerCount"),a.prototype.emit=u(function(l,d,h,p,f,m){var g=t?t+l:l;if(!this._events[g])return!1;var y=this._events[g],b=arguments.length,x,S;if(y.fn){switch(y.once&&this.removeListener(l,y.fn,void 0,!0),b){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,d),!0;case 3:return y.fn.call(y.context,d,h),!0;case 4:return y.fn.call(y.context,d,h,p),!0;case 5:return y.fn.call(y.context,d,h,p,f),!0;case 6:return y.fn.call(y.context,d,h,p,f,m),!0}for(S=1,x=new Array(b-1);S<b;S++)x[S-1]=arguments[S];y.fn.apply(y.context,x)}else{var w=y.length,C;for(S=0;S<w;S++)switch(y[S].once&&this.removeListener(l,y[S].fn,void 0,!0),b){case 1:y[S].fn.call(y[S].context);break;case 2:y[S].fn.call(y[S].context,d);break;case 3:y[S].fn.call(y[S].context,d,h);break;case 4:y[S].fn.call(y[S].context,d,h,p);break;default:if(!x)for(C=1,x=new Array(b-1);C<b;C++)x[C-1]=arguments[C];y[S].fn.apply(y[S].context,x)}}return!0},"emit"),a.prototype.on=u(function(l,d,h){return o(this,l,d,h,!1)},"on"),a.prototype.once=u(function(l,d,h){return o(this,l,d,h,!0)},"once"),a.prototype.removeListener=u(function(l,d,h,p){var f=t?t+l:l;if(!this._events[f])return this;if(!d)return i(this,f),this;var m=this._events[f];if(m.fn)m.fn===d&&(!p||m.once)&&(!h||m.context===h)&&i(this,f);else{for(var g=0,y=[],b=m.length;g<b;g++)(m[g].fn!==d||p&&!m[g].once||h&&m[g].context!==h)&&y.push(m[g]);y.length?this._events[f]=y.length===1?y[0]:y:i(this,f)}return this},"removeListener"),a.prototype.removeAllListeners=u(function(l){var d;return l?(d=t?t+l:l,this._events[d]&&i(this,d)):(this._events=new s,this._eventsCount=0),this},"removeAllListeners"),a.prototype.off=a.prototype.removeListener,a.prototype.addListener=a.prototype.on,a.prefixed=t,a.EventEmitter=a,n.exports=a})(KG);const XG=u(n=>qG(n)===fN.Corrupted,"isCorruptedFileError"),rv=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope;HG({enabled:!0,environment:"production",release:"2.2.12+7b192bf",dsn:"https://4890aafc8e8dce271cb8169b5dfde882@o239071.ingest.us.sentry.io/4508455574568960",ignoreErrors:[/Failed to register a ServiceWorker/i,/Operation has been aborted/i,/Unable to preload CSS/i,/Failed to fetch dynamically imported module/i],beforeSend(n){return n.exception?.values?.some(e=>XG(e.value))?null:n},integrations:[m2(),kG({instrumentPageLoad:!rv,instrumentNavigation:!rv}),hG({blockAllMedia:!1,maskAllInputs:!1,maskAllText:!1,networkDetailAllowUrls:[O1.basePaths.projects,O1.basePaths.presets]})],sampleRate:.5,tracesSampleRate:.01,tracePropagationTargets:["localhost",/^https:\/\/polarrnext\.com/,/^https:\/\/polarr-next(.*)\.vercel\.app/],replaysSessionSampleRate:0,replaysOnErrorSampleRate:1});class YG{static{u(this,"Peer")}dependencies={};constructor(){this.constructor.name}setSentryContext(e){e.type==="user"?_M(e.data):A0(e.type,e.data),this.constructor.name,e.type}disableSentry(){vt().getClient()?.close(),this.constructor.name}static broadcast(){i0(new this);let e="INIT";const t=self._sentryDebugIds;t&&typeof t=="object"&&(e+=`|SENTRY-DEBUG-ID-MAP->${JSON.stringify(t)}`),postMessage(e)}onConnected(){}updateDebugIdMap(e){const t=JSON.parse(e);typeof t=="object"&&SF(t)}getDependencyPort(e){const t=this.dependencies[e]?.port;if(!t)throw`[Peer] Missing dependency port ${e}.`;return t}getDependency(e){const t=this.dependencies[e]?.remote;if(!t)throw`[Peer] Missing dependency ${e}.`;return t}registerDependencies(e){for(const[t,s]of Object.entries(e))this.dependencies[t]={remote:gk(s),port:s}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG=1e-7,JG=1e-4;class sw{static{u(this,"DataStorage")}constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class gm{static{u(this,"KernelBackend")}refCount(e){return us("refCount")}incRef(e){return us("incRef")}timerAvailable(){return!0}time(e){return us("time")}read(e){return us("read")}readSync(e){return us("readSync")}readToGPU(e,t){return us("readToGPU")}numDataIds(){return us("numDataIds")}disposeData(e,t){return us("disposeData")}write(e,t,s){return us("write")}move(e,t,s,r,o){return us("move")}createTensorFromGPUData(e,t,s){return us("createTensorFromGPUData")}memory(){return us("memory")}floatPrecision(){return us("floatPrecision")}epsilon(){return this.floatPrecision()===32?QG:JG}dispose(){return us("dispose")}}function us(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}u(us,"notYetImplemented");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,qa(n,e,t)}u(ZG,"shuffle");function Yi(n,e,t){return Math.max(n,Math.min(e,t))}u(Yi,"clamp$2");function rw(n){return n%2===0?n:n+1}u(rw,"nearestLargerEven");function qa(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}u(qa,"swap");function mN(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}u(mN,"sum$4");function N(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}u(N,"assert$1");function cs(n,e,t=""){N(Ge(n,e),()=>t+` Shapes ${n} and ${e} must match`)}u(cs,"assertShapesMatch");function Vc(n){N(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}u(Vc,"assertNonNull");function U(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}u(U,"sizeFromShape");function ov(n){return n.length===0}u(ov,"isScalarShape");function eH(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}u(eH,"arraysEqualWithNull");function Ge(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}u(Ge,"arraysEqual");function wc(n){return n%1===0}u(wc,"isInt");function ix(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}u(ix,"sizeToSquarishShape");function rc(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}u(rc,"rightPad");function iv(n,e=r=>0,t,s){return new Promise((r,o)=>{let i=0;const a=u(()=>{if(n()){r();return}i++;const c=e(i);if(t!=null&&i>=t){o();return}s!=null?s(a,c):setTimeout(a,c)},"tryFn");a()})}u(iv,"repeatedTry");function ow(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}u(ow,"inferFromImplicitShape");function Pe(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),N(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),N(n.every(s=>wc(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}u(Pe,"parseAxisParam");function ui(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Pe(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}u(ui,"squeezeShape");function ln(n,e){return Ht(n,e)}u(ln,"getTypedArrayFromDType");function Ht(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}u(Ht,"getArrayFromDType");function tH(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}u(tH,"checkConversionForErrors");function nH(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}u(nH,"isValidDtype");function iw(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}u(iw,"hasEncodingLoss");function pf(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}u(pf,"bytesPerElement");function sH(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}u(sH,"bytesFromStringArray");function Uc(n){return typeof n=="string"||n instanceof String}u(Uc,"isString");function rH(n){return typeof n=="boolean"}u(rH,"isBoolean");function ax(n){return typeof n=="number"}u(ax,"isNumber");function ga(n){return Array.isArray(n)?ga(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":ax(n)?"float32":Uc(n)?"string":rH(n)?"bool":"float32"}u(ga,"inferDtype");function cx(n){return!!(n&&n.constructor&&n.call&&n.apply)}u(cx,"isFunction");function ux(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}u(ux,"nearestDivisor");function we(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}u(we,"computeStrides");function gN(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((c,l)=>c*l)*(s?2:1);for(let c=0;c<o;c++)r[c]=gN(n+c*a,i,t,s)}return r}u(gN,"createNestedArray");function Zs(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return gN(0,n,e,t)}u(Zs,"toNestedArray");function Lp(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}u(Lp,"convertBackendValuesAndArrayBuffer");function aw(n,e){const t=Nn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}u(aw,"makeOnesTypedArray");function Nn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}u(Nn,"makeZerosTypedArray");function yN(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Zs(n,new Float32Array(t));if(e==="int32")return Zs(n,new Int32Array(t));if(e==="bool")return Zs(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}u(yN,"makeZerosNestedTypedArray");function Ds(n){n.forEach(e=>{N(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}u(Ds,"assertNonNegativeIntegerDimensions");function zr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}u(zr,"locToIndex");function Gc(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}u(Gc,"indexToLoc");function Qi(n){return n&&n.then&&typeof n.then=="function"}u(Qi,"isPromise");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const av="tfjsflags";class oH{static{u(this,"Environment")}constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=iH,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(j().getBool("IS_TEST")||j().getBool("PROD")||`${this.platformName}${e}`),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];j().getBool("IS_TEST")||j().getBool("PROD")||`${e}${r}`,this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Qi(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);av in e&&e[av].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=cH(r,o)})}}function iH(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(aH(e,s[0],s[1]),s.join("="))),e}u(iH,"getQueryParams");function aH(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}u(aH,"decodeParam");function cH(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}u(cH,"parseValue");function j(){return bN}u(j,"env");let bN=null;function uH(n){bN=n}u(uH,"setEnvironmentGlobal");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qy;function xN(){if(Qy==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Qy=n}return Qy}u(xN,"getGlobalNamespace");function lH(){const n=xN();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}u(lH,"getGlobalMap");function cw(n,e){const t=lH();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}u(cw,"getGlobal");const yd="Abs",Hc="Acos",jc="Acosh",ya="Add",bd="AddN",ym="All",bm="Any",xd="ArgMax",wd="ArgMin",qc="Asin",Kc="Asinh",Xc="Atan",Yc="Atanh",Qc="Atan2",Sd="AvgPool",xm="AvgPoolGrad",Cd="AvgPool3D",wm="AvgPool3DGrad",vd="BatchMatMul",Id="BatchToSpaceND",Sm="Bincount",Cm="BitwiseAnd",dH="BroadcastTo",vm="BroadcastArgs",Jc="Cast",Zc="Ceil",eu="ClipByValue",Im="Complex",kd="ComplexAbs",$d="Concat",Nd="Conv2D",km="Conv2DBackpropFilter",Td="Conv2DBackpropInput",Ed="Conv3D",$m="Conv3DBackpropFilterV2",Nm="Conv3DBackpropInputV2",tu="Cos",nu="Cosh",Tm="Cumprod",_d="Cumsum",Em="CropAndResize",_m="DenseBincount",Rm="DepthToSpace",Rd="DepthwiseConv2dNative",Am="DepthwiseConv2dNativeBackpropFilter",Dm="DepthwiseConv2dNativeBackpropInput",Om="Diag",Ad="Dilation2D",ff="Dilation2DBackpropInput",mf="Dilation2DBackpropFilter",wN="Draw",su="RealDiv",Fm="Einsum",ru="Elu",Pm="EluGrad",ou="Erf",Dd="Equal",iu="Exp",Od="ExpandDims",au="Expm1",Lm="FFT",Mm="Fill",zm="FlipLeftRight",cu="Floor",uu="FloorDiv",Fd="FusedBatchNorm",Pd="GatherV2",Bm="GatherNd",Ld="Greater",lu="GreaterEqual",du="Identity",Wm="IFFT",Vm="Imag",hu="IsFinite",pu="IsInf",fu="IsNan",Md="LeakyRelu",zd="Less",Bd="LessEqual",Um="LinSpace",mu="Log",gu="Log1p",Wd="LogicalAnd",Vd="LogicalNot",Ud="LogicalOr",hH="LogSoftmax",Gd="LRN",Gm="LRNGrad",Hd="Max",yu="Maximum",jd="MaxPool",Hm="MaxPoolGrad",qd="MaxPool3D",jm="MaxPool3DGrad",qm="MaxPoolWithArgmax",Kd="Mean",Xd="Min",bu="Minimum",Yd="MirrorPad",xu="Mod",Km="Multinomial",wu="Multiply",Qd="Neg",Jd="NotEqual",Xm="NonMaxSuppressionV3",uw="NonMaxSuppressionV4",Ym="NonMaxSuppressionV5",Zd="OnesLike",eh="OneHot",th="Pack",nh="PadV2",Su="Pow",sh="Prelu",rh="Prod",lw="RaggedGather",dw="RaggedRange",hw="RaggedTensorToTensor",Qm="Range",Jm="Real",Cu="Reciprocal",vu="Relu",oh="Reshape",ih="ResizeNearestNeighbor",Zm="ResizeNearestNeighborGrad",ah="ResizeBilinear",eg="ResizeBilinearGrad",Iu="Relu6",ch="Reverse",ku="Round",$u="Rsqrt",tg="ScatterNd",ng="TensorScatterUpdate",sg="SearchSorted",uh="Select",Nu="Selu",lh="Slice",Tu="Sin",Eu="Sinh",_u="Sign",Ru="Sigmoid",Au="Softplus",Du="Sqrt",dh="Sum",hh="SpaceToBatchND",ph="SplitV",fh="Softmax",pw="SparseFillEmptyRows",fw="SparseReshape",rg="SparseSegmentMean",og="SparseSegmentSum",ig="SparseToDense",Ou="SquaredDifference",ag="Square",cg="StaticRegexReplace",ug="StridedSlice",lg="StringNGrams",mw="StringSplit",gw="StringToHashBucketFast",Fu="Sub",Pu="Tan",Lu="Tanh",Mu="Tile",dg="TopK",hg="Transform",Ui="Transpose",yw="Unique",mh="Unpack",gh="UnsortedSegmentSum",yh="ZerosLike",zu="Step",gf="FromPixels",pg="RotateWithOffset",Ll="_FusedMatMul",Ml="FusedConv2D",zl="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(...n){j().getBool("IS_TEST")||j().getBool("PROD")||[...n]}u(Ts,"warn");function pH(...n){j().getBool("IS_TEST")||j().getBool("PROD")||[...n]}u(pH,"log$4");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yf=cw("kernelRegistry",()=>new Map),lx=cw("gradRegistry",()=>new Map);function dx(n,e){const t=SN(n,e);return yf.get(t)}u(dx,"getKernel");function cv(n){return lx.get(n)}u(cv,"getGradient");function uv(n){const e=yf.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&t.push(i)}return t}u(uv,"getKernelsForBackend");function bw(n){const{kernelName:e,backendName:t}=n,s=SN(e,t);yf.has(s)&&Ts(`The kernel '${e}' for backend '${t}' is already registered`),yf.set(s,n)}u(bw,"registerKernel");function fH(n){const{kernelName:e}=n;lx.has(e)&&j().getBool("DEBUG")&&Ts(`Overriding the gradient for '${e}'`),lx.set(e,n)}u(fH,"registerGradient");function SN(n,e){return`${e}_${n}`}u(SN,"makeKey");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}u(CN,"isTypedArrayBrowser");var vN=Et,Hs=null;try{Hs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Et(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}u(Et,"Long$1");Et.prototype.__isLong__;Object.defineProperty(Et.prototype,"__isLong__",{value:!0});function Cs(n){return(n&&n.__isLong__)===!0}u(Cs,"isLong");Et.isLong=Cs;var lv={},dv={};function ba(n,e){var t,s,r;return e?(n>>>=0,(r=0<=n&&n<256)&&(s=dv[n],s)?s:(t=_t(n,(n|0)<0?-1:0,!0),r&&(dv[n]=t),t)):(n|=0,(r=-128<=n&&n<128)&&(s=lv[n],s)?s:(t=_t(n,n<0?-1:0,!1),r&&(lv[n]=t),t))}u(ba,"fromInt");Et.fromInt=ba;function js(n,e){if(isNaN(n))return e?Pi:qs;if(e){if(n<0)return Pi;if(n>=IN)return NN}else{if(n<=-pv)return fs;if(n+1>=pv)return $N}return n<0?js(-n,e).neg():_t(n%Sc|0,n/Sc|0,e)}u(js,"fromNumber");Et.fromNumber=js;function _t(n,e,t){return new Et(n,e,t)}u(_t,"fromBits");Et.fromBits=_t;var bf=Math.pow;function xw(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return qs;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return xw(n.substring(1),e,t).neg();for(var r=js(bf(t,8)),o=qs,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),c=parseInt(n.substring(i,i+a),t);if(a<8){var l=js(bf(t,a));o=o.mul(l).add(js(c))}else o=o.mul(r),o=o.add(js(c))}return o.unsigned=e,o}u(xw,"fromString");Et.fromString=xw;function Ir(n,e){return typeof n=="number"?js(n,e):typeof n=="string"?xw(n,e):_t(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}u(Ir,"fromValue");Et.fromValue=Ir;var hv=65536,mH=1<<24,Sc=hv*hv,IN=Sc*Sc,pv=IN/2,fv=ba(mH),qs=ba(0);Et.ZERO=qs;var Pi=ba(0,!0);Et.UZERO=Pi;var tc=ba(1);Et.ONE=tc;var kN=ba(1,!0);Et.UONE=kN;var hx=ba(-1);Et.NEG_ONE=hx;var $N=_t(-1,2147483647,!1);Et.MAX_VALUE=$N;var NN=_t(-1,-1,!0);Et.MAX_UNSIGNED_VALUE=NN;var fs=_t(0,-2147483648,!1);Et.MIN_VALUE=fs;var ue=Et.prototype;ue.toInt=u(function(){return this.unsigned?this.low>>>0:this.low},"toInt");ue.toNumber=u(function(){return this.unsigned?(this.high>>>0)*Sc+(this.low>>>0):this.high*Sc+(this.low>>>0)},"toNumber");ue.toString=u(function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(fs)){var t=js(e),s=this.div(t),r=s.mul(t).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=js(bf(e,6),this.unsigned),i=this,a="";;){var c=i.div(o),l=i.sub(c.mul(o)).toInt()>>>0,d=l.toString(e);if(i=c,i.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}},"toString");ue.getHighBits=u(function(){return this.high},"getHighBits");ue.getHighBitsUnsigned=u(function(){return this.high>>>0},"getHighBitsUnsigned");ue.getLowBits=u(function(){return this.low},"getLowBits");ue.getLowBitsUnsigned=u(function(){return this.low>>>0},"getLowBitsUnsigned");ue.getNumBitsAbs=u(function(){if(this.isNegative())return this.eq(fs)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1},"getNumBitsAbs");ue.isZero=u(function(){return this.high===0&&this.low===0},"isZero");ue.eqz=ue.isZero;ue.isNegative=u(function(){return!this.unsigned&&this.high<0},"isNegative");ue.isPositive=u(function(){return this.unsigned||this.high>=0},"isPositive");ue.isOdd=u(function(){return(this.low&1)===1},"isOdd");ue.isEven=u(function(){return(this.low&1)===0},"isEven");ue.equals=u(function(e){return Cs(e)||(e=Ir(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low},"equals");ue.eq=ue.equals;ue.notEquals=u(function(e){return!this.eq(e)},"notEquals");ue.neq=ue.notEquals;ue.ne=ue.notEquals;ue.lessThan=u(function(e){return this.comp(e)<0},"lessThan");ue.lt=ue.lessThan;ue.lessThanOrEqual=u(function(e){return this.comp(e)<=0},"lessThanOrEqual");ue.lte=ue.lessThanOrEqual;ue.le=ue.lessThanOrEqual;ue.greaterThan=u(function(e){return this.comp(e)>0},"greaterThan");ue.gt=ue.greaterThan;ue.greaterThanOrEqual=u(function(e){return this.comp(e)>=0},"greaterThanOrEqual");ue.gte=ue.greaterThanOrEqual;ue.ge=ue.greaterThanOrEqual;ue.compare=u(function(e){if(Cs(e)||(e=Ir(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},"compare");ue.comp=ue.compare;ue.negate=u(function(){return!this.unsigned&&this.eq(fs)?fs:this.not().add(tc)},"negate");ue.neg=ue.negate;ue.add=u(function(e){Cs(e)||(e=Ir(e));var t=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,i=e.high>>>16,a=e.high&65535,c=e.low>>>16,l=e.low&65535,d=0,h=0,p=0,f=0;return f+=o+l,p+=f>>>16,f&=65535,p+=r+c,h+=p>>>16,p&=65535,h+=s+a,d+=h>>>16,h&=65535,d+=t+i,d&=65535,_t(p<<16|f,d<<16|h,this.unsigned)},"add");ue.subtract=u(function(e){return Cs(e)||(e=Ir(e)),this.add(e.neg())},"subtract");ue.sub=ue.subtract;ue.multiply=u(function(e){if(this.isZero())return qs;if(Cs(e)||(e=Ir(e)),Hs){var t=Hs.mul(this.low,this.high,e.low,e.high);return _t(t,Hs.get_high(),this.unsigned)}if(e.isZero())return qs;if(this.eq(fs))return e.isOdd()?fs:qs;if(e.eq(fs))return this.isOdd()?fs:qs;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(fv)&&e.lt(fv))return js(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,i=this.low&65535,a=e.high>>>16,c=e.high&65535,l=e.low>>>16,d=e.low&65535,h=0,p=0,f=0,m=0;return m+=i*d,f+=m>>>16,m&=65535,f+=o*d,p+=f>>>16,f&=65535,f+=i*l,p+=f>>>16,f&=65535,p+=r*d,h+=p>>>16,p&=65535,p+=o*l,h+=p>>>16,p&=65535,p+=i*c,h+=p>>>16,p&=65535,h+=s*d+r*l+o*c+i*a,h&=65535,_t(f<<16|m,h<<16|p,this.unsigned)},"multiply");ue.mul=ue.multiply;ue.divide=u(function(e){if(Cs(e)||(e=Ir(e)),e.isZero())throw Error("division by zero");if(Hs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Hs.div_u:Hs.div_s)(this.low,this.high,e.low,e.high);return _t(t,Hs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Pi:qs;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Pi;if(e.gt(this.shru(1)))return kN;o=Pi}else{if(this.eq(fs)){if(e.eq(tc)||e.eq(hx))return fs;if(e.eq(fs))return tc;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(qs)?e.isNegative()?tc:hx:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(fs))return this.unsigned?Pi:qs;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=qs}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),c=a<=48?1:bf(2,a-48),l=js(s),d=l.mul(e);d.isNegative()||d.gt(r);)s-=c,l=js(s,this.unsigned),d=l.mul(e);l.isZero()&&(l=tc),o=o.add(l),r=r.sub(d)}return o},"divide");ue.div=ue.divide;ue.modulo=u(function(e){if(Cs(e)||(e=Ir(e)),Hs){var t=(this.unsigned?Hs.rem_u:Hs.rem_s)(this.low,this.high,e.low,e.high);return _t(t,Hs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},"modulo");ue.mod=ue.modulo;ue.rem=ue.modulo;ue.not=u(function(){return _t(~this.low,~this.high,this.unsigned)},"not");ue.and=u(function(e){return Cs(e)||(e=Ir(e)),_t(this.low&e.low,this.high&e.high,this.unsigned)},"and");ue.or=u(function(e){return Cs(e)||(e=Ir(e)),_t(this.low|e.low,this.high|e.high,this.unsigned)},"or");ue.xor=u(function(e){return Cs(e)||(e=Ir(e)),_t(this.low^e.low,this.high^e.high,this.unsigned)},"xor");ue.shiftLeft=u(function(e){return Cs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?_t(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):_t(0,this.low<<e-32,this.unsigned)},"shiftLeft");ue.shl=ue.shiftLeft;ue.shiftRight=u(function(e){return Cs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?_t(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):_t(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},"shiftRight");ue.shr=ue.shiftRight;ue.shiftRightUnsigned=u(function(e){if(Cs(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return _t(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?_t(t,0,this.unsigned):_t(t>>>e-32,0,this.unsigned)},"shiftRightUnsigned");ue.shru=ue.shiftRightUnsigned;ue.shr_u=ue.shiftRightUnsigned;ue.toSigned=u(function(){return this.unsigned?_t(this.low,this.high,!1):this},"toSigned");ue.toUnsigned=u(function(){return this.unsigned?this:_t(this.low,this.high,!0)},"toUnsigned");ue.toBytes=u(function(e){return e?this.toBytesLE():this.toBytesBE()},"toBytes");ue.toBytesLE=u(function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]},"toBytesLE");ue.toBytesBE=u(function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]},"toBytesBE");Et.fromBytes=u(function(e,t,s){return s?Et.fromBytesLE(e,t):Et.fromBytesBE(e,t)},"fromBytes");Et.fromBytesLE=u(function(e,t){return new Et(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},"fromBytesLE");Et.fromBytesBE=u(function(e,t){return new Et(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)},"fromBytesBE");var TN=Bk(vN),gH=aF({__proto__:null,default:TN},[vN]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti=TN||gH;function fg(n){return Ti.fromString(n,!0,16)}u(fg,"hexToLong");const EN=fg("c3a5c85c97cb3127"),ki=fg("b492b66fbe98f273"),zn=fg("9ae16a3b2f90404f");function px(n){return n.xor(n.shru(47))}u(px,"shiftMix");function _N(n,e,t){const s=n.slice(e,e+t);return Ti.fromBytes(Array.from(s),!0,!0)}u(_N,"fetch$1");function Ct(n,e){return _N(n,e,8)}u(Ct,"fetch64");function mv(n,e){return _N(n,e,4)}u(mv,"fetch32");function gn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}u(gn,"rotate64");function Uo(n,e,t=fg("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}u(Uo,"hashLen16");function yH(n,e,t,s,r,o){r=r.add(n),o=gn(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(t),o=o.add(gn(r,44)),[r.add(s),o.add(i)]}u(yH,"weakHashLen32WithSeeds");function ap(n,e,t,s){return yH(Ct(n,e),Ct(n,e+8),Ct(n,e+16),Ct(n,e+24),t,s)}u(ap,"weakHashLen32WithSeedsStr");function bH(n,e=n.length){if(e>=8){const t=zn.add(e*2),s=Ct(n,0).add(zn),r=Ct(n,e-8),o=gn(r,37).mul(t).add(s),i=gn(s,25).add(r).mul(t);return Uo(o,i,t)}if(e>=4){const t=zn.add(e*2),s=mv(n,0);return Uo(s.shl(3).add(e),mv(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),i=e+(r<<2);return px(zn.mul(o).xor(EN.mul(i))).mul(zn)}return zn}u(bH,"hashLen0to16");function xH(n,e=n.length){const t=zn.add(e*2),s=Ct(n,0).mul(ki),r=Ct(n,8),o=Ct(n,e-8).mul(t),i=Ct(n,e-16).mul(zn);return Uo(gn(s.add(r),43).add(gn(o,30)).add(i),s.add(gn(r.add(zn),18)).add(o),t)}u(xH,"hashLen17to32");function wH(n,e=n.length){const t=zn.add(e*2),s=Ct(n,0).mul(zn),r=Ct(n,8),o=Ct(n,e-8).mul(t),i=Ct(n,e-16).mul(zn),a=gn(s.add(r),43).add(gn(o,30)).add(i),c=Uo(a,s.add(gn(r.add(zn),18)).add(o),t),l=Ct(n,16).mul(t),d=Ct(n,24),h=a.add(Ct(n,e-32)).mul(t),p=c.add(Ct(n,e-24)).mul(t);return Uo(gn(l.add(d),43).add(gn(h,30)).add(p),l.add(gn(d.add(s),18)).add(h),t)}u(wH,"hashLen33to64");function SH(n,e=n.length){const t=Ti.fromNumber(81,!0);if(e<=32)return e<=16?bH(n,e):xH(n,e);if(e<=64)return wH(n,e);let s=t,r=t.mul(ki).add(113),o=px(r.mul(zn).add(113)).mul(zn),i=[Ti.UZERO,Ti.UZERO],a=[Ti.UZERO,Ti.UZERO];s=s.mul(zn).add(Ct(n,0));let c=0;const l=(e-1>>6)*64,d=l+(e-1&63)-63;do s=gn(s.add(r).add(i[0]).add(Ct(n,c+8)),37).mul(ki),r=gn(r.add(i[1]).add(Ct(n,c+48)),42).mul(ki),s=s.xor(a[1]),r=r.add(i[0]).add(Ct(n,c+40)),o=gn(o.add(a[0]),33).mul(ki),i=ap(n,c,i[1].mul(ki),s.add(a[0])),a=ap(n,c+32,o.add(a[1]),r.add(Ct(n,c+16))),[o,s]=[s,o],c+=64;while(c!==l);const h=ki.add(o.and(255).shl(1));return c=d,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=gn(s.add(r).add(i[0]).add(Ct(n,c+8)),37).mul(h),r=gn(r.add(i[1]).add(Ct(n,c+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(Ct(n,c+40))),o=gn(o.add(a[0]),33).mul(h),i=ap(n,c,i[1].mul(h),s.add(a[0])),a=ap(n,c+32,o.add(a[1]),r.add(Ct(n,c+16))),[o,s]=[s,o],Uo(Uo(i[0],a[0],h).add(px(r).mul(EN)).add(o),Uo(i[1],a[1],h).add(s),h)}u(SH,"fingerPrint64");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n,e){return e==="string"?lo(n):xa([n],e)}u(li,"createScalarValue");function CH(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}u(CH,"noConversionNeeded");function xa(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=wo(n)),j().getBool("DEBUG")&&tH(n,e),CH(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}u(xa,"toTypedArray");function Kn(){return j().platform.now()}u(Kn,"now");function lo(n,e="utf-8"){return e=e||"utf-8",j().platform.encode(n,e)}u(lo,"encodeString");function yr(n,e="utf-8"){return e=e||"utf-8",j().platform.decode(n,e)}u(yr,"decodeString");function sr(n){return j().platform.isTypedArray!=null?j().platform.isTypedArray(n):CN(n)}u(sr,"isTypedArray");function wo(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Qi(n)||n==null||sr(n)&&t)e.push(n);else if(Array.isArray(n)||sr(n))for(let s=0;s<n.length;++s)wo(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)wo(n[r],e,t)}return e}u(wo,"flatten$1");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vH{static{u(this,"Profiler")}constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new kH)}profileKernel(e,t,s){let r;const o=u(()=>{r=s()},"holdResultWrapperFn");let i;const a=Kn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const l of r)l.dataSync();i=Promise.resolve({kernelMs:Kn()-a})}if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){const d=r[l];d.data().then(h=>{IH(h,d.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(c=>{this.logger.logKernelProfile(t,a,c[0],c[1],o,c[2])})})}}function IH(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return`${r}${t}`,!0}return!1}u(IH,"checkComputationForErrors");class kH{static{u(this,"Logger")}logKernelProfile(e,t,s,r,o,i){const a=typeof r=="number"?rc(`${r}ms`,9):r.error,c=rc(e,25),l=t.rank,d=t.size,h=rc(t.shape.toString(),14);let p="";for(const f in o){const m=o[f];if(m!=null){const g=m.shape||t.shape,y=g.length;p+=`${f}: ${y}D ${y>0?g:""} `}}`${c}${a}${l}${h}${d}${p}${i}`}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(n,e,t){const s={},r={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const l=n[c],d=l.inputs;for(const h in d){const p=d[h];let f=!1;for(let m=0;m<e.length;m++)if(s[p.id]){l.outputs.forEach(g=>s[g.id]=!0),f=!0,r[l.id]=!0;break}if(f)break}}const o={};o[t.id]=!0;const i={};for(let c=n.length-1;c>=0;c--){const l=n[c],d=l.inputs;for(let h=0;h<l.outputs.length;h++)if(o[l.outputs[h].id]){for(const p in d)o[d[p].id]=!0,i[l.id]=!0;break}}const a=[];for(let c=0;c<n.length;c++){const l=n[c];if(r[l.id]&&i[l.id]){const d={};for(const p in l.inputs){const f=l.inputs[p];s[f.id]&&(d[p]=f)}const h=Object.assign({},l);h.inputs=d,h.outputs=l.outputs,a.push(h)}}return a}u($H,"getFilteredNodesXToY");function NH(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(c=>{const l=n[c.id];l!=null?i.push(l):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const c in o.inputs){if(!(c in a))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(a)}.`);const l=t(()=>a[c]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${l.dtype}'`);const d=o.inputs[c];if(!Ge(l.shape,d.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${c}' has shape '${l.shape}', which does not match the shape of the input '${d.shape}'`);if(n[d.id]==null)n[d.id]=l;else{const h=n[d.id];n[d.id]=s(h,l),h.dispose()}}}}u(NH,"backpropagateGradients");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gv=20,il=3,Jy=7;function TH(n,e,t,s){const r=we(e),o=EH(n,e,t,r),i=e.length,a=Mp(n,e,t,r,o),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${i}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(a.map(l=>"    "+l).join(`
`)),c.join(`
`)}u(TH,"tensorToString");function EH(n,e,t,s){const r=U(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,c=t==="complex64"?hl(n):n;if(a>1)for(let l=0;l<r/o;l++){const d=l*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],dl(c[d+h],0,t).length)}return i}u(EH,"computeMaxSizePerColumn");function dl(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Jy))} + ${parseFloat(n[1].toFixed(Jy))}j`:Uc(n)?s=`'${n}'`:t==="bool"?s=RN(n):s=parseFloat(n.toFixed(Jy)).toString(),rc(s,e)}u(dl,"valToString");function RN(n){return n===0?"false":"true"}u(RN,"boolNumToString");function Mp(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,a=e[0],c=e.length;if(c===0){if(t==="complex64"){const g=hl(n);return[dl(g[0],0,t)]}return t==="bool"?[RN(n[0])]:[n[0].toString()]}if(c===1){if(a>gv){const y=il*i;let b=Array.from(n.slice(0,y)),x=Array.from(n.slice((a-il)*i,a*i));return t==="complex64"&&(b=hl(b),x=hl(x)),["["+b.map((S,w)=>dl(S,r[w],t)).join(", ")+", ..., "+x.map((S,w)=>dl(S,r[a-il+w],t)).join(", ")+"]"]}return["["+(t==="complex64"?hl(n):Array.from(n)).map((y,b)=>dl(y,r[b],t)).join(", ")+"]"]}const l=e.slice(1),d=s.slice(1),h=s[0]*i,p=[];if(a>gv){for(let g=0;g<il;g++){const y=g*h,b=y+h;p.push(...Mp(n.slice(y,b),l,t,d,r,!1))}p.push("...");for(let g=a-il;g<a;g++){const y=g*h,b=y+h;p.push(...Mp(n.slice(y,b),l,t,d,r,g===a-1))}}else for(let g=0;g<a;g++){const y=g*h,b=y+h;p.push(...Mp(n.slice(y,b),l,t,d,r,g===a-1))}const f=c===2?",":"";p[0]="["+(a>0?p[0]+f:"");for(let g=1;g<p.length-1;g++)p[g]=" "+p[g]+f;let m=`,
`;for(let g=2;g<c;g++)m+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":m),p}u(Mp,"subTensorToString");function hl(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}u(hl,"createComplexTuples");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class on{static{u(this,"TensorBuffer")}constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=U(e),s!=null){const r=s.length;N(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ht(t,this.size),this.strides=we(e)}set(e,...t){t.length===0&&(t=[0]),N(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return pr().makeTensor(this.values,this.shape,this.dtype)}}let pr=null,Ka=null;function _H(n){pr=n}u(_H,"setTensorTracker");function RH(n){Ka=n}u(RH,"setOpHandler");class Mt{static{u(this,"Tensor")}constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=U(e),this.strides=we(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ka.buffer(this.shape,this.dtype,e)}bufferSync(){return Ka.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Zs(this.shape,e,this.dtype==="complex64")}arraySync(){return Zs(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=pr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>yr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),pr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=pr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>yr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await pr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),pr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ka.print(this,e)}clone(){return this.throwIfDisposed(),Ka.clone(this)}toString(e=!1){const t=this.dataSync();return TH(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ka.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),pr().makeVariable(this,e,t,s)}}Object.defineProperty(Mt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function K(){return cw("Tensor",()=>Mt)}u(K,"getGlobalTensorClass");K();class xf extends Mt{static{u(this,"Variable")}constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ge(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);pr().disposeTensor(this),this.dataId=e.dataId,pr().incRef(this,null)}dispose(){pr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(xf,Symbol.hasInstance,{value:n=>n instanceof Mt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yv;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(yv||(yv={}));var fx;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(fx||(fx={}));var mx;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(mx||(mx={}));var gx;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(gx||(gx={}));var yx;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(yx||(yx={}));const AH={float32:gx,int32:fx,bool:mx,complex64:yx};function wn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return AH[n][e]}u(wn,"upcastType");function mg(n){return wn(n,"int32")}u(mg,"sumOutType");function AN(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}u(AN,"isWebGLData");function DN(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}u(DN,"isWebGPUData");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jt(n,e){if(n.dtype===e.dtype)return[n,e];const t=wn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}u(jt,"makeTypesMatch");function DH(n,e){N(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}u(DH,"assertTypesMatch");function ON(n){const e=[];return FN(n,e,new Set),e}u(ON,"getTensorsInContainer");function FN(n,e,t){if(n==null)return;if(n instanceof Mt){e.push(n);return}if(!OH(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),FN(o,e,t))}}u(FN,"walkTensorContainer");function OH(n){return Array.isArray(n)||typeof n=="object"}u(OH,"isIterable");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(n){return n.kernelName!=null}u(Zy,"isRegisteredKernelInvocation");class bv{static{u(this,"EngineState")}constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Cc{static{u(this,"Engine")}constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new bv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Ts(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new vH(this.backendInstance),!0}setupRegisteredKernels(){uv(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){uv(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof gm)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Ts(`Initialization of backend ${e} failed`),Ts(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Ts(`Initialization of backend ${e} failed`),Ts(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Cc.nextTensorId++}nextVariableId(){return Cc.nextVariableId++}clone(e){const t=F.runKernel(du,{x:e}),s={x:e},r=u(i=>({x:()=>{const a="float32",c={x:i},l={dtype:a};return F.runKernel(Jc,c,l)}}),"grad"),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(dx(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(c=>{o+=c.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let c;const l=Zy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Zy(e)){const{kernelName:m,inputs:g,attrs:y}=e;this.backendName==null&&this.backend;const b=dx(m,this.backendName);N(b!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),a=u(()=>{const x=this.backend.numDataIds();c=b.kernelFunc({inputs:g,attrs:y,backend:this.backend});const S=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,x,S);const w=S.map(C=>C.rank!=null?C:this.makeTensorFromTensorInfo(C));if(r){const C=this.getTensorsForGradient(m,g,w);s=this.saveTensorsForBackwardMode(C)}return w},"kernelFunc")}else{const{forwardFunc:m}=e,g=u(y=>{r&&(s=y.map(b=>this.keep(this.clone(b))))},"saveFunc");a=u(()=>{const y=this.backend.numDataIds();c=this.tidy(()=>m(this.backend,g));const b=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,y,b),b},"kernelFunc")}const{inputs:d,attrs:h}=e,p=Zy(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(f=this.profiler.profileKernel(l,d,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),r&&this.addTapeNode(l,d,t,p,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(m=>d[m]!=null?d[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=cv(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(N(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(l=>t[l])):a=o.map(l=>t[l]);const c=s.filter((l,d)=>i[d]);return a.concat(c)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Uc(e[0])&&(o=e.map(c=>lo(c)));const i=r.write(o,t,s),a=new Mt(t,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const c=this.state.tensorInfo.get(i),l=sH(o);this.state.numBytes+=l-c.bytes,c.bytes=l}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,i=new Mt(r,o,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new xf(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*pf(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof xf||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*pf(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},c=cv(e);c!=null&&(r=c.gradFunc),r!=null&&(a.gradient=l=>(l=l.map((d,h)=>{if(d==null){const p=s[h],f=Nn(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return d}),r(l.length>1?l:l[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ON(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(N(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));N(o instanceof Mt,()=>"The result y returned by f() must be a tensor.");const i=$H(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??FH(o.shape),NH(a,i,l=>this.tidy(l),PH);const c=t.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const d of l.saved)d.dispose()}),this.state.activeTape=null),{value:o,grads:c}})}customGrad(e){return N(cx(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{N(t.every(a=>a instanceof Mt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,c)=>{r[c]=a});const o=u((a,c)=>(s=e(...t,c),N(s.value instanceof Mt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(cx(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),"forwardFunc"),i=u((a,c)=>{const l=s.gradFunc(a,c),d=Array.isArray(l)?l:[l];N(d.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(d.every(p=>p instanceof Mt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return d.forEach((p,f)=>{h[f]=()=>p}),h},"backwardsFunc");return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Kn(),s=await this.backend.time(e);return s.wallMs=Kn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new bv;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Cc.nextTensorId=0;Cc.nextVariableId=0;function FH(n){const e=aw(U(n),"float32");return F.makeTensor(e,n,"float32")}u(FH,"ones$1");function PN(){const n=xN();if(n._tfengine==null){const e=new oH(n);n._tfengine=new Cc(e)}return uH(n._tfengine.ENV),_H(()=>n._tfengine),n._tfengine}u(PN,"getOrMakeEngine");const F=PN();function PH(n,e){const t={a:n,b:e};return F.runKernel(ya,t)}u(PH,"add$2");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(){return typeof navigator<"u"&&navigator!=null}u(LH,"_isNavigatorDefined");function LN(n){if(n||LH()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}u(LN,"isMobile");function MN(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}u(MN,"isBrowser");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rs=j();rs.registerFlag("DEBUG",()=>!1,n=>{});rs.registerFlag("IS_BROWSER",()=>MN());rs.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");rs.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));rs.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));rs.registerFlag("PROD",()=>!1);rs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>rs.getBool("DEBUG"));rs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);rs.registerFlag("IS_TEST",()=>!1);rs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>rs.getBool("DEBUG"));rs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);rs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);rs.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(n,e){let t=n;if(sr(n))return e==="string"?[]:[n.length];if(AN(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(DN(n))return[n.buffer.size/(e==null?4:pf(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||sr(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&zN(n,s,[]),s}u(di,"inferShape");function zN(n,e,t){if(t=t||[],!Array.isArray(n)&&!sr(n)){N(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}N(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),N(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)zN(n[r],s,t.concat(r))}u(zN,"deepAssertShapeConsistency");function xv(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}u(xv,"assertDtype");function _(n,e,t,s="numeric"){if(n instanceof K())return xv(s,n.dtype,e,t),n;let r=ga(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),xv(s,r,e,t),n==null||!sr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const o=di(n,r);!sr(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?xa(n,r):wo(n,[],!0);return F.makeTensor(a,o,r)}u(_,"convertToTensor");function wf(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>_(o,`${e}[${i}]`,t,s))}u(wf,"convertToTensorArray");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN="__op";function D(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+BN;const r=u((...o)=>{F.startScope(t);try{const i=s(...o);return Qi(i)&&console.error("Cannot return a Promise inside of tidy."),F.endScope(i),i}catch(i){throw F.endScope(null),i}},"f2");return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}u(D,"op");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(n,e){const t=_(n,"real","complex"),s=_(e,"imag","complex");cs(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return F.runKernel(Im,r)}u(MH,"complex_");const Xo=D({complex_:MH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(n,e,t,s){if(s==null)s=ga(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(DN(n)||AN(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return F.backend.createTensorFromGPUData(n,e||t,s)}if(!sr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Ds(e);const r=U(e),o=U(t);N(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],c=i===t.length-1?a!==U(e.slice(i)):!0;N(t[i]===e[i]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!sr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?xa(n,s):wo(n,[],!0),F.makeTensor(n,e,s)}u(hi,"makeTensor");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(n,e,t){const s=di(n,t);return hi(n,e,s,t)}u(er,"tensor");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ji={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class kr{static{u(this,"CompositeArrayBuffer")}static join(e){return new kr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>sr(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),i=new Uint8Array(o);let a=0;for(let c=s;c<this.shards.length;c++){const l=this.shards[c],h=e+a-l.start,p=a,m=Math.min(t,l.end)-l.start,g=new Uint8Array(l.buffer,h,m-h);if(i.set(g,p),a+=g.length,t<l.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(u(t,"check"),t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=zH(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function zH(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}u(zH,"search");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(){return F}u(ks,"engine");function Sf(){return F.memory()}u(Sf,"memory");function H(n,e){return F.tidy(n,e)}u(H,"tidy");function We(n){ON(n).forEach(t=>t.dispose())}u(We,"dispose");function bn(n){return F.keep(n)}u(bn,"keep");function BH(n){return F.setBackend(n)}u(BH,"setBackend");function bx(){return F.ready()}u(bx,"ready");function WN(){return F.backendName}u(WN,"getBackend");function ww(n,e,t=1){return F.registerBackend(n,e,t)}u(ww,"registerBackend");function gg(){return F.backend}u(gg,"backend");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yo=4;async function xx(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],c=Array.isArray(n)?n[i].tensor:n[a];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${c.dtype}`);const l={name:a,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const d=new Promise(async h=>{const p=await c.bytes(),f=p.reduce((y,b)=>y+b.length,0)+Yo*p.length,m=new Uint8Array(f);let g=0;for(let y=0;y<p.length;y++){const b=p[y],x=new Uint8Array(new Uint32Array([b.length]).buffer);m.set(x,g),g+=Yo,m.set(b,g),g+=b.length}h(m)});s.push(d)}else s.push(c.data());e!=null&&(l.group=e),t.push(l)}const o=await Promise.all(s);return{data:UH(o),specs:t}}u(xx,"encodeWeights");function VN(n,e){const t=new kr(n),s={};let r=0;for(const o of e){const i=WH(o,(a,c)=>t.slice(r+a,r+c));s[o.name]=UN(o,t.slice(r,r+i)),r+=i}return s}u(VN,"decodeWeights");function WH(n,e){const t=U(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ji[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Yo+new Uint32Array(e(r,r+Yo))[0];return r}else s=Ji[n.dtype];return t*s}u(WH,"getWeightBytelength");async function VH(n,e){const t=U(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ji[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Yo+new Uint32Array(await e(r,r+Yo))[0];return r}else s=Ji[n.dtype];return t*s}u(VH,"getWeightBytelengthAsync");function UN(n,e){const t=n.name,s=n.dtype,r=n.shape,o=U(r);let i,a=0;if("quantization"in n){const c=n.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${n.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const l=Ji[c.dtype],d=c.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){i=new Float32Array(d.length);for(let h=0;h<d.length;h++){const p=d[h];i[h]=p*c.scale+c.min}}else if(c.dtype==="float16")i=XH()(d);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(s==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);i=new Int32Array(d.length);for(let h=0;h<d.length;h++){const p=d[h];i[h]=Math.round(p*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*l}else if(s==="string"){const c=U(n.shape);i=[];for(let l=0;l<c;l++){const d=new Uint32Array(e.slice(a,a+Yo))[0];a+=Yo;const h=new Uint8Array(e.slice(a,a+d));i.push(h),a+=d}}else{const c=Ji[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const l=new Float32Array(i.length/2),d=new Float32Array(i.length/2);for(let m=0;m<l.length;m++)l[m]=i[m*2],d[m]=i[m*2+1];const h=er(l,r,"float32"),p=er(d,r,"float32"),f=Xo(h,p);return h.dispose(),p.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*c}return er(i,r,s)}u(UN,"decodeWeight");async function wv(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(s.length+o.byteLength);i.set(s,0),i.set(new Uint8Array(o),s.length),s=i}return s.buffer}u(wv,"readToLength");async function GN(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const i=await VH(o,async(l,d)=>(r=await wv(s,r,d),r.slice(l,d)));r=await wv(s,r,i);const a=r.slice(0,i);r=r.slice(i);const c=UN(o,a);if(t[o.name]=c,WN()==="webgpu"){const l=gg();"uploadToGPU"in l&&U(c.shape)>=j().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&l.uploadToGPU(c.dataId)}}return t}u(GN,"decodeWeightsStream");function UH(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}u(UH,"concatenateTypedArrays");const Sw=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Sv(n){return Sw?Buffer.byteLength(n,"utf8"):new Blob([n]).size}u(Sv,"stringByteLength");function GH(n){if(Sw)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}u(GH,"arrayBufferToBase64String");function HH(n){if(Sw){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}u(HH,"base64StringToArrayBuffer");function HN(n){return kr.join(n)}u(HN,"concatenateArrayBuffers");function Cv(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}u(Cv,"basename");function jN(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}u(jN,"getModelJSONForModelArtifacts");function qN(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}u(qN,"getModelArtifactsForJSONSync");async function Cw(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),qN(n,t,s)}u(Cw,"getModelArtifactsForJSON");function bh(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Sv(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Sv(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new kr(n.weightData).byteLength}}u(bh,"getModelArtifactsInfoForJSON");function wx(n){const e=[];for(const t of n)e.push(...t.weights);return e}u(wx,"getWeightSpecs");function jH(){const n=u(t=>{let s=t<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},"convertMantissa"),e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}u(jH,"computeFloat16MantisaTable");function qH(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}u(qH,"computeFloat16ExponentTable");function KH(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}u(KH,"computeFloat16OffsetTable");function XH(){const n=jH(),e=qH(),t=KH();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],c=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=c}return new Float32Array(r)}}u(XH,"getFloat16Decoder");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pt{static{u(this,"IORouterRegistry")}constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Pt.instance==null&&(Pt.instance=new Pt),Pt.instance}static registerSaveRouter(e){Pt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Pt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Pt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Pt.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Pt.getInstance().loadRouters:Pt.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const YH=u(n=>Pt.registerSaveRouter(n),"registerSaveRouter"),QH=u(n=>Pt.registerLoadRouter(n),"registerLoadRouter"),KN=u(n=>Pt.getSaveHandlers(n),"getSaveHandlers"),JH=u((n,e)=>Pt.getLoadHandlers(n,e),"getLoadHandlers");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sx="tensorflowjs",Cx=1,Li="models_store",Mo="model_info_store";function XN(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}u(XN,"getIndexedDBFactory");function vx(n){const e=n.result;e.createObjectStore(Li,{keyPath:"modelPath"}),e.createObjectStore(Mo,{keyPath:"modelPath"})}u(vx,"setUpDatabase");class Zi{static{u(this,"BrowserIndexedDB")}constructor(e){if(this.indexedDB=XN(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(Sx,Cx);o.onupgradeneeded=()=>vx(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(Li,"readonly"),l=a.objectStore(Li).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=d=>(i.close(),r(l.error)),a.oncomplete=()=>i.close()}else{t.weightData=kr.join(t.weightData);const a=bh(t),c=i.transaction(Mo,"readwrite");let l=c.objectStore(Mo),d;try{d=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(p){return r(p)}let h;d.onsuccess=()=>{h=i.transaction(Li,"readwrite");const p=h.objectStore(Li);let f;try{f=p.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(m){return r(m)}f.onsuccess=()=>s({modelArtifactsInfo:a}),f.onerror=m=>{l=c.objectStore(Mo);const g=l.delete(this.modelPath);g.onsuccess=()=>(i.close(),r(f.error)),g.onerror=y=>(i.close(),r(f.error))}},d.onerror=p=>(i.close(),r(d.error)),c.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}Zi.URL_SCHEME="indexeddb://";const YN=u(n=>j().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Zi.URL_SCHEME)?ZH(n.slice(Zi.URL_SCHEME.length)):null,"indexedDBRouter");Pt.registerSaveRouter(YN);Pt.registerLoadRouter(YN);function ZH(n){return new Zi(n)}u(ZH,"browserIndexedDB");function ej(n){return n.startsWith(Zi.URL_SCHEME)?n.slice(Zi.URL_SCHEME.length):n}u(ej,"maybeStripScheme$1");class tj{static{u(this,"BrowserIndexedDBManager")}constructor(){this.indexedDB=XN()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Sx,Cx);s.onupgradeneeded=()=>vx(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(Mo,"readonly"),a=o.objectStore(Mo).getAll();a.onsuccess=()=>{const c={};for(const l of a.result)c[l.modelPath]=l.modelArtifactsInfo;e(c)},a.onerror=c=>(r.close(),t(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=ej(e),new Promise((t,s)=>{const r=this.indexedDB.open(Sx,Cx);r.onupgradeneeded=()=>vx(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(Mo,"readwrite"),a=i.objectStore(Mo),c=a.get(e);let l;c.onsuccess=()=>{if(c.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const d=a.delete(e),h=u(()=>{l=o.transaction(Li,"readwrite");const f=l.objectStore(Li).delete(e);f.onsuccess=()=>t(c.result.modelArtifactsInfo),f.onerror=m=>s(c.error)},"deleteModelData");d.onsuccess=h,d.onerror=p=>(h(),o.close(),s(c.error))}},c.onerror=d=>(o.close(),s(c.error)),i.oncomplete=()=>{l==null?o.close():l.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo="/",Xa="tensorflowjs_models",QN="info",nj="model_topology",sj="weight_specs",rj="weight_data",oj="model_metadata";function JN(n){return{info:[Xa,n,QN].join(oo),topology:[Xa,n,nj].join(oo),weightSpecs:[Xa,n,sj].join(oo),weightData:[Xa,n,rj].join(oo),modelMetadata:[Xa,n,oj].join(oo)}}u(JN,"getModelKeys");function ZN(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}u(ZN,"removeItems");function ij(n){const e=n.split(oo);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(oo)}u(ij,"getModelPathFromKey");function aj(n){return n.startsWith(ea.URL_SCHEME)?n.slice(ea.URL_SCHEME.length):n}u(aj,"maybeStripScheme");class ea{static{u(this,"BrowserLocalStorage")}constructor(e){if(!j().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=JN(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=bh(e),o=kr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,GH(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw ZN(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=HH(i),t}}ea.URL_SCHEME="localstorage://";const eT=u(n=>j().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ea.URL_SCHEME)?cj(n.slice(ea.URL_SCHEME.length)):null,"localStorageRouter");Pt.registerSaveRouter(eT);Pt.registerLoadRouter(eT);function cj(n){return new ea(n)}u(cj,"browserLocalStorage");class uj{static{u(this,"BrowserLocalStorageManager")}constructor(){N(j().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Xa+oo,s=oo+QN;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=ij(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=aj(e);const t=JN(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return ZN(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oc="://";class Mn{static{u(this,"ModelStoreManagerRegistry")}constructor(){this.managers={}}static getInstance(){return Mn.instance==null&&(Mn.instance=new Mn),Mn.instance}static registerManager(e,t){N(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(oc)&&(e=e.slice(0,e.indexOf(oc))),N(e.length>0,()=>"scheme must not be an empty string.");const s=Mn.getInstance();N(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Mn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Mn.getInstance().managers)}}function zp(n){if(n.indexOf(oc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mn.getSchemes().join(",")}`);return{scheme:n.split(oc)[0],path:n.split(oc)[1]}}u(zp,"parseURL");async function tT(n,e,t=!1){N(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Pt.getLoadHandlers(n);N(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),N(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=Pt.getSaveHandlers(e);N(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),N(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=zp(n).scheme,c=zp(n).path,l=a===zp(n).scheme,d=await r.load();t&&l&&await Mn.getManager(a).removeModel(c);const h=await i.save(d);return t&&!l&&await Mn.getManager(a).removeModel(c),h.modelArtifactsInfo}u(tT,"cloneModelInternal");async function lj(){const n=Mn.getSchemes(),e={};for(const t of n){const s=await Mn.getManager(t).listModels();for(const r in s){const o=t+oc+r;e[o]=s[r]}}return e}u(lj,"listModels");async function dj(n){const e=zp(n);return Mn.getManager(e.scheme).removeModel(e.path)}u(dj,"removeModel");async function hj(n,e){return tT(n,e,!1)}u(hj,"copyModel");async function pj(n,e){return tT(n,e,!0)}u(pj,"moveModel");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fj{static{u(this,"PlatformBrowser")}constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!j().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return CN(e)}}if(j().get("IS_BROWSER")){j().setPlatform("browser",new fj);try{Mn.registerManager(ea.URL_SCHEME,new uj)}catch{}try{Mn.registerManager(Zi.URL_SCHEME,new tj)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={importFetch:()=>require("node-fetch")};let eb;class gj{static{u(this,"PlatformNode")}constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return j().global.fetch!=null?j().global.fetch(e,t):(eb==null&&(eb=mj.importFetch()),eb(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}j().get("IS_NODE")&&!j().get("IS_BROWSER")&&j().setPlatform("node",new gj);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(n,e="float32",t){return e=e||"float32",Ds(n),new on(n,e,t)}u(Oe,"buffer");/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(n,e){const t=_(n,"x","cast");if(!nH(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return F.runKernel(Jc,s,r)}u(yj,"cast_");const le=D({cast_:yj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(n){const t={x:_(n,"x","clone","string_or_numeric")};return F.runKernel(du,t)}u(bj,"clone_");const ho=D({clone_:bj});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,e=!1){n.toString(e)}u(nT,"print");/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */PN();const xj={buffer:Oe,cast:le,clone:ho,print:nT};RH(xj);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wj(n,e){let t=_(n,"a","add"),s=_(e,"b","add");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(ya,r)}u(wj,"add_");const ee=D({add_:wj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(n,e){let t=_(n,"a","floorDiv"),s=_(e,"b","floorDiv");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(uu,r)}u(Sj,"floorDiv_");const vw=D({floorDiv_:Sj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(n,e){let t=_(n,"a","div"),s=_(e,"b","div");if([t,s]=jt(t,s),t.dtype==="int32"&&s.dtype==="int32")return vw(t,s);const r={a:t,b:s},o={};return F.runKernel(su,r,o)}u(Cj,"div_");const Se=D({div_:Cj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n,e){let t=_(n,"a","mul"),s=_(e,"b","mul");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(wu,r)}u(vj,"mul_");const P=D({mul_:vj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(n){const e=_(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return F.runKernel(kd,t)}else{const t={x:e};return F.runKernel(yd,t)}}u(Ij,"abs_");const nn=D({abs_:Ij});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(n){const t={x:_(n,"x","acos")};return F.runKernel(Hc,t)}u(kj,"acos_");const sT=D({acos_:kj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n){const t={x:_(n,"x","acosh")};return F.runKernel(jc,t)}u($j,"acosh_");const rT=D({acosh_:$j});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){N(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),N(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>_(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Ge(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return F.runKernel(bd,s)}u(Nj,"addN_");const Tj=D({addN_:Nj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(n,e=null,t=!1){const r={x:_(n,"x","all","bool")},o={axis:e,keepDims:t};return F.runKernel(ym,r,o)}u(Ej,"all_");const Iw=D({all_:Ej});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _j(n,e=null,t=!1){const r={x:_(n,"x","any","bool")},o={axis:e,keepDims:t};return F.runKernel(bm,r,o)}u(_j,"any_");const Cf=D({any_:_j});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(n,e=0){const s={x:_(n,"x","argMax")},r={axis:e};return F.runKernel(xd,s,r)}u(Rj,"argMax_");const vc=D({argMax_:Rj});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(n,e=0){const s={x:_(n,"x","argMin")},r={axis:e};return F.runKernel(wd,s,r)}u(Aj,"argMin_");const oT=D({argMin_:Aj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(n){const t={x:_(n,"x","asin")};return F.runKernel(qc,t)}u(Dj,"asin_");const iT=D({asin_:Dj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oj(n){const t={x:_(n,"x","asinh")};return F.runKernel(Kc,t)}u(Oj,"asinh_");const aT=D({asinh_:Oj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(n){const t={x:_(n,"x","atan")};return F.runKernel(Xc,t)}u(Fj,"atan_");const cT=D({atan_:Fj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n,e){let t=_(n,"a","atan2"),s=_(e,"b","atan2");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(Qc,r)}u(Pj,"atan2_");const uT=D({atan2_:Pj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lj(n){const t={x:_(n,"x","atanh")};return F.runKernel(Yc,t)}u(Lj,"atanh_");const lT=D({atanh_:Lj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(n,e,t,s,r="NHWC",o){const i=n[3],a=[...e,i],c=vs(r);return kt(n,a,t,o,s,null,null,c)}u(pi,"computeDilation2DInfo");function Fn(n,e,t,s,r,o,i="channelsLast"){const[a,c]=Bl(e);let l;if(i==="channelsLast")l=[a,c,n[3],n[3]];else if(i==="channelsFirst")l=[a,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return kt(n,l,t,s,r,o,!1,i)}u(Fn,"computePool2DInfo");function Os(n,e,t,s,r,o,i="NDHWC"){const[a,c,l]=Ix(e);let d,h;if(i==="NDHWC")h="channelsLast",d=[a,c,l,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",d=[a,c,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return $r(n,d,t,s,r,!1,h,o)}u(Os,"computePool3DInfo");function kt(n,e,t,s,r,o,i=!1,a="channelsLast"){let[c,l,d,h]=[-1,-1,-1,-1];if(a==="channelsLast")[c,l,d,h]=n;else if(a==="channelsFirst")[c,h,l,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,,m]=e,[g,y]=Bl(t),[b,x]=Bl(s),S=ic(p,b),w=ic(f,x),{padInfo:C,outHeight:v,outWidth:k}=Bj(r,l,d,g,y,S,w,o,a),$=i?m*h:m;let T;return a==="channelsFirst"?T=[c,$,v,k]:a==="channelsLast"&&(T=[c,v,k,$]),{batchSize:c,dataFormat:a,inHeight:l,inWidth:d,inChannels:h,outHeight:v,outWidth:k,outChannels:$,padInfo:C,strideHeight:g,strideWidth:y,filterHeight:p,filterWidth:f,effectiveFilterHeight:S,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:n,outShape:T,filterShape:e}}u(kt,"computeConv2DInfo");function $r(n,e,t,s,r,o=!1,i="channelsLast",a){let[c,l,d,h,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[c,l,d,h,p]=n;else if(i==="channelsFirst")[c,p,l,d,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[f,m,g,,y]=e,[b,x,S]=Ix(t),[w,C,v]=Ix(s),k=ic(f,w),$=ic(m,C),T=ic(g,v),{padInfo:E,outDepth:R,outHeight:O,outWidth:L}=Wj(r,l,d,h,b,x,S,k,$,T,a),z=o?y*p:y;let W;return i==="channelsFirst"?W=[c,z,R,O,L]:i==="channelsLast"&&(W=[c,R,O,L,z]),{batchSize:c,dataFormat:i,inDepth:l,inHeight:d,inWidth:h,inChannels:p,outDepth:R,outHeight:O,outWidth:L,outChannels:z,padInfo:E,strideDepth:b,strideHeight:x,strideWidth:S,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:k,effectiveFilterHeight:$,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:C,dilationWidth:v,inShape:n,outShape:W,filterShape:e}}u($r,"computeConv3DInfo");function Mj(n,e,t,s,r){s==null&&(s=kw(n,e,t));const o=n[0],i=n[1],a=Wl((o-e+2*s)/t+1,r),c=Wl((i-e+2*s)/t+1,r);return[a,c]}u(Mj,"computeOutputShape2D");function zj(n,e,t,s,r,o){r==null&&(r=kw(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(i[a]=Wl((n[a]-e[a]+2*r)/s[a]+1,o));return i}u(zj,"computeOutputShape4D");function kw(n,e,t,s=1){const r=ic(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}u(kw,"computeDefaultPad");function Bl(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}u(Bl,"parseTupleParam");function Ix(n){return typeof n=="number"?[n,n,n]:n}u(Ix,"parse3TupleParam");function ic(n,e){return e<=1?n:n+(n-1)*(e-1)}u(ic,"getEffectiveFilterSize");function Bj(n,e,t,s,r,o,i,a,c){let l,d,h;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=Mj([e,t],o,s,n,a);d=f[0],h=f[1]}else if(n==="same"){d=Math.ceil(e/s),h=Math.ceil(t/r);const p=Math.max(0,(d-1)*s+o-e),f=Math.max(0,(h-1)*r+i-t),m=Math.floor(p/2),g=p-m,y=Math.floor(f/2),b=f-y;l={top:m,bottom:g,left:y,right:b,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-o+1)/s),h=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const p=c==="channelsLast"?n[1][0]:n[2][0],f=c==="channelsLast"?n[1][1]:n[2][1],m=c==="channelsLast"?n[2][0]:n[3][0],g=c==="channelsLast"?n[2][1]:n[3][1];l={top:p,bottom:f,left:m,right:g,type:p===0&&f===0&&m===0&&g===0?"VALID":"EXPLICIT"},d=Wl((e-o+p+f)/s+1,a),h=Wl((t-i+m+g)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:d,outWidth:h}}u(Bj,"getPadAndOutInfo");function Wj(n,e,t,s,r,o,i,a,c,l,d){let h,p,f,m;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=zj([e,t,s,1],[a,c,l],1,[r,o,i],n,d);p=y[0],f=y[1],m=y[2]}else if(n==="same"){p=Math.ceil(e/r),f=Math.ceil(t/o),m=Math.ceil(s/i);const g=(p-1)*r+a-e,y=(f-1)*o+c-t,b=(m-1)*i+l-s,x=Math.floor(g/2),S=g-x,w=Math.floor(y/2),C=y-w,v=Math.floor(b/2),k=b-v;h={top:w,bottom:C,left:v,right:k,front:x,back:S,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:p,outHeight:f,outWidth:m}}u(Wj,"get3DPadAndOutInfo");function Wl(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}u(Wl,"round$4");function Qo(n){const[e,t,s]=Bl(n);return e===1&&t===1&&s===1}u(Qo,"tupleValuesAreOne");function hn(n,e){return Qo(n)||Qo(e)}u(hn,"eitherStridesOrDilationsAreOne");function ta(n){return Bl(n).every(e=>e>0)}u(ta,"stridesOrDilationsArePositive");function vs(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}u(vs,"convertConv2DDataFormat");function Hn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")N(wc(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{N(wc(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}u(Hn,"checkPadOnDimRoundingMode");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(n,e){const s={x:_(n,"x","reshape","string_or_numeric")},r={shape:e};return F.runKernel(oh,s,r)}u(Vj,"reshape_");const M=D({reshape_:Vj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n,e,t,s,r){const o=_(n,"x","avgPool","float32"),i=1;N(hn(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,c=!1;o.rank===3&&(c=!0,a=M(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Hn("avgPool",s,r);const l={x:a},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let h=F.runKernel(Sd,l,d);return h=le(h,o.dtype),c?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}u(Uj,"avgPool_");const yg=D({avgPool_:Uj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(n,e,t,s,r,o="NDHWC"){const i=_(n,"x","avgPool3d","float32");let a=i,c=!1;i.rank===4&&(c=!0,a=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),N(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),N(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Hn("avgPool3d",s,r);const l={x:a},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let h=F.runKernel(Cd,l,d);return h=le(h,a.dtype),c?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}u(Gj,"avgPool3d_");const dT=D({avgPool3d_:Gj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(n,e=0){N(n.length>=1,()=>"Pass at least one tensor to concat");const t=wf(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return ho(t[0]);const s=t,r={axis:e};return F.runKernel($d,s,r)}u(Hj,"concat_");const Wt=D({concat_:Hj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n,e,t=!1,s=!1){let r=_(n,"a","matMul"),o=_(e,"b","matMul");[r,o]=jt(r,o);const i={a:r,b:o},a={transposeA:t,transposeB:s};return F.runKernel(vd,i,a)}u(jj,"matMul_");const Qe=D({matMul_:jj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qj(n){const t={x:_(n,"x","sigmoid","float32")};return F.runKernel(Ru,t)}u(qj,"sigmoid_");const Br=D({sigmoid_:qj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(n,e,t){const s=_(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return F.runKernel(lh,r,o)}u(Kj,"slice_");const Je=D({slice_:Kj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(n){const t={x:_(n,"x","tanh","float32")};return F.runKernel(Lu,t)}u(Xj,"tanh_");const na=D({tanh_:Xj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(n,e,t,s,r,o){const i=_(n,"forgetBias","basicLSTMCell"),a=_(e,"lstmKernel","basicLSTMCell"),c=_(t,"lstmBias","basicLSTMCell"),l=_(s,"data","basicLSTMCell"),d=_(r,"c","basicLSTMCell"),h=_(o,"h","basicLSTMCell"),p=Wt([l,h],1),f=Qe(p,a),m=ee(f,c),g=m.shape[0],y=m.shape[1]/4,b=[g,y],x=Je(m,[0,0],b),S=Je(m,[0,y],b),w=Je(m,[0,y*2],b),C=Je(m,[0,y*3],b),v=ee(P(Br(x),na(S)),P(d,Br(ee(i,w)))),k=P(na(v),Br(C));return[v,k]}u(Yj,"basicLSTMCell_");const Qj=D({basicLSTMCell_:Yj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(n,e,t){const s=_(n,"x","batchToSpaceND"),r=e.reduce((a,c)=>a*c);N(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),N(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),N(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return F.runKernel(Id,o,i)}u(Jj,"batchToSpaceND_");const bg=D({batchToSpaceND_:Jj});function Zj(n){let e;return n.rank===0||n.rank===1?e=M(n,[1,1,1,n.size]):n.rank===2?e=M(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}u(Zj,"xAs4D");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eq(n,e,t,s,r,o){o==null&&(o=.001);const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),c=_(t,"variance","batchNorm");let l;r!=null&&(l=_(r,"scale","batchNorm"));let d;s!=null&&(d=_(s,"offset","batchNorm")),N(a.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(d==null||a.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:Zj(i),scale:l,offset:d,mean:a,variance:c},f={varianceEpsilon:o},m=F.runKernel(Fd,p,f);return M(m,i.shape)}u(eq,"batchNorm_");const xh=D({batchNorm_:eq});function tq(n,e,t,s,r,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),c=_(t,"variance","batchNorm");let l;r!=null&&(l=_(r,"scale","batchNorm"));let d;return s!=null&&(d=_(s,"offset","batchNorm")),N(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),N(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),d!=null&&N(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),xh(i,a,c,d,l,o)}u(tq,"batchNorm2d_");const hT=D({batchNorm2d_:tq});function nq(n,e,t,s,r,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),c=_(t,"variance","batchNorm");let l;r!=null&&(l=_(r,"scale","batchNorm"));let d;return s!=null&&(d=_(s,"offset","batchNorm")),N(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),N(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),d!=null&&N(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),xh(i,a,c,d,l,o)}u(nq,"batchNorm3d_");const pT=D({batchNorm3d_:nq});function sq(n,e,t,s,r,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),c=_(t,"variance","batchNorm");let l;r!=null&&(l=_(r,"scale","batchNorm"));let d;return s!=null&&(d=_(s,"offset","batchNorm")),N(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),N(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),d!=null&&N(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),xh(i,a,c,d,l,o)}u(sq,"batchNorm4d_");const fT=D({batchNorm4d_:sq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rq(n,e,t){const s=_(n,"x","bincount"),r=_(e,"weights","bincount");N(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),N(t>=0,()=>`size must be non-negative, but got ${t}.`),N(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return F.runKernel(Sm,o,i)}u(rq,"bincount_");const mT=D({bincount_:rq});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(n,e){const t=_(n,"x","bitwiseAnd"),s=_(e,"y","bitwiseAnd");if(!Ge(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return F.runKernel(Cm,r)}u(oq,"bitwiseAnd_");const iq=D({bitwiseAnd_:oq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aq(n,e){const t=_(n,"s0","broadcastArgs","int32"),s=_(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return F.runKernel(vm,r)}u(aq,"broadcastArgs_");const cq=D({broadcastArgs_:aq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uq(n,e){let t=_(n,"broadcastTo","x");const s=t.shape;if(Ds(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=M(t,l)}const r=t.shape,o=Array.from(e);for(let l=e.length-1;l>=0;l--)if(r[l]===e[l])o[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((l,d)=>l>1?d:-1).filter(l=>l>=0).length===0)return ho(t);const a={x:t},c={reps:o};return F.runKernel(Mu,a,c)}u(uq,"broadcastTo_");const ac=D({broadcastTo_:uq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(n){const t={x:_(n,"x","ceil","float32")};return F.runKernel(Zc,t)}u(lq,"ceil_");const gT=D({ceil_:lq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bu(n,e,t){Ds(n),t=t||ga(e);const s={shape:n,value:e,dtype:t};return F.runKernel(Mm,{},s)}u(Bu,"fill$3");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dq(n,e,t){const s=_(n,"x","clipByValue");if(N(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Bu(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return F.runKernel(eu,r,o)}u(dq,"clipByValue_");const gs=D({clipByValue_:dq});function hq(n){return Wt(n,0)}u(hq,"concat1d_");const yT=D({concat1d_:hq});function pq(n,e){return Wt(n,e)}u(pq,"concat2d_");const bT=D({concat2d_:pq});function fq(n,e){return Wt(n,e)}u(fq,"concat3d_");const xT=D({concat3d_:fq});function mq(n,e){return Wt(n,e)}u(mq,"concat4d_");const wT=D({concat4d_:mq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gq(n,e,t,s,r="NHWC",o=[1,1],i){const a=_(n,"x","conv2d","float32"),c=_(e,"filter","conv2d","float32");let l=a,d=!1;a.rank===3&&(d=!0,l=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),Hn("conv2d",s,i);const h=r==="NHWC"?l.shape[3]:l.shape[1];N(h===c.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),N(hn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),N(ta(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),N(ta(t),()=>"Error in conv2D: Strides should be larger than 0.");const p={x:l,filter:c},f={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},m=F.runKernel(Nd,p,f);return d?M(m,[m.shape[1],m.shape[2],m.shape[3]]):m}u(gq,"conv2d_");const Jo=D({conv2d_:gq});function yq(n,e,t,s,r="NWC",o=1,i){const a=_(n,"x","conv1d"),c=_(e,"filter","conv1d");let l=a,d=!1;a.rank===2&&(d=!0,l=M(a,[1,a.shape[0],a.shape[1]])),N(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),N(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),Hn("conv1d",s,i),N(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`),N(hn(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),N(ta(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),N(ta(t),()=>"Error in conv1D: Stride should be larger than 0."),N(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=M(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=M(l,[l.shape[0],1,l.shape[1],l.shape[2]]),y=Jo(p,h,[1,t],s,"NHWC",[1,o],i);return d?M(y,[y.shape[2],y.shape[3]]):M(y,[y.shape[0],y.shape[2],y.shape[3]])}u(yq,"conv1d_");const $w=D({conv1d_:yq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bq(n,e,t,s,r,o="NHWC",i){N(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,c=e,l=!1;e.rank===3&&(l=!0,c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),N(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),N(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),N(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const d=o==="NHWC"?a[3]:a[1],h=o==="NHWC"?c.shape[3]:c.shape[1];N(d===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${t.shape[2]}.`),N(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Hn("conv2dDerInput",r,i);const p={dy:c,filter:t},f={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},m=F.runKernel(Td,p,f);return l?M(m,[m.shape[1],m.shape[2],m.shape[3]]):m}u(bq,"conv2DBackpropInput_");const Nw=D({conv2DBackpropInput_:bq});function xq(n,e,t,s,r,o){const i=_(n,"x","conv2dTranspose"),a=_(e,"filter","conv2dTranspose");return Nw(t,i,a,s,r,"NHWC",o)}u(xq,"conv2dTranspose_");const Tw=D({conv2dTranspose_:xq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wq(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=_(n,"x","conv3d"),a=_(e,"filter","conv3d");let c=i,l=!1;i.rank===4&&(l=!0,c=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),N(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),N(c.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${a.shape[3]}.`),N(hn(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),N(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),N(ta(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),N(ta(t),()=>"Error in conv3D: Strides should be larger than 0.");const d={x:c,filter:a},h={strides:t,pad:s,dataFormat:r,dilations:o},p=F.runKernel(Ed,d,h);return l?M(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}u(wq,"conv3d_");const ST=D({conv3d_:wq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sq(n,e,t,s,r){N(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const c=o[4],l=i.shape[4];N(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),N(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),N(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),N(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),N(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const d={dy:i,filter:t},h={pad:r,strides:s,inputShape:o},p=F.runKernel(Nm,d,h);return a?M(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}u(Sq,"conv3DBackpropInput_");const CT=D({conv3DBackpropInput_:Sq});function Cq(n,e,t,s,r){const o=_(n,"x","conv3dTranspose"),i=_(e,"filter","conv3dTranspose");return CT(t,o,i,s,r)}u(Cq,"conv3dTranspose_");const vT=D({conv3dTranspose_:Cq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vq(n){const t={x:_(n,"x","cos","float32")};return F.runKernel(tu,t)}u(vq,"cos_");const xg=D({cos_:vq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(n){const t={x:_(n,"x","cosh","float32")};return F.runKernel(nu,t)}u(Iq,"cosh_");const Ew=D({cosh_:Iq});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(n,e=0,t=!1,s=!1){const o={x:_(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return F.runKernel(Tm,o,i)}u(kq,"cumprod_");const vf=D({cumprod_:kq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(n,e=0,t=!1,s=!1){const o={x:_(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return F.runKernel(_d,o,i)}u($q,"cumsum_");const _w=D({cumsum_:$q});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(n,e,t,s=!1){const r=_(n,"x","denseBincount"),o=_(e,"weights","denseBincount");N(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),N(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),N(t>=0,()=>`size must be non-negative, but got ${t}.`),N(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:t,binaryOutput:s};return F.runKernel(_m,i,a)}u(Nq,"denseBincount_");const kx=D({denseBincount_:Nq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tq(n,e,t="NHWC"){const s=_(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];N(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),N(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),N(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),N(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},c={blockSize:e,dataFormat:t};return F.runKernel(Rm,a,c)}u(Tq,"depthToSpace_");const IT=D({depthToSpace_:Tq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eq(n,e,t,s,r="NHWC",o=[1,1],i){const a=_(n,"x","depthwiseConv2d","float32"),c=_(e,"filter","depthwiseConv2d","float32");let l=a,d=!1;a.rank===3&&(d=!0,l=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1];N(h===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${c.shape[2]}.`),Hn("depthwiseConv2d",s,i);const p={x:l,filter:c},f={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},m=F.runKernel(Rd,p,f);return d?M(m,[m.shape[1],m.shape[2],m.shape[3]]):m}u(Eq,"depthwiseConv2d_");const wh=D({depthwiseConv2d_:Eq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _q(n){const t={x:_(n,"x","diag")};return F.runKernel(Om,t)}u(_q,"diag_");const Rq=D({diag_:_q});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n,e,t,s,r=[1,1],o="NHWC"){const i=_(n,"x","dilation2d"),a=_(e,"filter","dilation2d");N(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),N(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),N(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let c=i,l=!1;i.rank===3&&(c=M(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),N(c.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${a.shape[2]}`);const d={x:c,filter:a},h={strides:t,pad:s,dilations:r},p=F.runKernel(Ad,d,h);return l?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}u(Aq,"dilation2d_");const kT=D({dilation2d_:Aq});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}u(Zo,"getBroadcastDims$1");function dn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}u(dn,"getReductionAxes");function Ne(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)s[t-r-1]=i;else if(i===1)s[t-r-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=o}return s}u(Ne,"assertAndGetBroadcastShape");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(n,e){let t=_(n,"a","equal","string_or_numeric"),s=_(e,"b","equal","string_or_numeric");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(Dd,r)}u(Dq,"equal_");const br=D({equal_:Dq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oq(n,e,t){const s=_(e,"a","where"),r=_(t,"b","where"),o=_(n,"condition","where","bool"),i=Ne(Ne(o.shape,s.shape),r.shape),a=ac(o,i),c=ac(s,i),l=ac(r,i),d={condition:a,t:c,e:l};return F.runKernel(uh,d)}u(Oq,"where_");const Dn=D({where_:Oq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fq(n){const t={x:_(n,"x","zerosLike")};return F.runKernel(yh,t)}u(Fq,"zerosLike_");const et=D({zerosLike_:Fq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pq(n,e){let t=_(n,"a","div"),s=_(e,"b","div");[t,s]=jt(t,s);const r=Se(t,s),o=et(r),i=br(s,o);return Dn(i,o,r)}u(Pq,"divNoNan_");const $T=D({divNoNan_:Pq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lq(n,e){const t=_(n,"t1","dot"),s=_(e,"t2","dot");N((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(N(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=M(t,[1,-1]),a=M(s,[-1,1]),c=Qe(i,a);return M(c,[])}else if(t.rank===1&&s.rank===2){const i=M(t,[1,-1]),a=M(s,[s.shape[0],s.shape[1]]),c=Qe(i,a);return M(c,[c.size])}else if(t.rank===2&&s.rank===1){const i=M(s,[-1,1]),a=Qe(t,i);return M(a,[a.size])}else{const i=M(s,[s.shape[0],s.shape[1]]);return Qe(t,i)}}u(Lq,"dot_");const NT=D({dot_:Lq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mq(n,...e){const t=e.map((r,o)=>_(r,`tensors${o}`,"einsum")),s={equation:n};return F.runKernel(Fm,t,s)}u(Mq,"einsum_");const Ya=D({einsum_:Mq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(n){const t={x:_(n,"x","elu","float32")};return F.runKernel(ru,t)}u(zq,"elu_");const Sh=D({elu_:zq});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bq(n,e){const t=_(n,"x","ensureShape","string_or_numeric");if(!eH(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}u(Bq,"ensureShape_");const Wq=D({ensureShape_:Bq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vq(n){let e=_(n,"x","erf");N(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=le(e,"float32"));const t={x:e};return F.runKernel(ou,t)}u(Vq,"erf_");const Rw=D({erf_:Vq});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}u(Aw,"axesAreInnerMostDims");function TT(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[o++]):r.push(e[i++]);return r}u(TT,"combineLocations");function Yt(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}u(Yt,"computeOutAndReduceShapes");function qt(n,e){const t=e.map(s=>1);return TT(n,t,e)}u(qt,"expandShapeToKeepDim");function tn(n,e,t){N(Aw(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}u(tn,"assertAxesAreInnerMostDims");function xt(n,e){if(Aw(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}u(xt,"getAxesPermutation");function Kr(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}u(Kr,"getUndoAxesPermutation");function $t(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}u($t,"getInnerMostAxes");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uq(n,e=null,t=!1){const r={x:_(n,"x","max")},o={reductionIndices:e,keepDims:t};return F.runKernel(Hd,r,o)}u(Uq,"max_");const tr=D({max_:Uq});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gq(n,e=null,t=!1){const r={x:_(n,"x","min")},o={axis:e,keepDims:t};return F.runKernel(Xd,r,o)}u(Gq,"min_");const Vl=D({min_:Gq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hq(n,e){let t=_(n,"base","pow"),s=_(e,"exp","pow");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(Su,r)}u(Hq,"pow_");const So=D({pow_:Hq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ve(n,e){if((sr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&sr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return hi(n,[],[],e)}u(ve,"scalar");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jq(n){const t={x:_(n,"x","sqrt","float32")};return F.runKernel(Du,t)}u(jq,"sqrt_");const Tn=D({sqrt_:jq});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qq(n){const e=_(n,"x","square"),t={};return F.runKernel("Square",{x:e},t)}u(qq,"square_");const wt=D({square_:qq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kq(n,e=null,t=!1){let s=_(n,"x","sum");s.dtype==="bool"&&(s=le(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return F.runKernel(dh,r,o)}u(Kq,"sum_");const ye=D({sum_:Kq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xq(n,e="euclidean",t=null,s=!1){n=_(n,"x","norm");const r=ET(n,e,t);let o=r.shape;if(s){const i=Pe(t,n.shape);o=qt(r.shape,i)}return M(r,o)}u(Xq,"norm_");function ET(n,e,t=null){if(n.rank===0)return nn(n);if(n.rank!==1&&t===null)return ET(M(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ye(nn(n),t);if(e===1/0)return tr(nn(n),t);if(e===-1/0)return Vl(nn(n),t);if(e==="euclidean"||e===2)return Tn(ye(So(nn(n),ve(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return tr(ye(nn(n),t[0]),t[1]-1);if(e===1/0)return tr(ye(nn(n),t[1]),t[0]);if(e===-1/0)return Vl(ye(nn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Tn(ye(wt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}u(ET,"normImpl");const Ch=D({norm_:Xq});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(n,e=null,t=!1){return Ch(n,"euclidean",e,t)}u(Yq,"euclideanNorm_");const _T=D({euclideanNorm_:Yq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(n){const t={x:_(n,"x","exp")};return F.runKernel(iu,t)}u(Qq,"exp_");const os=D({exp_:Qq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(n,e=0){const t=_(n,"x","expandDims","string_or_numeric");N(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return F.runKernel(Od,s,r)}u(Jq,"expandDims_");const Bn=D({expandDims_:Jq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zq(n){const t={x:_(n,"x","expm1")};return F.runKernel(au,t)}u(Zq,"expm1_");const RT=D({expm1_:Zq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n,e){const t=_(n,"x","tile","string_or_numeric");N(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return F.runKernel(Mu,s,r)}u(e5,"tile_");const Ks=D({tile_:e5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n,e,t,s="float32"){e==null&&(e=n);const r=Oe([n,e],s),o=n<=e?n:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=M(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return Ks(Bn(i,0),[t[0],1,1]);if(t.length===2)return Ks(Bn(Bn(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ks(Bn(Bn(Bn(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}u(t5,"eye_");const Dw=D({eye_:t5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const t={x:_(n,"x","floor","float32")};return F.runKernel(cu,t)}u(n5,"floor_");const vh=D({floor_:n5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n,e,t=0,s=0){const r=_(n,"x","gather"),o=_(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:t,batchDims:s};return F.runKernel(Pd,i,a)}u(s5,"gather_");const sa=D({gather_:s5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n,e){let t=_(n,"a","greater","string_or_numeric"),s=_(e,"b","greater","string_or_numeric");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(Ld,r)}u(r5,"greater_");const Is=D({greater_:r5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(n,e){let t=_(n,"a","greaterEqual","string_or_numeric"),s=_(e,"b","greaterEqual","string_or_numeric");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(lu,r)}u(o5,"greaterEqual_");const fi=D({greaterEqual_:o5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(n){const t={input:_(n,"input","imag")};return F.runKernel(Vm,t)}u(i5,"imag_");const wg=D({imag_:i5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(n){const t={x:_(n,"x","isFinite")};return F.runKernel(hu,t)}u(a5,"isFinite_");const AT=D({isFinite_:a5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n){const t={x:_(n,"x","isInf")};return F.runKernel(pu,t)}u(c5,"isInf_");const DT=D({isInf_:c5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n){const t={x:_(n,"x","isNaN")};return F.runKernel(fu,t)}u(u5,"isNaN_");const OT=D({isNaN_:u5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(n,e=.2){const s={x:_(n,"x","leakyRelu")},r={alpha:e};return F.runKernel(Md,s,r)}u(l5,"leakyRelu_");const Sg=D({leakyRelu_:l5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(n,e){let t=_(n,"a","less","string_or_numeric"),s=_(e,"b","less","string_or_numeric");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(zd,r)}u(d5,"less_");const Ul=D({less_:d5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(n,e){let t=_(n,"a","lessEqual","string_or_numeric"),s=_(e,"b","lessEqual","string_or_numeric");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(Bd,r)}u(h5,"lessEqual_");const wa=D({lessEqual_:h5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return F.runKernel(Um,{},s)}u(p5,"linspace");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(n,e=5,t=1,s=1,r=.5){const o=_(n,"x","localResponseNormalization");N(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),N(wc(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:i},l={depthRadius:e,bias:t,alpha:s,beta:r},d=F.runKernel(Gd,c,l);return a?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}u(f5,"localResponseNormalization_");const FT=D({localResponseNormalization_:f5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const t={x:_(n,"x","log","float32")};return F.runKernel(mu,t)}u(m5,"log_");const Rs=D({log_:m5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(n){const t={x:_(n,"x","log1p")};return F.runKernel(gu,t)}u(g5,"log1p_");const Cg=D({log1p_:g5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n,e){N(cx(n),()=>"The f passed in variableGrads(f) must be a function"),N(e==null||Array.isArray(e)&&e.every(l=>l instanceof xf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in F.registeredVariables)e.push(F.registeredVariables[l])}const s=t?e.filter(l=>!l.trainable):null,r=e.length;e=e.filter(l=>l.trainable),N(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=F.gradients(n,e,null,o);N(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const c={};return e.forEach((l,d)=>{a[d]!=null&&(c[l.name]=a[d])}),s?.forEach(l=>c[l.name]=null),{value:i,grads:c}}u(y5,"variableGrads");function Co(n){return F.customGrad(n)}u(Co,"customGrad");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(n){const t={x:_(n,"x","neg")};return F.runKernel(Qd,t)}u(b5,"neg_");const Rt=D({neg_:b5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(n){const t={x:_(n,"x","softplus")};return F.runKernel(Au,t)}u(x5,"softplus_");const Wu=D({softplus_:x5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(n){const e=_(n,"x","logSigmoid");return Co(s=>({value:Rt(Wu(Rt(s))),gradFunc:u(i=>P(i,Br(Rt(s))),"gradFunc")}))(e)}u(w5,"logSigmoid_");const PT=D({logSigmoid_:w5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(n,e){let t=_(n,"a","sub"),s=_(e,"b","sub");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(Fu,r)}u(S5,"sub_");const fe=D({sub_:S5});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(n,e=-1){const t=_(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Co((r,o)=>{const a=tr(r,e,!0),c=fe(r,a),l=fe(le(c,"float32"),Rs(ye(os(c),e,!0)));return o([l]),{value:l,gradFunc:u((h,p)=>{const[f]=p,m=!0,g=os(f);return fe(h,P(ye(h,e,m),g))},"gradFunc")}})(t)}u(C5,"logSoftmax_");const Ow=D({logSoftmax_:C5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(n,e=null,t=!1){const s=_(n,"x","logSumExp"),r=Pe(e,s.shape),o=tr(s,r,!0),i=fe(s,o),a=os(i),c=ye(a,r),l=Rs(c),d=ee(M(o,l.shape),l);if(t){const h=qt(d.shape,r);return M(d,h)}return d}u(v5,"logSumExp_");const vg=D({logSumExp_:v5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n,e){const t=_(n,"a","logicalAnd","bool"),s=_(e,"b","logicalAnd","bool");Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(Wd,r)}u(I5,"logicalAnd_");const Ur=D({logicalAnd_:I5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(n){const t={x:_(n,"x","logicalNot","bool")};return F.runKernel(Vd,t)}u(k5,"logicalNot_");const Ig=D({logicalNot_:k5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n,e){const t=_(n,"a","logicalOr","bool"),s=_(e,"b","logicalOr","bool");Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(Ud,r)}u($5,"logicalOr_");const Fw=D({logicalOr_:$5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(n,e){const t=_(n,"a","logicalXor","bool"),s=_(e,"b","logicalXor","bool");return Ne(t.shape,s.shape),Ur(Fw(n,e),Ig(Ur(n,e)))}u(N5,"logicalXor_");const LT=D({logicalXor_:N5});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cp=2147483648;function T5(n,e,t="left"){const s=_(n,"sortedSequence","searchSorted"),r=_(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=M(s,[-1,o]),c=M(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(U(c.shape)>=cp)throw new Error(`values tensor size must less than ${cp}`);if(a.shape[1]>=cp)throw new Error(`trailing dim_size must less than ${cp} for int32 output type, was ${a.shape[1]}`);const l={sortedSequence:a,values:c},d={side:t};return F.runKernel(sg,l,d)}u(T5,"searchSorted_");const Pw=D({searchSorted_:T5});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n,e){return Pw(n,e,"left")}u(E5,"lowerBound$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(n,e,t,s,r){const o=_(n,"x","maxPool"),i=1;let a=o,c=!1;o.rank===3&&(c=!0,a=M(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),N(hn(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Hn("maxPool",s,r);const l={x:a},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r},h=F.runKernel(jd,l,d);return c?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}u(_5,"maxPool_");const kg=D({maxPool_:_5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n,e=[1,1,1],t,s,r,o="NDHWC"){const i=_(n,"x","maxPool3d");let a=i,c=!1;i.rank===4&&(c=!0,a=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),N(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Hn("maxPool3d",s,r);const l={x:a},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},h=F.runKernel(qd,l,d);return c?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}u(R5,"maxPool3d_");const MT=D({maxPool3d_:R5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(n,e,t,s,r=!1){const i={x:_(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},c=F.runKernel(qm,i,a);return{result:c[0],indexes:c[1]}}u(A5,"maxPoolWithArgmax_");const D5=D({maxPoolWithArgmax_:A5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(n,e){let t=_(n,"a","maximum"),s=_(e,"b","maximum");[t,s]=jt(t,s),t.dtype==="bool"&&(t=le(t,"int32"),s=le(s,"int32")),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(yu,r)}u(O5,"maximum_");const Io=D({maximum_:O5});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n,e=null,t=!1){const r={x:_(n,"x","mean")},o={axis:e,keepDims:t};return F.runKernel(Kd,r,o)}u(F5,"mean_");const Gt=D({mean_:F5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(n,e="float32"){if(Ds(n),e==="complex64"){const s=Zt(n,"float32"),r=Zt(n,"float32");return Xo(s,r)}const t=Nn(U(n),e);return F.makeTensor(t,n,e)}u(Zt,"zeros$1");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(n,e="float32"){if(Ds(n),e==="complex64"){const s=ms(n,"float32"),r=Zt(n,"float32");return Xo(s,r)}const t=aw(U(n),e);return F.makeTensor(t,n,e)}u(ms,"ones");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=_(n,"x","meshgrid",n instanceof Mt?n.dtype:"float32");if(e===void 0)return[s];let r=_(e,"y","meshgrid",e instanceof Mt?e.dtype:"float32");const o=U(s.shape),i=U(r.shape);return t==="xy"?(s=M(s,[1,-1]),r=M(r,[-1,1]),[Qe(ms([i,1],s.dtype),s),Qe(r,ms([1,o],r.dtype))]):(s=M(s,[-1,1]),r=M(r,[1,-1]),[Qe(s,ms([1,i],s.dtype)),Qe(ms([o,1],r.dtype),r)])}u(P5,"meshgrid");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L5(n,e){let t=_(n,"a","minimum"),s=_(e,"b","minimum");[t,s]=jt(t,s),t.dtype==="bool"&&(t=le(t,"int32"),s=le(s,"int32")),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(bu,r)}u(L5,"minimum_");const ra=D({minimum_:L5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(n,e,t){N(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=_(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)N(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return F.runKernel(Yd,i,o)}u(M5,"mirrorPad_");const zT=D({mirrorPad_:M5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(n,e){let t=_(n,"a","mod"),s=_(e,"b","mod");[t,s]=jt(t,s);const r={a:t,b:s};return F.runKernel(xu,r)}u(z5,"mod_");const BT=D({mod_:z5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(n,e=null,t=!1){n=_(n,"x","moments");const s=Pe(e,n.shape),r=Gt(n,s,t);let o=r.shape;t||(o=qt(r.shape,s));const i=wt(fe(le(n,"float32"),M(r,o))),a=Gt(i,s,t);return{mean:r,variance:a}}u(B5,"moments_");const $g=D({moments_:B5});function W5(n,e,t,s){const r=_(e,"data","multiRNNCell"),o=wf(t,"c","multiRNNCell"),i=wf(s,"h","multiRNNCell");let a=r;const c=[];for(let h=0;h<n.length;h++){const p=n[h](a,o[h],i[h]);c.push(p[0]),c.push(p[1]),a=p[1]}const l=[],d=[];for(let h=0;h<c.length;h+=2)l.push(c[h]),d.push(c[h+1]);return[l,d]}u(W5,"multiRNNCell_");const V5=D({multiRNNCell_:W5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5(n,e,t,s=!1){const r=_(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const c={logits:i===1?M(r,[1,-1]):r},l={numSamples:e,seed:t,normalized:s},d=F.runKernel(Km,c,l);return i===1?M(d,[d.size]):d}u(U5,"multinomial_");const G5=D({multinomial_:U5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H5(n,e){let t=_(n,"a","notEqual","string_or_numeric"),s=_(e,"b","notEqual","string_or_numeric");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s};return F.runKernel(Jd,r)}u(H5,"notEqual_");const Ic=D({notEqual_:H5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:_(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return F.runKernel(eh,i,a)}u(j5,"oneHot_");const Lw=D({oneHot_:j5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n){const t={x:_(n,"x","onesLike")};return F.runKernel(Zd,t)}u(q5,"onesLike_");const As=D({onesLike_:q5});function K5(n,e){const t=_(n,"v1","outerProduct"),s=_(e,"v2","outerProduct");N(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=M(t,[-1,1]),o=M(s,[1,-1]);return Qe(r,o)}u(K5,"outerProduct_");const X5=D({outerProduct_:K5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(n,e,t=0){const s=_(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return F.runKernel(nh,o,r)}u(Y5,"pad_");const mi=D({pad_:Y5});function Q5(n,e,t=0){return N(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),mi(n,[e],t)}u(Q5,"pad1d_");const J5=D({pad1d_:Q5});function Z5(n,e,t=0){return N(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),mi(n,e,t)}u(Z5,"pad2d_");const e6=D({pad2d_:Z5});function t6(n,e,t=0){return N(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),mi(n,e,t)}u(t6,"pad3d_");const n6=D({pad3d_:t6});function s6(n,e,t=0){return N(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),mi(n,e,t)}u(s6,"pad4d_");const r6=D({pad4d_:s6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n,e,t){const s=_(n,"x","spaceToBatchND");N(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),N(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),N(s.shape.reduce((i,a,c)=>c>0&&c<=e.length?i&&(a+t[c-1][0]+t[c-1][1])%e[c-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return F.runKernel(hh,r,o)}u(o6,"spaceToBatchND_");const Ng=D({spaceToBatchND_:o6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(n,e,t,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=_(n,"x","maxPool");let c=a,l=!1;a.rank===3&&(l=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(hn(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const d=Fn(c.shape,e,o,r,s),h=[d.dilationHeight,d.dilationWidth];let p;s==="same"?p=c6([d.filterHeight,d.filterWidth],h):p=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[m,g]=a6([d.inHeight,d.inWidth],h,p),y=f?s:"valid",b=f?c:Ng(c,h,m),S=(t==="avg"?()=>yg(b,e,o,y,i):()=>kg(b,e,o,y,i))(),w=f?S:bg(S,h,g);return l?M(w,[w.shape[1],w.shape[2],w.shape[3]]):w}u(i6,"pool_");function a6(n,e,t){const s=t.map(d=>d[0]),r=t.map(d=>d[1]),o=n.concat(s,r),i=e.map((d,h)=>(d-o[h]%d)%d),a=r.map((d,h)=>d+i[h]),c=e.map((d,h)=>[s[h],a[h]]),l=e.map((d,h)=>[0,i[h]]);return[c,l]}u(a6,"requiredSpaceToBatchPaddings");function c6(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}u(c6,"withSpaceToBatchBasePaddings");const WT=D({pool_:i6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(n,e){const t=_(n,"x","prelu"),s=_(e,"alpha","prelu"),r={x:t,alpha:s};return F.runKernel(sh,r)}u(u6,"prelu_");const Tg=D({prelu_:u6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n,e=null,t=!1){let s=_(n,"x","prod");s.dtype==="bool"&&(s=le(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return F.runKernel(rh,r,o)}u(l6,"prod_");const VT=D({prod_:l6});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n,e,t,s){const r=n.map((d,h)=>_(d,`tensors${h}`,"raggedGather","int32")),o=_(e,"paramsDenseValues","raggedGather"),i=_(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},c={outputRaggedRank:s},l=F.runKernel(lw,a,c);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}u(d6,"raggedGather_");const h6=D({raggedGather_:d6});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n,e,t){const s=_(n,"starts","raggedRange"),r=_(e,"limits","raggedRange",s.dtype),o=_(t,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=F.runKernel(dw,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}u(p6,"raggedRange_");const f6=D({raggedRange_:p6});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n,e,t,s,r){const o=_(n,"shape","raggedTensorToTensor","int32"),i=_(e,"values","raggedTensorToTensor"),a=_(t,"defaultValue","raggedTensorToTensor",i.dtype),c=s.map((h,p)=>_(h,`tensors${p}`,"raggedTensorToTensor","int32")),l={shape:o,values:i,defaultValue:a,rowPartitionTensors:c},d={rowPartitionTypes:r};return F.runKernel(hw,l,d)}u(m6,"raggedTensorToTensor_");const g6=D({raggedTensorToTensor_:m6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(n,e,t){Ds(n);const s=U(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return F.makeTensor(r,n,t)}u(y6,"rand_");const b6=D({rand_:y6});var Mw={exports:{}};Mw.exports;(function(n){(function(e,t,s){function r(c){var l=this,d=a();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(c),l.s0<0&&(l.s0+=1),l.s1-=d(c),l.s1<0&&(l.s1+=1),l.s2-=d(c),l.s2<0&&(l.s2+=1),d=null}u(r,"Alea");function o(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}u(o,"copy");function i(c,l){var d=new r(c),h=l&&l.state,p=d.next;return p.int32=function(){return d.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,h&&(typeof h=="object"&&o(h,d),p.state=function(){return o(d,{})}),p}u(i,"impl");function a(){var c=4022871197,l=u(function(d){d=String(d);for(var h=0;h<d.length;h++){c+=d.charCodeAt(h);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26},"mash");return l}u(a,"Mash"),t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(da,n,!1)})(Mw);var x6=Mw.exports,zw={exports:{}};zw.exports;(function(n){(function(e,t,s){function r(a){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var h=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^h^h>>>8},a===(a|0)?c.x=a:l+=a;for(var d=0;d<l.length+64;d++)c.x^=l.charCodeAt(d)|0,c.next()}u(r,"XorGen");function o(a,c){return c.x=a.x,c.y=a.y,c.z=a.z,c.w=a.w,c}u(o,"copy");function i(a,c){var l=new r(a),d=c&&c.state,h=u(function(){return(l.next()>>>0)/4294967296},"prng");return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}u(i,"impl"),t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(da,n,!1)})(zw);var w6=zw.exports,Bw={exports:{}};Bw.exports;(function(n){(function(e,t,s){function r(a){var c=this,l="";c.next=function(){var h=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(h^h<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,a===(a|0)?c.x=a:l+=a;for(var d=0;d<l.length+64;d++)c.x^=l.charCodeAt(d)|0,d==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}u(r,"XorGen");function o(a,c){return c.x=a.x,c.y=a.y,c.z=a.z,c.w=a.w,c.v=a.v,c.d=a.d,c}u(o,"copy");function i(a,c){var l=new r(a),d=c&&c.state,h=u(function(){return(l.next()>>>0)/4294967296},"prng");return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}u(i,"impl"),t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(da,n,!1)})(Bw);var S6=Bw.exports,Ww={exports:{}};Ww.exports;(function(n){(function(e,t,s){function r(a){var c=this;c.next=function(){var d=c.x,h=c.i,p,f;return p=d[h],p^=p>>>7,f=p^p<<24,p=d[h+1&7],f^=p^p>>>10,p=d[h+3&7],f^=p^p>>>3,p=d[h+4&7],f^=p^p<<7,p=d[h+7&7],p=p^p<<13,f^=p^p<<9,d[h]=f,c.i=h+1&7,f};function l(d,h){var p,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,p=0;p<h.length;++p)f[p&7]=f[p&7]<<15^h.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?f[7]=-1:f[p],d.x=f,d.i=0,p=256;p>0;--p)d.next()}u(l,"init"),l(c,a)}u(r,"XorGen");function o(a,c){return c.x=a.x.slice(),c.i=a.i,c}u(o,"copy");function i(a,c){a==null&&(a=+new Date);var l=new r(a),d=c&&c.state,h=u(function(){return(l.next()>>>0)/4294967296},"prng");return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(d.x&&o(d,l),h.state=function(){return o(l,{})}),h}u(i,"impl"),t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(da,n,!1)})(Ww);var C6=Ww.exports,Vw={exports:{}};Vw.exports;(function(n){(function(e,t,s){function r(a){var c=this;c.next=function(){var d=c.w,h=c.X,p=c.i,f,m;return c.w=d=d+1640531527|0,m=h[p+34&127],f=h[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[p]=m^f,c.i=p,m+(d^d>>>16)|0};function l(d,h){var p,f,m,g,y,b=[],x=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,x=Math.max(x,h.length)),m=0,g=-32;g<x;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,p=b[g&127]^=f+y,m=p==0?m+1:0);for(m>=128&&(b[(h&&h.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],p=b[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,b[m]=f^p;d.w=y,d.X=b,d.i=m}u(l,"init"),l(c,a)}u(r,"XorGen");function o(a,c){return c.i=a.i,c.w=a.w,c.X=a.X.slice(),c}u(o,"copy");function i(a,c){a==null&&(a=+new Date);var l=new r(a),d=c&&c.state,h=u(function(){return(l.next()>>>0)/4294967296},"prng");return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(d.X&&o(d,l),h.state=function(){return o(l,{})}),h}u(i,"impl"),t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(da,n,!1)})(Vw);var v6=Vw.exports,Uw={exports:{}};Uw.exports;(function(n){(function(e,t,s){function r(a){var c=this,l="";c.next=function(){var h=c.b,p=c.c,f=c.d,m=c.a;return h=h<<25^h>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-h|0,c.b=h=h<<20^h>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-h|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,a===Math.floor(a)?(c.a=a/4294967296|0,c.b=a|0):l+=a;for(var d=0;d<l.length+20;d++)c.b^=l.charCodeAt(d)|0,c.next()}u(r,"XorGen");function o(a,c){return c.a=a.a,c.b=a.b,c.c=a.c,c.d=a.d,c}u(o,"copy");function i(a,c){var l=new r(a),d=c&&c.state,h=u(function(){return(l.next()>>>0)/4294967296},"prng");return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}u(i,"impl"),t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(da,n,!1)})(Uw);var I6=Uw.exports,UT={exports:{}},k6={},$6=Object.freeze({__proto__:null,default:k6}),N6=MP($6);(function(n){(function(e,t,s){var r=256,o=6,i=52,a="random",c=s.pow(r,o),l=s.pow(2,i),d=l*2,h=r-1,p;function f(w,C,v){var k=[];C=C==!0?{entropy:!0}:C||{};var $=b(y(C.entropy?[w,S(t)]:w??x(),3),k),T=new m(k),E=u(function(){for(var R=T.g(o),O=c,L=0;R<l;)R=(R+L)*r,O*=r,L=T.g(1);for(;R>=d;)R/=2,O/=2,L>>>=1;return(R+L)/O},"prng");return E.int32=function(){return T.g(4)|0},E.quick=function(){return T.g(4)/4294967296},E.double=E,b(S(T.S),t),(C.pass||v||function(R,O,L,z){return z&&(z.S&&g(z,T),R.state=function(){return g(T,{})}),L?(s[a]=R,O):R})(E,$,"global"in C?C.global:this==s,C.state)}u(f,"seedrandom");function m(w){var C,v=w.length,k=this,$=0,T=k.i=k.j=0,E=k.S=[];for(v||(w=[v++]);$<r;)E[$]=$++;for($=0;$<r;$++)E[$]=E[T=h&T+w[$%v]+(C=E[$])],E[T]=C;(k.g=function(R){for(var O,L=0,z=k.i,W=k.j,A=k.S;R--;)O=A[z=h&z+1],L=L*r+A[h&(A[z]=A[W=h&W+O])+(A[W]=O)];return k.i=z,k.j=W,L})(r)}u(m,"ARC4");function g(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}u(g,"copy");function y(w,C){var v=[],k=typeof w,$;if(C&&k=="object")for($ in w)try{v.push(y(w[$],C-1))}catch{}return v.length?v:k=="string"?w:w+"\0"}u(y,"flatten");function b(w,C){for(var v=w+"",k,$=0;$<v.length;)C[h&$]=h&(k^=C[h&$]*19)+v.charCodeAt($++);return S(C)}u(b,"mixkey");function x(){try{var w;return p&&(w=p.randomBytes)?w=w(r):(w=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(w)),S(w)}catch{var C=e.navigator,v=C&&C.plugins;return[+new Date,e,v,e.screen,S(t)]}}u(x,"autoseed");function S(w){return String.fromCharCode.apply(0,w)}if(u(S,"tostring"),b(s.random(),t),n.exports){n.exports=f;try{p=N6}catch{}}else s["seed"+a]=f})(typeof self<"u"?self:da,[],Math)})(UT);var T6=UT.exports,E6=x6,_6=w6,R6=S6,A6=C6,D6=v6,O6=I6,Sa=T6;Sa.alea=E6;Sa.xor128=_6;Sa.xorwow=R6;Sa.xorshift7=A6;Sa.xor4096=D6;Sa.tychei=O6;var Eg=Sa;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gw{static{u(this,"MPRandGauss")}constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=Eg.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class F6{static{u(this,"RandGamma")}constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=Eg.alea(o.toString()),this.randn=new Gw(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class P6{static{u(this,"UniformRandom")}constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Eg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(n,e,t=1,s="float32",r){if(Ds(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new F6(e,t,s,r),i=Oe(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}u(L6,"randomGamma_");const M6=D({randomGamma_:L6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(n,e=0,t=1,s,r){if(Ds(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new Gw(e,t,s,!1,r),i=Oe(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}u(z6,"randomNormal_");const Hw=D({randomNormal_:z6});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B6(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Hw(n,0,1,e,t)}u(B6,"randomStandardNormal_");const W6=D({randomStandardNormal_:B6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(n,e=0,t=1,s="float32",r){Ds(n);const o=Oe(n,s),i=new P6(e,t,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}u(V6,"randomUniform_");const Ca=D({randomUniform_:V6});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n,e,t,s){return Ca(n,e,t,"int32",s)}u(U6,"randomUniformInt_");const G6=D({randomUniformInt_:U6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return F.runKernel(Qm,{},r)}u(kc,"range$4");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(n){const t={input:_(n,"input","real")};return F.runKernel(Jm,t)}u(H6,"real_");const Gl=D({real_:H6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(n){const t={x:_(n,"x","reciprocal")};return F.runKernel(Cu,t)}u(j6,"reciprocal_");const GT=D({reciprocal_:j6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(n){const t={x:_(n,"x","relu")};return F.runKernel(vu,t)}u(q6,"relu_");const Xr=D({relu_:q6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){const t={x:_(n,"x","relu6")};return F.runKernel(Iu,t)}u(K6,"relu6_");const jw=D({relu6_:K6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(n,e){const s={x:_(n,"x","reverse")},r={dims:e};return F.runKernel(ch,s,r)}u(X6,"reverse_");const rr=D({reverse_:X6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const e=_(n,"x","reverse");return N(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),rr(e,0)}u(Y6,"reverse1d_");const Q6=D({reverse1d_:Y6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(n,e){const t=_(n,"x","reverse");return N(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),rr(t,e)}u(J6,"reverse2d_");const Z6=D({reverse2d_:J6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eK(n,e){const t=_(n,"x","reverse");return N(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),rr(t,e)}u(eK,"reverse3d_");const tK=D({reverse3d_:eK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(n,e){const t=_(n,"x","reverse");return N(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),rr(t,e)}u(nK,"reverse4d_");const sK=D({reverse4d_:nK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(n){const t={x:_(n,"x","round")};return F.runKernel(ku,t)}u(rK,"round_");const qw=D({round_:rK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const t={x:_(n,"x","rsqrt","float32")};return F.runKernel($u,t)}u(oK,"rsqrt_");const Kw=D({rsqrt_:oK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const t={x:_(n,"x","selu")};return F.runKernel(Nu,t)}u(iK,"selu_");const Xw=D({selu_:iK});function aK(n,e,t,s,r,o=[1,1],i="NHWC"){const a=_(n,"x","separableConv2d"),c=_(e,"depthwiseFilter","separableConv2d"),l=_(t,"pointwiseFilter","separableConv2d");let d=a,h=!1;if(a.rank===3&&(h=!0,d=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),N(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),N(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),N(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const p=c.shape[2],f=c.shape[3];N(l.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${l.shape[2]}.`);const m=wh(d,c,s,r,i,o),y=Jo(m,l,1,"valid",i);return h?M(y,[y.shape[1],y.shape[2],y.shape[3]]):y}u(aK,"separableConv2d_");const Yw=D({separableConv2d_:aK});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cK(n,e){const t=_(n,"x","setdiff1d"),s=_(e,"y","setdiff1d");N(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),N(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),N(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let a=0;for(let d=0;d<r.length;d++)i.has(r[d])||a++;const c=new on([a],t.dtype),l=new on([a],"int32");for(let d=0,h=0;d<r.length;d++)i.has(r[d])||(c.values[h]=r[d],l.values[h]=d,h++);return[c.toTensor(),l.toTensor()]}u(cK,"setdiff1dAsync_");const uK=cK;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lK(n){const t={x:_(n,"x","sign")};return F.runKernel(_u,t)}u(lK,"sign_");const HT=D({sign_:lK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n){const t={x:_(n,"x","sin","float32")};return F.runKernel(Tu,t)}u(dK,"sin_");const Qw=D({sin_:dK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hK(n){const t={x:_(n,"x","sinh")};return F.runKernel(Eu,t)}u(hK,"sinh_");const Jw=D({sinh_:hK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n,e,t){const s=_(n,"x","slice1d");return N(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Je(s,[e],[t])}u(pK,"slice1d_");const _g=D({slice1d_:pK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(n,e,t){const s=_(n,"x","slice2d");return N(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Je(s,e,t)}u(fK,"slice2d_");const Zw=D({slice2d_:fK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n,e,t){const s=_(n,"x","slice3d");return N(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Je(s,e,t)}u(mK,"slice3d_");const Rg=D({slice3d_:mK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(n,e,t){const s=_(n,"x","slice4d");return N(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Je(s,e,t)}u(gK,"slice4d_");const Hl=D({slice4d_:gK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yK(n,e=-1){const t=_(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return F.runKernel(fh,s,r)}u(yK,"softmax_");const Ag=D({softmax_:yK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return F.runKernel(Lm,e)}u(bK,"fft_");const Dg=D({fft_:bK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return F.runKernel(Wm,e)}u(xK,"ifft_");const jl=D({ifft_:xK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=M(n,[t,e]);s=jl(r)}else{const r=[t,2*(e-1)],o=M(Gl(n),[t,e]),i=M(wg(n),[t,e]),a=rr(Je(o,[0,1],[t,e-2]),1),c=P(rr(Je(i,[0,1],[t,e-2]),1),ve(-1)),l=Wt([o,a],1),d=Wt([i,c],1),h=M(Xo(l,d),[r[0],r[1]]);s=jl(h)}if(s=Gl(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=M(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}u(wK,"irfft_");const eS=D({irfft_:wK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n,e,t=0){const r={x:_(n,"x","split")},o={numOrSizeSplits:e,axis:t};return F.runKernel(ph,r,o)}u(SK,"split_");const es=D({split_:SK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CK(n,e){N(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const m=n.shape.map(y=>0),g=n.shape.map(y=>y);g[n.shape.length-1]=e,r=Je(n,m,g),t=e}else if(e!=null&&e>t){const m=n.shape.map(g=>g);m[n.shape.length-1]=e-t,r=Wt([n,Zt(m)],n.shape.length-1),t=e}else r=n;const o=et(r),i=M(Xo(r,o),[s,t]),a=Dg(i),c=Math.floor(t/2)+1,l=Gl(a),d=wg(a),h=es(l,[c,t-c],l.shape.length-1),p=es(d,[c,t-c],d.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=c,M(Xo(h[0],p[0]),f)}u(CK,"rfft_");const Og=D({rfft_:CK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n,e){let t=_(n,"a","squaredDifference"),s=_(e,"b","squaredDifference");[t,s]=jt(t,s),Ne(t.shape,s.shape);const r={a:t,b:s},o={};return F.runKernel(Ou,r,o)}u(vK,"squaredDifference_");const tS=D({squaredDifference_:vK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(n,e){const t=_(n,"x","squeeze","string_or_numeric");return M(t,ui(t.shape,e).newShape)}u(IK,"squeeze_");const vo=D({squeeze_:IK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kK(n,e=0){const t=wf(n,"tensors","stack","string_or_numeric");N(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&N(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return F.runKernel(th,s,r)}u(kK,"stack_");const ys=D({stack_:kK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n,e=0){const s={x:_(n,"x","step")},r={alpha:e};return F.runKernel(zu,s,r)}u($K,"step_");const Vu=D({step_:$K});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(n,e,t,s,r=0,o=0,i=0,a=0,c=0){const d={x:_(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:c};return F.runKernel(ug,d,h)}u(NK,"stridedSlice_");const jT=D({stridedSlice_:NK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n){const t={x:_(n,"x","tan","float32")};return F.runKernel(Pu,t)}u(TK,"tan_");const qT=D({tan_:TK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(n,e){Vc(n);const t=di(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return hi(n,null,t,e)}u(Vn,"tensor1d");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Il(n,e,t){if(Vc(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=di(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return hi(n,e,s,t)}u(Il,"tensor2d");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n,e,t){if(Vc(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=di(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return hi(n,e,s,t)}u(KT,"tensor3d");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(n,e,t){if(Vc(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=di(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return hi(n,e,s,t)}u(EK,"tensor4d");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n,e,t){if(Vc(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=di(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return hi(n,e,s,t)}u(_K,"tensor5d");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(n,e,t){if(Vc(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=di(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,hi(n,e,s,t)}u(RK,"tensor6d");function XT(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}u(XT,"validateUpdateShape");function nS(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}XT(t,e,n)}u(nS,"validateInput$1");function Yr(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let h=r;h<o;++h)i*=t[h];const a=r<1?1:r,c=U(e.shape)/a,l=[...we(t.slice(0,r)),1],d=U(t);return{sliceRank:r,numUpdates:c,sliceSize:i,strides:l,outputSize:d}}u(Yr,"calculateShapes");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n,e,t){const s=_(n,"tensor","tensorScatterupdate"),r=_(e,"indices","tensorScatterupdate","int32"),o=_(t,"updates","tensorScatterupdate");if(nS(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const i={tensor:s,indices:r,updates:o},a={};return F.runKernel(ng,i,a)}u(AK,"tensorScatterUpdate_");const DK=D({tensorScatterUpdate_:AK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(n,e=1,t=!0){const s=_(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[a,c]=F.runKernel(dg,o,i);return{values:a,indices:c}}u(OK,"topk_");const YT=D({topk_:OK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n,e=0,t=1,s,r){if(Ds(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Gw(e,t,s,!0,r),i=Oe(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}u(FK,"truncatedNormal_");const sS=D({truncatedNormal_:FK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n,e=0){const t=_(n,"x","unique","string_or_numeric");N(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=F.runKernel(yw,s,r);return{values:o,indices:i}}u(PK,"unique_");const QT=D({unique_:PK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n,e,t){const s=_(n,"x","unsortedSegmentSum"),r=_(e,"segmentIds","unsortedSegmentSum","int32");N(wc(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return F.runKernel(gh,o,i)}u(LK,"unsortedSegmentSum_");const rS=D({unsortedSegmentSum_:LK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n,e=0){const t=_(n,"x","unstack","string_or_numeric");N(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return F.runKernel(mh,s,r)}u(MK,"unstack_");const or=D({unstack_:MK});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n,e){return Pw(n,e,"right")}u(zK,"upperBound$1");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(n,e=!0,t,s){return F.makeVariable(n,e,t,s)}u(JT,"variable");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=Oe(n,"int32"),r=Oe([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}u(oS,"whereImpl$2");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BK(n){const e=_(n,"condition","whereAsync","bool"),t=await e.data(),s=oS(e.shape,t);return n!==e&&e.dispose(),s}u(BK,"whereAsync_");const ZT=BK;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WK(n,e,t){const s=_(n,"tensor","boolMask"),r=_(e,"mask","boolMask","bool"),o=t??0,i=r.rank,a=s.shape;N(i>0,()=>"mask cannot be scalar"),cs(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let g=o;g<o+i;g++)c*=a[g];const l=a.slice(0,o).concat([c],a.slice(o+i)),d=M(s,l),h=M(r,[-1]),p=await ZT(h),f=vo(p,[1]),m=sa(d,f,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),f.dispose(),d.dispose(),h.dispose(),p.dispose(),m}u(WK,"booleanMaskAsync_");const VK=WK;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n,e,t){const s=_(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),N(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{N(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?H(()=>{let i=Gl(s),a=wg(s);return i=F.runKernel(Ui,{x:i},o),a=F.runKernel(Ui,{x:a},o),t&&(a=Rt(a)),Xo(i,a)}):F.runKernel(Ui,r,o)}u(UK,"transpose_");const Ze=D({transpose_:UK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(n,e,t,s,r=!0){const o=_(n,"v","movingAverage"),i=_(e,"x","movingAverage"),a=_(t,"decay","movingAverage");DH(o,i),N(Ge(o.shape,i.shape),()=>"Shape mismatch in v and x");const c=ve(1),l=fe(c,a);let d=P(fe(i,o),l);if(r){N(s!=null,()=>"When using zeroDebias: true, step is required.");const h=_(s,"step","movingAverage");d=Se(d,fe(c,So(a,h)))}return ee(o,d)}u(GK,"movingAverage_");const HK=D({movingAverage_:GK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n,e,t){Ds(t);const s=_(n,"indices","scatterND","int32"),r=_(e,"updates","scatterND");nS(r,s,t);const o={indices:s,updates:r},i={shape:t};return F.runKernel(tg,o,i)}u(jK,"scatterND_");const qK=D({scatterND_:jK});function KK(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}u(KK,"validateInput");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(n,e,t,s=0){Ds(t);const r=_(n,"sparseIndices","sparseToDense","int32"),o=_(e,"sparseValues","sparseToDense","string_or_numeric"),i=_(s,"defaultValue","sparseToDense",o.dtype);KK(r,o,t,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},c={outputShape:t};return F.runKernel(ig,a,c)}u(XK,"sparseToDense_");const YK=D({sparseToDense_:XK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n,e){const t=_(e,"indices","gatherND","int32"),r={params:_(n,"x","gatherND","string_or_numeric"),indices:t};return F.runKernel(Bm,r)}u(QK,"gatherND_");const JK=D({gatherND_:QK});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(n,e){if(e==null)return n.shape.slice();if(Ge(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}u(ZK,"getNoiseShape");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eX(n,e,t,s){const r=_(n,"x","dropout");if(N(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),N(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Mt?r.clone():r;const o=ZK(r,t),i=1-e,a=Se(vh(ee(Ca(o,0,1,"float32",s),i)),i);return P(r,a)}u(eX,"dropout_");const eE=D({dropout_:eX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}u(tE,"enclosingPowerOfTwo");function iS(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return Vn(r,"float32")}u(iS,"cosineWindow");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function tX(n,e,t=1){const s=_(n,"predictions","inTopK"),r=_(e,"targets","inTopK");N(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),N(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),cs(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];N(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),a=await r.data(),[c,l]=[i.length/o,o],d=ln("bool",c);for(let h=0;h<c;h++){const p=h*l,f=i.subarray(p,p+l),m=[];for(let g=0;g<f.length;g++)m.push({value:f[g],index:g});m.sort((g,y)=>y.value-g.value),d[h]=0;for(let g=0;g<t;g++)if(m[g].index===a[h]){d[h]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),er(d,r.shape,"bool")}u(tX,"inTopKAsync_");const nX=tX;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sX(n,e,t,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),N(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),N(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),N(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=o==="NHWC"?a.shape[3]:a.shape[1],d=o==="NHWC"?c.shape[3]:c.shape[1];N(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),N(d===t[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${t[3]}).`),Hn("conv2dDerFilter",r,i);const h={x:a,dy:c},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return F.runKernel(km,h,p)}u(sX,"conv2DBackpropFilter_");const aS=D({conv2DBackpropFilter_:sX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return P(n,Vu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}u(Fg,"getFusedDyActivation");function Pg(n,e){let t=e;const s=dn(n.shape,e.shape);return s.length>0&&(t=ye(t,s)),M(t,n.shape)}u(Pg,"getFusedBiasGradient");function Lg(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Xr(n);if(e==="elu")return Sh(n);if(e==="relu6")return jw(n);if(e==="prelu")return Tg(n,t);if(e==="leakyrelu")return Sg(n,s);if(e==="sigmoid")return Br(n);throw new Error(`Unknown fused activation ${e}.`)}u(Lg,"applyActivation$1");const Mg=u((n,e)=>!(n>0)||e==="linear","shouldFuse");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",Mg(F.state.gradientDepth,c)===!1){N(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let v=Jo(n,e,t,s,r,o,i);return a!=null&&(v=ee(v,a)),Lg(v,c,l,d)}const h=_(n,"x","conv2d","float32"),p=_(e,"filter","conv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=M(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),N(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Hn("fused conv2d",s,i);const g=r==="NHWC"?f.shape[3]:f.shape[1];N(p.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`),N(hn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const y=kt(f.shape,p.shape,t,o,s,i);let b;a!=null&&(b=_(a,"bias","fused conv2d"),[b]=jt(b,h),r==="NHWC"?Ne(y.outShape,b.shape):(N(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),N(b.shape.length===0||b.shape[0]===y.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let x;if(l!=null){const v=l.shape;if(N(v.length<=1||v.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${v.length}.`),v.length===1)N(v[0]===1||v[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${v}) is not compatible with the number of output channels (${y.outChannels}).`);else if(v.length===3)try{Ne(v,y.outShape)}catch{const $=`Error in fused conv2d: PReLU activation weights (${v}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error($)}x=_(l,"prelu weights","fused conv2d")}const S=u((v,k)=>{N(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[$,T,E,R]=k,O=Fg(v,E,c);N(Qo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const L=Nw(T.shape,O,$,t,s),z=aS(T,O,$.shape,t,s),W=[L,z];if(R!=null){const A=Pg(R,O);W.push(A)}return W},"grad"),w={x:f,filter:p,bias:b,preluActivationWeights:x},C={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:d};return a==null?Co((k,$,T)=>{let E=F.runKernel(Ml,w,C);return T([$,k,E]),m&&(E=M(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:S}})(f,p):Co((k,$,T,E)=>{let R=F.runKernel(Ml,w,C);return E([$,k,R,T]),m&&(R=M(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:S}})(f,p,b)}u(rX,"fusedConv2d_");const nE=D({fusedConv2d_:rX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n,e,t,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:a,dy:c},d={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return F.runKernel(Am,l,d)}u(oX,"depthwiseConv2dNativeBackpropFilter_");const sE=D({depthwiseConv2dNativeBackpropFilter_:oX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(n,e,t,s,r,o=[1,1],i){let a=e,c=!1;e.rank===3&&(c=!0,a=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:a,filter:t},d={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},h=F.runKernel(Dm,l,d);return c?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}u(iX,"depthwiseConv2dNativeBackpropInput_");const rE=D({depthwiseConv2dNativeBackpropInput_:iX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aX({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(Mg(F.state.gradientDepth,c)===!1){let C=wh(n,e,t,s,r,o,i);return a!=null&&(C=ee(C,a)),Lg(C,c,l,d)}const h=_(n,"x","depthwiseConv2d","float32"),p=_(e,"filter","depthwiseConv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=M(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),N(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),N(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),o==null&&(o=[1,1]),N(hn(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Hn("fused depthwiseConv2d",s,i);const g=kt(f.shape,p.shape,t,o,s,i,!0);let y;a!=null&&(y=_(a,"bias","fused conv2d"),[y]=jt(y,h),Ne(g.outShape,y.shape));let b;l!=null&&(b=_(l,"prelu weights","fused depthwiseConv2d"));const x=u((C,v)=>{N(Qo(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[k,$,T,E]=v,R=Fg(C,T,c),O=rE($.shape,R,k,t,s,o,i),L=sE($,R,k.shape,t,s,o,i);if(E!=null){const z=Pg(y,R);return[O,L,z]}return[O,L]},"grad"),S={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:d};return a==null?Co((v,k,$)=>{let T=F.runKernel(zl,S,w);return $([k,v,T]),m&&(T=M(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:x}})(f,p):Co((v,k,$,T)=>{let E=F.runKernel(zl,S,w);return T([k,v,E,$]),m&&(E=M(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,p,y)}u(aX,"fusedDepthwiseConv2d_");const cX=D({fusedDepthwiseConv2d_:aX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Mg(F.state.gradientDepth,o)===!1){let R=Qe(n,e,t,s);return r!=null&&(R=ee(R,r)),Lg(R,o,i,a)}let c=_(n,"a","fused matMul"),l=_(e,"b","fused matMul");[c,l]=jt(c,l);const d=t?c.shape[c.rank-2]:c.shape[c.rank-1],h=s?l.shape[l.rank-1]:l.shape[l.rank-2],p=t?c.shape[c.rank-1]:c.shape[c.rank-2],f=s?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),g=l.shape.slice(0,-2),y=U(m),b=U(g);N(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${t} and transposeB=${s} must match.`);const S=Ne(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,f]),w=t?M(c,[y,d,p]):M(c,[y,p,d]),C=s?M(l,[b,f,h]):M(l,[b,h,f]);let v;r!=null&&(v=_(r,"bias","fused matMul"),[v]=jt(v,c),Ne(S,v.shape));let k;i!=null&&(k=_(i,"prelu weights","fused matMul"));const $=u((R,O)=>{const[L,z,W,A]=O,G=Fg(M(R,W.shape),W,o);let V,q;if(!t&&!s?(V=Qe(G,z,!1,!0),q=Qe(L,G,!0,!1)):!t&&s?(V=Qe(G,z,!1,!1),q=Qe(G,L,!0,!1)):t&&!s?(V=Qe(z,G,!1,!0),q=Qe(L,G,!1,!1)):(V=Qe(z,G,!0,!0),q=Qe(G,L,!0,!0)),r!=null){const Y=Pg(A,G);return[V,q,Y]}else return[V,q]},"grad"),T={a:w,b:C,bias:v,preluActivationWeights:k},E={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?Co((O,L,z)=>{const W=F.runKernel(Ll,T,E);return z([O,L,W]),{value:M(W,S),gradFunc:$}})(w,C):Co((O,L,z,W)=>{const A=F.runKernel(Ll,T,E);return W([O,L,A,z]),{value:M(A,S),gradFunc:$}})(w,C,v)}u(uX,"fusedMatMul_");const $x=D({fusedMatMul_:uX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lX=Object.freeze({__proto__:null,conv2d:nE,depthwiseConv2d:cX,matMul:$x});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n){return iS(n,.54,.46)}u(dX,"hammingWindow_");const hX=D({hammingWindow_:dX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){return iS(n,.5,.5)}u(pX,"hannWindow_");const oE=D({hannWindow_:pX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fX(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(Je(n,o,e)),o+=t;if(s)for(;o<n.size;){const a=o+e-n.size,c=Wt([Je(n,o,e-a),Bu([a],r)]);i.push(c),o+=t}return i.length===0?Il([],[0,e]):M(Wt(i),[i.length,e])}u(fX,"frame_");const iE=D({frame_:fX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mX(n,e,t,s,r=oE){s==null&&(s=tE(e));const o=iE(n,e,t),i=P(o,r(e));return Og(i,s)}u(mX,"stft_");const gX=D({stft_:mX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yX(n,e,t,s,r="bilinear",o=0){const i=_(n,"image","cropAndResize"),a=_(e,"boxes","cropAndResize","float32"),c=_(t,"boxInd","cropAndResize","int32"),l=a.shape[0];N(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),N(c.rank===1&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),N(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),N(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),N(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const d={image:i,boxes:a,boxInd:c},h={method:r,extrapolationValue:o,cropSize:s};return F.runKernel(Em,d,h)}u(yX,"cropAndResize_");const bX=D({cropAndResize_:yX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n){const e=_(n,"image","flipLeftRight","float32");N(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return F.runKernel(zm,t,{})}u(xX,"flipLeftRight_");const wX=D({flipLeftRight_:xX});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SX(n){const e=_(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];N(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),N(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Ks(e,r)}u(SX,"grayscaleToRGB_");const CX=D({grayscaleToRGB_:SX});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const e=_(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];N(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),N(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=le(e,"float32"),i=Vn([.2989,.587,.114]);let a;switch(e.rank){case 2:a=Ya("ij,j->i",o,i);break;case 3:a=Ya("ijk,k->ij",o,i);break;case 4:a=Ya("ijkl,l->ijk",o,i);break;case 5:a=Ya("ijklm,m->ijkl",o,i);break;case 6:a=Ya("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Bn(a,-1),le(a,r)}u(vX,"rgbToGrayscale_");const IX=D({rgbToGrayscale_:vX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kX(n,e,t=0,s=.5){const r=_(n,"image","rotateWithOffset","float32");N(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return F.runKernel(pg,o,i)}u(kX,"rotateWithOffset_");const $X=D({rotateWithOffset_:kX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uu(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),N(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),N(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),N(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),N(e.rank===1,()=>"scores must be a 1D tensor"),N(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),N(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}u(Uu,"nonMaxSuppSanityCheck");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NX(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppression","float32"),i=_(e,"scores","nonMaxSuppression","float32"),a=Uu(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return F.runKernel(Xm,{boxes:o,scores:i},c)}u(NX,"nonMaxSuppression_");const TX=D({nonMaxSuppression_:NX});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n,e,t){const s=_X(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}u(EX,"binaryInsert");function _X(n,e,t){return AX(n,e,t||RX)}u(_X,"binarySearch");function RX(n,e){return n>e?1:n<e?-1:0}u(RX,"defaultComparator");function AX(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=t(e,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}u(AX,"binarySearch_");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zg(n,e,t,s,r){return uS(n,e,t,s,r,0)}u(zg,"nonMaxSuppressionV3Impl$2");function cS(n,e,t,s,r,o){return uS(n,e,t,s,r,0,!1,o,!0)}u(cS,"nonMaxSuppressionV4Impl$2");function Bg(n,e,t,s,r,o){return uS(n,e,t,s,r,o,!0)}u(Bg,"nonMaxSuppressionV5Impl$2");function uS(n,e,t,s,r,o,i=!1,a=!1,c=!1){const l=[];for(let y=0;y<e.length;y++)e[y]>r&&l.push({score:e[y],boxIndex:y,suppressBeginIndex:0});l.sort(vv);const d=o>0?-.5/o:0,h=[],p=[];for(;h.length<t&&l.length>0;){const y=l.pop(),{score:b,boxIndex:x,suppressBeginIndex:S}=y;if(b<r)break;let w=!1;for(let C=h.length-1;C>=S;--C){const v=DX(n,x,h[C]);if(v>=s){w=!0;break}if(y.score=y.score*OX(s,d,v),y.score<=r)break}y.suppressBeginIndex=h.length,w||(y.score===b?(h.push(x),p.push(y.score)):y.score>r&&EX(l,y,vv))}const f=h.length,m=t-f;a&&m>0&&(h.push(...new Array(m).fill(0)),p.push(...new Array(m).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=p),c&&(g.validOutputs=f),g}u(uS,"nonMaxSuppressionImpl_");function DX(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),f=(a-o)*(c-i),m=(h-l)*(p-d);if(f<=0||m<=0)return 0;const g=Math.max(o,l),y=Math.max(i,d),b=Math.min(a,h),x=Math.min(c,p),S=Math.max(b-g,0)*Math.max(x-y,0);return S/(f+m-S)}u(DX,"intersectionOverUnion");function OX(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}u(OX,"suppressWeight");function vv(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}u(vv,"ascendingComparator");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FX(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppressionAsync"),i=_(e,"scores","nonMaxSuppressionAsync"),a=Uu(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const c=await Promise.all([o.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h}=zg(l,d,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),Vn(h,"int32")}u(FX,"nonMaxSuppressionAsync_");const PX=FX;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=_(n,"boxes","nonMaxSuppression"),a=_(e,"scores","nonMaxSuppression"),c=Uu(i,a,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l={boxes:i,scores:a},d={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=F.runKernel(Ym,l,d);return{selectedIndices:h[0],selectedScores:h[1]}}u(LX,"nonMaxSuppressionWithScore_");const MX=D({nonMaxSuppressionWithScore_:LX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zX(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),c=Uu(i,a,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l=await Promise.all([i.data(),a.data()]),d=l[0],h=l[1],{selectedIndices:p,selectedScores:f}=Bg(d,h,t,s,r,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Vn(p,"int32"),selectedScores:Vn(f)}}u(zX,"nonMaxSuppressionWithScoreAsync_");const BX=zX;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WX(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=_(n,"boxes","nonMaxSuppression"),a=_(e,"scores","nonMaxSuppression"),c=Uu(i,a,t,s,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,p={boxes:i,scores:a},f={maxOutputSize:l,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:o},m=F.runKernel(uw,p,f);return{selectedIndices:m[0],validOutputs:m[1]}}u(WX,"nonMaxSuppressionPadded_");const VX=D({nonMaxSuppressionPadded_:WX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UX(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),c=Uu(i,a,t,s,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:m,validOutputs:g}=cS(p,f,l,d,h,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Vn(m,"int32"),validOutputs:ve(g,"int32")}}u(UX,"nonMaxSuppressionPaddedAsync_");const GX=UX;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n,e,t=!1,s=!1){const r=_(n,"images","resizeBilinear");N(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),N(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),N(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},l=F.runKernel(ah,a,c);return i?M(l,[l.shape[1],l.shape[2],l.shape[3]]):l}u(HX,"resizeBilinear_");const aE=D({resizeBilinear_:HX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n,e,t=!1,s=!1){const r=_(n,"images","resizeNearestNeighbor");N(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),N(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),N(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},l=F.runKernel(ih,a,c);return i?M(l,[l.shape[1],l.shape[2],l.shape[3]]):l}u(jX,"resizeNearestNeighbor_");const cE=D({resizeNearestNeighbor_:jX});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n,e="binary",t=!1,s=.5){const r=_(n,"image","threshold"),o=.2989,i=.587,a=.114,c=r.shape[0]*r.shape[1];let l=P(Vn([s]),255),d,h,p,f;if(N(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),N(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),N(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),N(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[d,h,p]=es(r,[1,1,1],-1);const y=P(d,o),b=P(h,i),x=P(p,a);f=ee(ee(y,b),x)}else f=n;if(e==="otsu"){const y=mT(le(qw(f),"int32"),er([]),256);l=KX(y,c)}const m=t?wa(f,l):Is(f,l);return le(P(m,255),"int32")}u(qX,"threshold_");function KX(n,e){let t=Vn([-1]),s=Vn([0]),r=Vn([0]),o,i,a,c,l,d;for(let h=0;h<n.size-1;h++){o=Je(n,0,h+1),i=Je(n,h+1),l=Se(ye(o),e),d=Se(ye(i),e);const p=ye(P(o,kc(0,o.size)));a=Se(p,ye(o));const f=Bu(i.shape,o.size),m=ee(kc(0,i.size),f),g=P(i,m);c=Se(ye(g),ye(i));const y=fe(a,c),b=fe(a,c),x=P(l,d);r=P(P(x,y),b);const S=Is(r,s);s=Dn(S,r,s),t=Dn(S,Vn([h]),t)}return t}u(KX,"otsu");const XX=D({threshold_:qX});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n,e,t="nearest",s="constant",r=0,o){const i=_(n,"image","transform","float32"),a=_(e,"transforms","transform","float32");N(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const c={image:i,transforms:a},l={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return F.runKernel(hg,c,l)}u(YX,"transform_");const QX=D({transform_:YX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JX(n,e,t){const s=_(n,"a","bandPart");N(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,c;typeof e=="number"?(N(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),N(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=_(e<0?o:e,"numLower","bandPart")):(N(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Dn(Ul(e,0),o,ra(e,o))),typeof t=="number"?(N(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),N(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),c=_(t<0?i:t,"numUpper","bandPart")):(N(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),c=Dn(Ul(t,0),i,ra(t,i)));const l=M(kc(0,o,1,"int32"),[-1,1]),d=kc(0,i,1,"int32"),h=fe(l,d),p=Ur(wa(h,a),fi(h,Rt(c))),f=Zt([o,i],s.dtype);return M(ys(or(M(s,[-1,o,i])).map(m=>Dn(p,m,f))),r)}u(JX,"bandPart_");const ZX=D({bandPart_:JX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){let e;if(Array.isArray(n)){e=!1,N(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)N(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=es(n,n.shape[0],0).map(r=>vo(r,[0]));N(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(F.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=P(ye(P(t[i],o)),t[i]);o=fe(o,a)}return Se(o,Ch(o,"euclidean"))}));return e?ys(t,0):t}u(e8,"gramSchmidt_");const t8=D({gramSchmidt_:e8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n,e=!1){if(N(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Iv(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,l)=>c*l),s=or(M(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(c=>{const[l,d]=Iv(c,e);r.push(l),o.push(d)});const i=M(ys(r,0),n.shape),a=M(ys(o,0),n.shape);return[i,a]}}u(n8,"qr_");function Iv(n,e=!1){return F.tidy(()=>{N(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=Dw(t),o=ho(n);const i=Il([[1]],[1,1]);let a=ho(i);const c=t>=s?s:t;for(let l=0;l<c;++l){const d=o,h=a,p=r;[a,o,r]=F.tidy(()=>{const f=Je(o,[l,l],[t-l,1]),m=Ch(f),g=Je(o,[l,l],[1,1]),y=Dn(Is(g,0),Il([[-1]]),Il([[1]])),b=fe(g,P(y,m)),x=Se(f,b);x.shape[0]===1?a=ho(i):a=Wt([i,Je(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const S=Rt(Se(Qe(y,b),m)),w=Je(o,[l,0],[t-l,s]),C=P(S,a),v=Ze(a);if(l===0)o=fe(w,Qe(C,Qe(v,w)));else{const T=fe(w,Qe(C,Qe(v,w)));o=Wt([Je(o,[0,0],[l,s]),T],0)}const k=Ze(C),$=Je(r,[0,l],[t,r.shape[1]-l]);if(l===0)r=fe($,Qe(Qe($,a),k));else{const T=fe($,Qe(Qe($,a),k));r=Wt([Je(r,[0,0],[t,l]),T],1)}return[a,o,r]}),We([d,h,p])}return!e&&t>s&&(r=Je(r,[0,0],[t,s]),o=Je(o,[0,0],[s,s])),[r,o]})}u(Iv,"qr2d");const s8=D({qr_:n8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Jn||(Jn={}));function r8(n,e,t=Jn.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=_(e,"weights","computeWeightedLoss"));const o=r==null?s:P(s,r);if(t===Jn.NONE)return o;if(t===Jn.SUM)return ye(o);if(t===Jn.MEAN){if(r==null)return Gt(o);{const i=s.size/r.size,a=Se(ye(o),ye(r));return i>1?Se(a,ve(i)):a}}if(t===Jn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Se(ye(o),ve(s.size));{const i=P(r,ms(s.shape)),a=le(ye(Ic(i,ve(0))),"float32");return Se(ye(o),a)}}throw Error(`Unknown reduction: ${t}`)}u(r8,"computeWeightedLoss_");const ko=D({computeWeightedLoss_:r8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n,e,t,s=Jn.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"labels","absoluteDifference"),o=_(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=_(t,"weights","absoluteDifference")),cs(r.shape,o.shape,"Error in absoluteDifference: ");const a=nn(fe(r,o));return ko(a,i,s)}u(o8,"absoluteDifference_");const i8=D({absoluteDifference_:o8});function a8(n,e,t,s,r=Jn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","cosineDistance"),i=_(e,"predictions","cosineDistance");let a=null;s!=null&&(a=_(s,"weights","cosineDistance")),cs(o.shape,i.shape,"Error in cosineDistance: ");const c=ve(1),l=fe(c,ye(P(o,i),t,!0));return ko(l,a,r)}u(a8,"cosineDistance_");const c8=D({cosineDistance_:a8});function u8(n,e,t,s=Jn.SUM_BY_NONZERO_WEIGHTS){let r=_(n,"labels","hingeLoss");const o=_(e,"predictions","hingeLoss");let i=null;t!=null&&(i=_(t,"weights","hingeLoss")),cs(r.shape,o.shape,"Error in hingeLoss: ");const a=ve(1);r=fe(P(ve(2),r),a);const c=Xr(fe(a,P(r,o)));return ko(c,i,s)}u(u8,"hingeLoss_");const l8=D({hingeLoss_:u8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d8(n,e,t,s=1,r=Jn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","huberLoss"),i=_(e,"predictions","huberLoss");let a=null;t!=null&&(a=_(t,"weights","huberLoss")),cs(o.shape,i.shape,"Error in huberLoss: ");const c=ve(s),l=nn(fe(i,o)),d=ra(l,c),h=fe(l,d),p=ee(P(ve(.5),wt(d)),P(c,h));return ko(p,a,r)}u(d8,"huberLoss_");const h8=D({huberLoss_:d8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(n,e,t,s=1e-7,r=Jn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","logLoss"),i=_(e,"predictions","logLoss");let a=null;t!=null&&(a=_(t,"weights","logLoss")),cs(o.shape,i.shape,"Error in logLoss: ");const c=ve(1),l=ve(s),d=Rt(P(o,Rs(ee(i,l)))),h=P(fe(c,o),Rs(ee(fe(c,i),l))),p=fe(d,h);return ko(p,a,r)}u(p8,"logLoss_");const f8=D({logLoss_:p8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(n,e,t,s=Jn.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"labels","meanSquaredError"),o=_(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=_(t,"weights","meanSquaredError")),cs(r.shape,o.shape,"Error in meanSquaredError: ");const a=tS(r,o);return ko(a,i,s)}u(m8,"meanSquaredError_");const g8=D({meanSquaredError_:m8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(n,e){const t=_(n,"labels","sigmoidCrossEntropyWithLogits"),s=_(e,"logits","sigmoidCrossEntropyWithLogits");cs(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Xr(s),o=P(s,t),i=Cg(os(Rt(nn(s))));return ee(fe(r,o),i)}u(y8,"sigmoidCrossEntropyWithLogits_");function b8(n,e,t,s=0,r=Jn.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"multiClassLabels","sigmoidCrossEntropy");const i=_(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=_(t,"weights","sigmoidCrossEntropy")),cs(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const l=ve(s),d=ve(1),h=ve(.5);o=ee(P(o,fe(d,l)),P(h,l))}const c=y8(o,i);return ko(c,a,r)}u(b8,"sigmoidCrossEntropy_");const x8=D({sigmoidCrossEntropy_:b8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w8(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Co((r,o,i)=>{const c=vg(o,[t],!0),l=fe(le(o,"float32"),c);i([r,l]);const d=Rt(P(l,r));return{value:ye(d,[t]),gradFunc:u((f,m)=>{const[g,y]=m,b=qt(f.shape,[t]);return[P(M(f,b),fe(le(g,"float32"),os(y))),P(M(f,b),fe(os(y),le(g,"float32")))]},"gradFunc")}})(n,e)}u(w8,"softmaxCrossEntropyWithLogits_");function S8(n,e,t,s=0,r=Jn.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"onehotLabels","softmaxCrossEntropy");const i=_(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=_(t,"weights","softmaxCrossEntropy")),cs(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const l=ve(s),d=ve(1),h=ve(o.shape[1]);o=ee(P(o,fe(d,l)),Se(l,h))}const c=w8(o,i);return ko(c,a,r)}u(S8,"softmaxCrossEntropy_");const C8=D({softmaxCrossEntropy_:S8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n,e,t,s){const r=_(n,"indices","sparseFillEmptyRows","int32"),o=_(e,"values","sparseFillEmptyRows"),i=_(t,"denseShape","sparseFillEmptyRows","int32"),a=_(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const c={indices:r,values:o,denseShape:i,defaultValue:a},l=F.runKernel(pw,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}u(v8,"sparseFillEmptyRows_");const I8=D({sparseFillEmptyRows_:v8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n,e,t){const s=_(n,"inputIndices","sparseReshape","int32"),r=_(e,"inputShape","sparseReshape","int32"),o=_(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=F.runKernel(fw,i);return{outputIndices:a[0],outputShape:a[1]}}u(k8,"sparseReshape_");const $8=D({sparseReshape_:k8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n,e,t){const s=_(n,"data","sparseSegmentMean"),r=_(e,"indices","sparseSegmentMean","int32"),o=_(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return F.runKernel(rg,i)}u(N8,"sparseSegmentMean_");const T8=D({sparseSegmentMean_:N8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(n,e,t){const s=_(n,"data","sparseSegmentSum"),r=_(e,"indices","sparseSegmentSum","int32"),o=_(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return F.runKernel(og,i)}u(E8,"sparseSegmentSum_");const _8=D({sparseSegmentSum_:E8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(n,e,t,s,r,o,i,a){const c=_(n,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const l=_(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const d={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},h={data:c,dataSplits:l},p=F.runKernel(lg,h,d);return{nGrams:p[0],nGramsSplits:p[1]}}u(R8,"stringNGrams_");const A8=D({stringNGrams_:R8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n,e,t=!0){const s=_(n,"input","stringSplit","string"),r=_(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},i={input:s,delimiter:r},a=F.runKernel(mw,i,o);return{indices:a[0],values:a[1],shape:a[2]}}u(D8,"stringSplit_");const O8=D({stringSplit_:D8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(n,e){const t=_(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return F.runKernel(gw,r,s)}u(F8,"stringToHashBucketFast_");const P8=D({stringToHashBucketFast_:F8});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(n,e,t,s=!0){const r=_(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return F.runKernel(cg,{x:r},o)}u(L8,"staticRegexReplace_");const M8=D({staticRegexReplace_:L8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8={fft:Dg,ifft:jl,rfft:Og,irfft:eS},B8={hammingWindow:hX,hannWindow:oE,frame:iE,stft:gX},Un={flipLeftRight:wX,grayscaleToRGB:CX,resizeNearestNeighbor:cE,resizeBilinear:aE,rgbToGrayscale:IX,rotateWithOffset:$X,cropAndResize:bX,nonMaxSuppression:TX,nonMaxSuppressionAsync:PX,nonMaxSuppressionWithScore:MX,nonMaxSuppressionWithScoreAsync:BX,nonMaxSuppressionPadded:VX,nonMaxSuppressionPaddedAsync:GX,threshold:XX,transform:QX},uE={bandPart:ZX,gramSchmidt:t8,qr:s8},W8={absoluteDifference:i8,computeWeightedLoss:ko,cosineDistance:c8,hingeLoss:l8,huberLoss:h8,logLoss:f8,meanSquaredError:g8,sigmoidCrossEntropy:x8,softmaxCrossEntropy:C8},V8={sparseFillEmptyRows:I8,sparseReshape:$8,sparseSegmentMean:T8,sparseSegmentSum:_8},U8={stringNGrams:A8,stringSplit:O8,stringToHashBucketFast:P8,staticRegexReplace:M8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8=new Map,H8=new Map;class Gu{static{u(this,"Serializable")}getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Gs{static{u(this,"SerializationMap")}constructor(){this.classNameMap={}}static getMap(){return Gs.instance==null&&(Gs.instance=new Gs),Gs.instance}static register(e){Gs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function te(n,e,t){N(n.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),N(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return Gs.register(n),G8.set(r,n),H8.set(n,r),n}u(te,"registerClass");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gi extends Gu{static{u(this,"Optimizer")}minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return We(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return y5(e,t)}dispose(){this.iterations_!=null&&We(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(gi,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lE extends gi{static{u(this,"AdadeltaOptimizer")}static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=F.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=F.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:H(()=>et(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:H(()=>et(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const c=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;H(()=>{const d=ee(P(c,this.rho),P(wt(a),1-this.rho)),h=P(Se(Tn(ee(l,this.epsilon)),Tn(ee(c,this.epsilon))),a),p=ee(P(l,this.rho),P(wt(h),1-this.rho));c.assign(d),l.assign(p);const f=ee(P(h,-this.learningRate),o);o.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(We(this.accumulatedGrads.map(e=>e.variable)),We(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dE extends gi{static{u(this,"AdagradOptimizer")}static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=F.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:H(()=>Bu(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;H(()=>{const c=ee(a,wt(i));a.assign(c);const l=ee(P(Se(i,Tn(ee(c,F.backend.epsilon()))),-this.learningRate),o);o.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&We(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hE extends gi{static{u(this,"AdamOptimizer")}static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],H(()=>{this.accBeta1=ve(t).variable(),this.accBeta2=ve(s).variable()}),r==null&&(this.epsilon=F.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);H(()=>{const s=fe(1,this.accBeta1),r=fe(1,this.accBeta2);t.forEach((o,i)=>{const a=F.registeredVariables[o],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:H(()=>et(a).variable(c))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:H(()=>et(a).variable(c))});const l=Array.isArray(e)?e[i].tensor:e[o];if(l==null)return;const d=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,p=ee(P(d,this.beta1),P(l,1-this.beta1)),f=ee(P(h,this.beta2),P(wt(l),1-this.beta2)),m=Se(p,s),g=Se(f,r);d.assign(p),h.assign(f);const y=ee(P(Se(m,ee(Tn(g),this.epsilon)),-this.learningRate),a);a.assign(y)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&We(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&We(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),H(()=>{this.accBeta1.assign(So(this.beta1,this.iterations_+1)),this.accBeta2.assign(So(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pE extends gi{static{u(this,"AdamaxOptimizer")}static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],H(()=>{this.iteration=ve(0).variable(),this.accBeta1=ve(t).variable()}),r==null&&(this.epsilon=F.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);H(()=>{const s=fe(1,this.accBeta1),r=Se(-this.learningRate,ee(P(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=F.registeredVariables[o],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:et(a).variable(c)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:et(a).variable(c)});const l=Array.isArray(e)?e[i].tensor:e[o];if(l==null)return;const d=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,p=ee(P(d,this.beta1),P(l,1-this.beta1)),f=P(h,this.beta2),m=nn(l),g=Io(f,m);d.assign(p),h.assign(g);const y=ee(P(Se(r,s),Se(p,ee(g,this.epsilon))),a);a.assign(y)}),this.iteration.assign(ee(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&We(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&We(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lS extends gi{static{u(this,"SGDOptimizer")}static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=F.registeredVariables[s];H(()=>{const a=ee(P(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=bn(ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fE extends lS{static{u(this,"MomentumOptimizer")}static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=F.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:H(()=>et(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&H(()=>{let c;const l=ee(P(this.m,i),a);this.useNesterov?c=ee(P(this.c,ee(a,P(l,this.m))),o):c=ee(P(this.c,l),o),i.assign(l),o.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&We(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mE extends gi{static{u(this,"RMSPropOptimizer")}static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=F.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=F.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:H(()=>et(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:H(()=>et(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:H(()=>et(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const c=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;H(()=>{const d=ee(P(c,this.decay),P(wt(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,p=ee(P(h,this.decay),P(a,1-this.decay)),f=Se(P(a,this.learningRate),Tn(fe(d,ee(wt(p),this.epsilon)))),m=ee(P(l,this.momentum),f);c.assign(d),h.assign(p),l.assign(m);const g=fe(o,m);o.assign(g)}else{const h=ee(P(c,this.decay),P(wt(a),1-this.decay)),p=ee(P(l,this.momentum),Se(P(a,this.learningRate),Tn(ee(h,this.epsilon))));c.assign(h),l.assign(p);const f=fe(o,p);o.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&We(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&We(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&We(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8=[lE,dE,hE,pE,fE,mE,lS];function q8(){for(const n of j8)te(n)}u(q8,"registerOptimizers");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8="model",X8=".json",Y8=".weights.bin";function kv(n){return new Promise(e=>setTimeout(e)).then(n)}u(kv,"defer");class oa{static{u(this,"BrowserDownloads")}constructor(e){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(oa.URL_SCHEME)&&(e=e.slice(oa.URL_SCHEME.length)),(e==null||e.length===0)&&(e=K8),this.modelJsonFileName=e+X8,this.weightDataFileName=e+Y8}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=kr.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=jN(e,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await kv(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=s,await kv(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:bh(e)}}}}oa.URL_SCHEME="downloads://";class Q8{static{u(this,"BrowserFiles")}constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const c=Cw(o,l=>this.loadWeights(l));e(c)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const i of e)t.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>Cv(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=Cv(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const J8=u(n=>j().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(oa.URL_SCHEME)?Z8(n.slice(oa.URL_SCHEME.length)):null,"browserDownloadsRouter");Pt.registerSaveRouter(J8);function Z8(n="model"){return new oa(n)}u(Z8,"browserDownloads");function eY(n){return new Q8(n)}u(eY,"browserFiles");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $v(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let r=0;const o=u(c=>(c.then(l=>{const d=t+ ++r/n.length*(s-t);return e(d),l}),c),"registerMonitor");function i(c){N(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}u(i,"checkPromises");function a(c,l){N(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),N(l>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${l}`)}return u(a,"checkFraction"),Promise.all(n.map(o))}u($v,"monitorPromisesProgress");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function gE(n,e){e==null&&(e={});const t=e.fetchFunc==null?j().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await $v(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await $v(a,e.onProgress,.5,1)}u(gE,"loadWeightsAsArrayBuffer");function tY(n,e){var t;const s=e.fetchFunc==null?j().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:c,value:l}=await o.read();if(c){r++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}i.enqueue(l);return}i.close()}})}u(tY,"streamWeights");async function nY(n,e="",t,s){return yE(u(i=>gE(i,{requestInit:s}),"fetchWeights"))(n,e,t)}u(nY,"loadWeights");function yE(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((f,m)=>{let g=0;f.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,x=Ji[b]*U(y.shape),S=u(()=>{r[m]=!0,o[m]==null&&(o[m]=[]),o[m].push({manifestEntry:y,groupOffset:g,sizeBytes:x})},"enqueueWeightsForFetchingFn");s!=null?s.forEach((w,C)=>{w===y.name&&(S(),i[C]=!0)}):S(),a.push(y.name),g+=x})}),!i.every(f=>f)){const f=s.filter((m,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const c=r.reduce((f,m,g)=>(m&&f.push(g),f),[]),l=[];c.forEach(f=>{e[f].paths.forEach(m=>{const g=t+(t.endsWith("/")?"":"/")+m;l.push(g)})});const d=await n(l),h={};let p=0;return c.forEach(f=>{const m=e[f].paths.length,g=new kr(d.slice(p,p+m));o[f].forEach(b=>{const x=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),S=VN(x,[b.manifestEntry]);for(const w in S)h[w]=S[w]}),p+=m}),h}}u(yE,"weightsLoaderFactory");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY="application/octet-stream",rY="application/json";class dS{static{u(this,"HTTPRequest")}constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(N(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=j().platform.fetch,N(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&N(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=jN(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:rY}),"model.json"),e.weightData!=null){const i=kr.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:sY}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:bh(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Cw(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=wx(e.weightsManifest),r=u(()=>tY(t,this.loadOptions),"stream");return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=oY(t),o=this.weightPathPrefix||s,i=[],a=[];for(const c of e)for(const l of c.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(l)):i.push(o+l+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=wx(e),r=await gE(t,this.loadOptions);return[s,r]}}dS.URL_SCHEME_REGEX=/^https?:\/\//;function oY(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}u(oY,"parseUrl");function Nx(n){return n.match(dS.URL_SCHEME_REGEX)!=null}u(Nx,"isHTTPScheme");const bE=u((n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Nx(s)):t=Nx(n),t)return hS(n,e)}return null},"httpRouter");Pt.registerSaveRouter(bE);Pt.registerLoadRouter(bE);function hS(n,e){return new dS(n,e)}u(hS,"http");function iY(n,e){return hS(n,e)}u(iY,"browserHTTPRequest");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tb{static{u(this,"PassthroughLoader")}constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class xE{static{u(this,"PassthroughSaver")}constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class aY{static{u(this,"PassthroughAsync")}constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function cY(n,e,t,s){const r=arguments;return new aY(wE(...r))}u(cY,"fromMemory");function wE(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new tb(n):new tb({modelTopology:n}):new tb({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s})}u(wE,"fromMemorySync");function uY(n){return new xE(n)}u(uY,"withSaveHandler");function lY(n){return new xE(n)}u(lY,"withSaveHandlerSync");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var SE=Object.freeze({__proto__:null,CompositeArrayBuffer:kr,browserFiles:eY,browserHTTPRequest:iY,concatenateArrayBuffers:HN,copyModel:hj,decodeWeights:VN,decodeWeightsStream:GN,encodeWeights:xx,fromMemory:cY,fromMemorySync:wE,getLoadHandlers:JH,getModelArtifactsForJSON:Cw,getModelArtifactsForJSONSync:qN,getModelArtifactsInfoForJSON:bh,getSaveHandlers:KN,getWeightSpecs:wx,http:hS,isHTTPScheme:Nx,listModels:lj,loadWeights:nY,moveModel:pj,registerLoadRouter:QH,registerSaveRouter:YH,removeModel:dj,weightsLoaderFactory:yE,withSaveHandler:uY,withSaveHandlerSync:lY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Si;function dY(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(dx(gf,F.backendName)!=null){const m={pixels:n},g={numChannels:e};return F.runKernel(gf,m,g)}const[l,d]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(i)h=n.getContext("2d").getImageData(0,0,l,d).data;else if(s||t)h=n.data;else if(o||r||a){if(Si==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Si=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Si=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Si.canvas.width=l,Si.canvas.height=d,Si.drawImage(n,0,0,l,d),h=Si.getImageData(0,0,l,d).data}let p;if(e===4)p=new Int32Array(h);else{const m=l*d;p=new Int32Array(m*e);for(let g=0;g<m;g++)for(let y=0;y<e;++y)p[g*e+y]=h[g*4+y]}return KT(p,[d,l,e],"int32")}u(dY,"fromPixels_");const If=D({fromPixels_:dY});function Wg(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(U(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=n.shape,c=r.slice();c.pop();let l=1;for(let h=o;h<t;++h)l*=a[h],c.push(a[h]);const d=[...we(n.shape).map(h=>h/l),1].slice(0,o);return[c,i,l,d]}u(Wg,"prepareAndValidate");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tx=-2,hY=-1;function Vg(n,e,t){const s=n.shape.length;N(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),N(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)N(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}u(Vg,"assertParamsValid");function pY(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}u(pY,"maskToAxes");function Ug(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}u(Ug,"computeOutShape$2");function CE(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}u(CE,"stridesWithElidedDims");function vE(n,e,t){return t<=n?t:t-(e-1)}u(vE,"unnormalizeAxis");function IE(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}u(IE,"getElidedAxes");function fY(n,e,t,s,r,o,i,a,c){const l=n.length;let d=new Array(l),h=new Array(l),p=new Array(l);if(e.length&&t>0){const f=e[0],m=t+1;d=kE(i,f,m,s,n),h=$E(a,f,m,r,n),p=CE(o,f,m,n)}else for(let f=0;f<l;f++)d[f]=TE(i,s,o,n,f,c),h[f]=EE(a,r,o,n,f,c),p[f]=NE(o,f,c);return{begin:d,end:h,strides:p}}u(fY,"getNormalizedAxes");function kE(n,e,t,s,r){const o=[...r],i=IE(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const c=vE(e,t,a);let l=s[c];n&1<<c&&(l=0),o[a]=l}return o}u(kE,"startIndicesWithElidedDims");function $E(n,e,t,s,r){const o=[...r],i=IE(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const c=vE(e,t,a);let l=s[c];n&1<<c&&(l=Number.MAX_SAFE_INTEGER),o[a]=l}for(let a=0;a<o.length;a++){const c=r[a];o[a]<0&&(o[a]+=c),o[a]=Yi(0,o[a],r[a])}return o}u($E,"stopIndicesWithElidedDims");function NE(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}u(NE,"stridesForAxis");function TE(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const c=s[r];return i<0&&(i+=c),i=Yi(0,i,c-1),i}u(TE,"startForAxis");function EE(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const c=s[r];return i<0&&(i+=c),a>0?i=Yi(0,i,c):i=Yi(-1,i,c-1),i}u(EE,"stopForAxis");function pS(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}u(pS,"isSliceContinous");function fS(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}u(fS,"computeFlatOffset");function Ih(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{N(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(N(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}u(Ih,"parseSliceParams");function Gg(n,e,t,s,r,o,i,a,c){let l;if(s==null?(l=new Array(e.length),l.fill(1)):l=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:c};for(let S=0;S<h.dims;S++)d&&1<<S&a&&h.numAddAxisAfterEllipsis++,1<<S&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};mY(h,p);let f=!0,m=!0,g=!0;const y=[],b=[];for(let S=0;S<n.length;++S){if(p.strides[S]===0)throw Error(`strides[${S}] must be non-zero`);const w=!!(p.shrinkAxisMask&1<<S),C=n[S];if(C===-1){y.push(w?1:-1);continue}const v=[p.beginMask&1<<S,p.endMask&1<<S],k=[p.strides[S]>0?0:-1,p.strides[S]>0?C:C-1];if(w&&p.strides[S]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&p.strides[S]===1;const $=!!(p.beginMask&1<<S&&p.endMask&1<<S);if(p.beginValid&&p.endValid){if(w){const O=p.begin[S]<0?C+p.begin[S]:p.begin[S];if(p.begin[S]=O,p.end[S]=p.begin[S]+1,O<0||O>=C)throw Error(`slice index ${p.begin[S]} of dimension ${S} out of bounds.`)}else p.begin[S]=Nv(p.begin[S],0,p.strides[S],C,v,k),p.end[S]=Nv(p.end[S],1,p.strides[S],C,v,k);const R=p.strides[S]===1&&p.begin[S]===0&&p.end[S]===C;f=f&&R,m=m&&(S===0&&p.strides[S]===1||R)}else f=f&&p.strides[S]===1&&$,m=m&&(S===0&&p.strides[S]===1||$);let T,E=!1;if(p.beginValid&&p.endValid?(T=p.end[S]-p.begin[S],E=!0):w?(T=1,E=!0):$&&C>=0&&(p.strides[S]<0?T=-C:T=C,E=!0),E){let R;T===0||T<0!=p.strides[S]<0?R=0:R=Math.trunc(T/p.strides[S])+(T%p.strides[S]!==0?1:0),y.push(R)}else y.push(-1)}for(let S=0;S<p.finalShapeGatherIndices.length;++S){const w=p.finalShapeGatherIndices[S];w>=0?b.push(y[w]):w===Tx&&b.push(1)}return{finalShapeSparse:b.filter((S,w)=>p.finalShapeGatherIndices[w]!==Tx),finalShape:b,isIdentity:f,sliceDim0:m,isSimpleSlice:g,begin:p.begin,end:p.end,strides:p.strides}}u(Gg,"sliceInfo");function mY(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Tx),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(hY),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}u(mY,"buildDenseSpec");function Nv(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}u(Nv,"canonical");var gY=Object.freeze({__proto__:null,assertParamsValid:Vg,computeFlatOffset:fS,computeOutShape:Ug,getNormalizedAxes:fY,isSliceContinous:pS,maskToAxes:pY,parseSliceParams:Ih,sliceInfo:Gg,startForAxis:TE,startIndicesWithElidedDims:kE,stopForAxis:EE,stopIndicesWithElidedDims:$E,stridesForAxis:NE,stridesWithElidedDims:CE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yY{static{u(this,"OptimizerConstructors")}static sgd(e){return new lS(e)}static momentum(e,t,s=!1){return new fE(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new mE(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new hE(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new lE(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new pE(e,t,s,r,o)}static adagrad(e,t=.1){return new dE(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pa=yY;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function _E(){return new Promise(n=>bY(()=>n()))}u(_E,"nextFrame");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hg(n,e){const t=n[0].length;n.forEach((r,o)=>{N(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),N(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)N(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}u(Hg,"assertParamsConsistent");function ts(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}u(ts,"computeOutShape$1");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(fr||(fr={}));function RE(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],i=s[s.length-t.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}u(RE,"combineRaggedTensorToTensorShapes");function AE(n){const e={FIRST_DIM_SIZE:fr.FIRST_DIM_SIZE,VALUE_ROWIDS:fr.VALUE_ROWIDS,ROW_LENGTHS:fr.ROW_LENGTHS,ROW_SPLITS:fr.ROW_SPLITS,ROW_LIMITS:fr.ROW_LIMITS,ROW_STARTS:fr.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}u(AE,"getRowPartitionTypesHelper");function DE(n){return n.length===0?0:n[0]===fr.FIRST_DIM_SIZE?n.length-1:n.length}u(DE,"getRaggedRank");function OE(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}u(OE,"validateDefaultValueShape");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS=30;function jg(n){return n<=mS?n:ux(n,Math.floor(Math.sqrt(n)))}u(jg,"computeOptimalWindowSize");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qg(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}u(qg,"getImageCenter");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function va(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}u(va,"getReshaped");function Ia(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}u(Ia,"getPermuted");function ka(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}u(ka,"getReshapedPermuted");function Kg(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}u(Kg,"getSliceBeginCoords");function Xg(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}u(Xg,"getSliceSize");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kh=1.7580993408473768,$h=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yg=.3275911,Qg=.254829592,Jg=-.284496736,Zg=1.421413741,ey=-1.453152027,ty=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}u(xr,"mergeRealAndImagArrays");function FE(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}u(FE,"splitRealAndImagArrays");function PE(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}u(PE,"complexWithEvenIndex");function LE(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}u(LE,"complexWithOddIndex");function gS(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}u(gS,"getComplexWithIndex");function ME(n,e,t,s){n[s*2]=e,n[s*2+1]=t}u(ME,"assignToTypedArray");function zE(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}u(zE,"exponents");function BE(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}u(BE,"exponent");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nb="->",xY=/->/g,Tv=",",Ev="...";function ny(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(xY,"").length)/nb.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${nb}").`);const[s,r]=n.split(nb);N(s.indexOf(Ev)===-1,()=>`The ellipsis notation ("${Ev}") is not supported yet.`);const o=s.split(Tv),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let p=0;p<r.length;++p){const f=r[p];if(!o.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let p=0;p<s.length;++p){const f=s[p];a.indexOf(f)===-1&&f!==Tv&&a.push(f)}const c=new Array(o.length);for(let p=0;p<i;++p){if(new Set(o[p].split("")).size!==o[p].length)throw new Error(`Found duplicate axes in input component ${o[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let f=0;f<o[p].length;++f)c[p].push(a.indexOf(o[p][f]))}const l=a.length,d=r.length,h=[];for(let p=d;p<l;++p)h.push(p);return{allDims:a,summedDims:h,idDims:c}}u(ny,"decodeEinsumEquation");function sy(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}u(sy,"getEinsumPermutation");function ry(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:N(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}u(ry,"checkEinsumDimSizes");function oy(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],c=wY(e,a);for(const l of c)o.indexOf(l)===-1&&(s[i].push(l),o.push(l))}return{path:t,steps:s}}u(oy,"getEinsumComputePath");function iy(n){return n.every((e,t)=>e===t)}u(iy,"isIdentityPermutation");function wY(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}u(wY,"findTermsWithDim");function ay(n,e,t=0){let s=[];if(typeof e=="number")N(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);N(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,c)=>c>0?a+c:a);e[o]=n.shape[t]-i}N(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}u(ay,"prepareSplitSize");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}u(WE,"getSparseFillEmptyRowsIndicesDenseShapeMismatch");function VE(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}u(VE,"getSparseFillEmptyRowsNegativeIndexErrorMessage");function UE(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}u(UE,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}u(GE,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage");function HE(n,e){return`size ${n} must be non-negative, not ${e}`}u(HE,"getSparseReshapeNegativeOutputDimErrorMessage");function jE(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}u(jE,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage");function qE(n,e){const t=U(n),s=U(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}u(qE,"getSparseReshapeInputOutputMultipleErrorMessage");function KE(n,e){const t=U(n),s=U(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}u(KE,"getSparseReshapeInputOutputMismatchErrorMessage");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(){return"segment ids must be >= 0"}u(Ex,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage");function XE(){return"segment ids are not increasing"}u(XE,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage");function YE(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}u(YE,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage");function QE(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}u(QE,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n,e){let t=!1,s;for(n<=mS?(s=n,t=!0):s=ux(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=ux(n,s+1);return s}u(JE,"segOpComputeOptimalWindowSize");function yS(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}u(yS,"computeOutShape");function cy(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],a=[];let c=1,l=1,d=1;for(let h=0;h<s;++h)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<r;h++)a.push(e.shape[h]);for(let h=t+1;h<o;h++)a.push(n.shape[h]),d*=n.shape[h];return{batchSize:c,sliceSize:d,outerSize:l,dimSize:i,outputShape:a}}u(cy,"collectGatherOpShapeInfo");var SY=Object.freeze({__proto__:null,collectGatherOpShapeInfo:cy,computeOutShape:yS,segOpComputeOptimalWindowSize:JE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(n){try{return n.map(e=>yr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}u(wr,"fromUint8ToStringArray");function ZE(n){return n.map(e=>lo(e))}u(ZE,"fromStringArrayToUint8");var CY=Object.freeze({__proto__:null,ERF_A1:Qg,ERF_A2:Jg,ERF_A3:Zg,ERF_A4:ey,ERF_A5:ty,ERF_P:Yg,PARALLELIZE_THRESHOLD:mS,get RowPartitionType(){return fr},SELU_SCALE:$h,SELU_SCALEALPHA:kh,applyActivation:Lg,assertAndGetBroadcastShape:Ne,assertAxesAreInnerMostDims:tn,assertParamsConsistent:Hg,assignToTypedArray:ME,axesAreInnerMostDims:Aw,calculateShapes:Yr,checkEinsumDimSizes:ry,checkPadOnDimRoundingMode:Hn,combineLocations:TT,combineRaggedTensorToTensorShapes:RE,complexWithEvenIndex:PE,complexWithOddIndex:LE,computeConv2DInfo:kt,computeConv3DInfo:$r,computeDefaultPad:kw,computeDilation2DInfo:pi,computeOptimalWindowSize:jg,computeOutAndReduceShapes:Yt,computeOutShape:ts,computePool2DInfo:Fn,computePool3DInfo:Os,convertConv2DDataFormat:vs,decodeEinsumEquation:ny,eitherStridesOrDilationsAreOne:hn,expandShapeToKeepDim:qt,exponent:BE,exponents:zE,fromStringArrayToUint8:ZE,fromUint8ToStringArray:wr,getAxesPermutation:xt,getBroadcastDims:Zo,getComplexWithIndex:gS,getEinsumComputePath:oy,getEinsumPermutation:sy,getFusedBiasGradient:Pg,getFusedDyActivation:Fg,getImageCenter:qg,getInnerMostAxes:$t,getPermuted:Ia,getRaggedRank:DE,getReductionAxes:dn,getReshaped:va,getReshapedPermuted:ka,getRowPartitionTypesHelper:AE,getSliceBeginCoords:Kg,getSliceSize:Xg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:WE,getSparseFillEmptyRowsNegativeIndexErrorMessage:VE,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:UE,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:jE,getSparseReshapeInputOutputMismatchErrorMessage:KE,getSparseReshapeInputOutputMultipleErrorMessage:qE,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:GE,getSparseReshapeNegativeOutputDimErrorMessage:HE,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:QE,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Ex,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:XE,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:YE,getUndoAxesPermutation:Kr,isIdentityPermutation:iy,log:pH,mergeRealAndImagArrays:xr,prepareAndValidate:Wg,prepareSplitSize:ay,segment_util:SY,shouldFuse:Mg,slice_util:gY,splitRealAndImagArrays:FE,stridesOrDilationsArePositive:ta,tupleValuesAreOne:Qo,upcastType:wn,validateDefaultValueShape:OE,validateInput:nS,validateUpdateShape:XT,warn:Ts});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q8();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e_={kernelName:yd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,Vu(le(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=wt(le(t,"float32")),r=Tn(fe(ve(1),s));return Rt(Se(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY={kernelName:jc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Tn(fe(wt(le(t,"float32")),1));return Se(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY={kernelName:ya,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{let a=n;const c=dn(t.shape,r);return c.length>0&&(a=ye(a,c)),M(a,t.shape)},"derA"),b:u(()=>{let a=n;const c=dn(s.shape,r);return c.length>0&&(a=ye(a,c)),M(a,s.shape)},"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y={kernelName:bd,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY={kernelName:xd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>et(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TY={kernelName:wd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>et(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY={kernelName:qc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,Tn(fe(ve(1),wt(le(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Y={kernelName:Kc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Tn(ee(ve(1),wt(le(t,"float32"))));return Se(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RY={kernelName:Qc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{const a=ee(wt(t),wt(s));let c=P(n,Se(s,a));const l=dn(t.shape,r);return l.length>0&&(c=ye(c,l)),M(c,t.shape)},"derA"),b:u(()=>{const a=ee(wt(t),wt(s));let c=Rt(P(n,Se(t,a)));const l=dn(s.shape,r);return l.length>0&&(c=ye(c,l)),M(c,s.shape)},"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AY={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,ee(wt(le(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY={kernelName:Yc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,fe(ve(1),wt(le(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n,e,t,s,r,o){const i=_(n,"dy","avgPool3dGrad"),a=_(e,"input","avgPool3dGrad");let c=i,l=a,d=!1;a.rank===4&&(d=!0,c=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),N(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Hn("avgPool3dGrad",r,o);const h={dy:c,input:l},p={filterSize:t,strides:s,pad:r,dimRoundingMode:o},f=F.runKernel(wm,h,p);return d?M(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}u(OY,"avgPool3dGrad_");const FY=D({avgPool3dGrad_:OY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY={kernelName:Cd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=t;return{x:()=>FY(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n,e,t,s,r){const o=_(n,"dy","avgPoolGrad"),i=_(e,"input","avgPoolGrad");N(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,c=o,l=!1;i.rank===3&&(l=!0,a=M(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=M(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),N(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const d={dy:c,input:a},h={filterSize:t,strides:s,pad:r},p=F.runKernel(xm,d,h);return l?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}u(LY,"avgPoolGrad_");const MY=D({avgPoolGrad_:LY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY={kernelName:Sd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>MY(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BY={kernelName:vd,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>Qe(n,r,!1,!0),b:()=>Qe(s,n,!0,!1)}:!o&&i?{a:()=>Qe(n,r,!1,!1),b:()=>Qe(n,s,!0,!1)}:o&&!i?{a:()=>Qe(r,n,!1,!0),b:()=>Qe(s,n,!1,!1)}:{a:()=>Qe(r,n,!0,!0),b:()=>Qe(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WY={kernelName:Id,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>Ng(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY={kernelName:dH,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let c=r.length-1;c>=0;c--)if(r[c]===o[c])i[c]=1;else if(r[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let c=0;c<i.length;c++)i[c]>1&&a.push(c);return{x:()=>ye(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY={kernelName:Jc,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY={kernelName:Zc,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HY={kernelName:eu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>Dn(Ur(fi(s,r),wa(s,o)),n,et(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY={kernelName:kd,inputsToSave:["x"],gradFunc:e_.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qY={kernelName:$d,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(c=>c.shape),{axis:r}=t,o=Pe(r,e[0].shape)[0],i=s.map(c=>c[o]);return es(n,i,o).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY={kernelName:Nd,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:c}=t;return N(Qo(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Nw(s.shape,n,r,i,a,c),filter:()=>aS(s,n,r.shape,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY={kernelName:Td,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:c}=t;return{dy:()=>Jo(n,r,o,i,a,1,c),filter:()=>aS(n,s,r.shape,o,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(n,e,t,s,r){let o=n;n.rank===4&&(o=M(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),N(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),N(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),N(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),N(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),N(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:o,dy:i},c={strides:s,pad:r,filterShape:t};return F.runKernel($m,a,c)}u(YY,"conv3DBackpropFilter_");const QY=D({conv3DBackpropFilter_:YY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY={kernelName:Ed,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;N(Qo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>CT(i.shape,n,a,r,o),filter:()=>QY(i,n,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY={kernelName:tu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(Rt(Qw(le(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7={kernelName:nu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(Jw(le(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7={kernelName:_d,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const a=xt([r],s.rank);let c=_w(n,r,o,!i);return a!=null&&(c=Ze(c,a)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7={kernelName:Rd,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,a=s??[1,1];N(Qo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[c,l]=e;return N(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),N(hn(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Hn("depthwiseConv2d",o,i),{x:()=>rE(c.shape,n,l,r,o,a,i),filter:()=>sE(c,n,l.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7={kernelName:Ad,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>F.runKernel(ff,o,t),filter:()=>F.runKernel(mf,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7={kernelName:ru,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>F.runKernel(Pm,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7={kernelName:ou,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=P(os(Rt(wt(t))),2/Math.sqrt(Math.PI));return{x:()=>P(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7={kernelName:iu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7={kernelName:Od,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>M(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7={kernelName:au,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,os(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7={kernelName:cu,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7={kernelName:uu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{const a=Se(n,le(s,"float32")),c=dn(t.shape,r);return c.length>0?M(ye(a,c),t.shape):a},"derA"),b:u(()=>{let a=P(n,le(t,"float32"));const c=dn(s.shape,r);c.length>0&&(a=M(ye(a,c),s.shape));const l=wt(s);return Rt(Se(a,le(l,"float32")))},"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7={kernelName:Fd,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,a]=e,c=a??ve(1),l=dn(o.shape,r.shape),d=[];if(o.rank===1){for(let w=0;w<r.shape.length-1;++w)d.push(r.shape[w]);d.push(1)}const h=fe(r,o),p=P(n,c),f=Kw(ee(i,ve(s))),m=P(P(P(f,f),f),ve(-.5));return{x:u(()=>o.rank===1?M(P(P(n,Ks(M(f,[1,1,1,o.shape[0]]),d)),c),r.shape):M(P(P(n,f),c),r.shape),"derX"),mean:u(()=>{let w=P(P(f,ve(-1)),p);return o.rank===1&&(w=ye(w,l)),M(w,o.shape)},"derMean"),variance:u(()=>{let w=P(P(m,h),p);return o.rank===1&&(w=ye(w,l)),M(w,o.shape)},"derVariance"),scale:u(()=>{const w=P(h,f);let C=P(n,w);return o.rank===1&&(C=ye(C,l)),M(C,o.shape)},"derScale"),offset:u(()=>{let w=n;return o.rank===1&&(w=ye(w,l)),M(w,o.shape)},"derOffset")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7={kernelName:Pd,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o,batchDims:i}=t,a=Pe(o,s.shape)[0],c=u((l,d,h)=>()=>{const p=l.shape,f=d.size,m=p.slice(0,a),g=m.length,y=p.slice(o,p.length).slice(1),b=y.length,x=_v(0,g),S=_v(g+1,g+1+b),w=Rv([m,[f],y]),C=M(h,w),v=M(d,[f]),k=Rv([[g],x,S]),$=Ze(C,k);let T=rS($,v,l.shape[a]);const E=Kr(k);return T=Ze(T,E),T},"derXBatch");if(i===1){const l=s.shape[0],d=s.split(l,0);return{x:u(()=>ys(d.map((f,m)=>c(f,r.slice(m,1),n.slice(m,1))())).reshape(s.shape),"derXBatched"),indices:()=>r}}else return{x:c(s,r,n),indices:()=>r}}};function _v(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}u(_v,"arrayRange");function Rv(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}u(Rv,"arrayConcat");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p7={kernelName:lu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>et(t),b:()=>et(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7={kernelName:du,gradFunc:n=>({x:()=>le(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m7={kernelName:hu,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7={kernelName:pu,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y7={kernelName:fu,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b7={kernelName:Md,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=Is(s,0);return{x:()=>Dn(o,n,P(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7={kernelName:gu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,ee(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7={kernelName:mu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,le(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7={kernelName:hH,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=os(s);return fe(n,P(ye(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n,e,t,s=5,r=1,o=1,i=.5){const a={x:n,y:e,dy:t},c={depthRadius:s,bias:r,alpha:o,beta:i};return F.runKernel(Gm,a,c)}u(C7,"localResponseNormalizationBackprop_");const v7=D({localResponseNormalizationBackprop_:C7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7={kernelName:Gd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:c}=t;return{x:()=>v7(s,r,n,o,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n,e,t,s){return e.rank<t.rank&&(e=M(e,qt(e.shape,s))),n.rank<t.rank&&(n=M(n,qt(n.shape,s))),{x:()=>P(n,le(br(t,e),n.dtype))}}u(t_,"gradForMinAndMax");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Av={kernelName:Hd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],a=Pe(r,o.shape),c=t_(n,i,o,a);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7={kernelName:yu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:u(()=>P(n,le(fi(t,s),"float32")),"derA"),b:u(()=>P(n,le(Ul(t,s),"float32")),"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n,e,t,s,r,o,i){const a=_(n,"dy","maxPool3dGrad"),c=_(e,"input","maxPool3dGrad"),l=_(t,"output","maxPool3dGrad");let d=a,h=c,p=l,f=!1;c.rank===4&&(f=!0,d=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=M(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=M(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),N(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),N(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),N(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Hn("maxPool3dGrad",o,i);const m={dy:d,input:h,output:p},g={filterSize:s,strides:r,pad:o,dimRoundingMode:i},y=F.runKernel(jm,m,g);return f?M(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}u($7,"maxPool3dGrad_");const N7=D({maxPool3dGrad_:$7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7={kernelName:qd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=t;return{x:()=>N7(n,s,r,o,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(n,e,t,s,r,o,i){const a=_(n,"dy","maxPoolGrad"),c=_(e,"input","maxPoolGrad"),l=_(t,"output","maxPoolGrad");N(c.rank===a.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${a.rank})`),N(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),N(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),Hn("maxPoolGrad",o,i);const d={dy:a,input:c,output:l},h={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return F.runKernel(Hm,d,h)}u(E7,"maxPoolGrad_");const _7=D({maxPoolGrad_:E7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R7={kernelName:jd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=t;return{x:()=>_7(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7={kernelName:Kd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=Pe(r,s.shape),a=Yt(s.shape,o)[1],c=U(a);return{x:u(()=>{const d=s.shape.slice();o.forEach(f=>{d[f]=1});const h=M(n,d);return Se(P(h,ms(s.shape,"float32")),c)},"derX")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7={kernelName:Xd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,a=Pe(r,o.shape),c=t_(n,i,o,a);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7={kernelName:bu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:u(()=>P(n,le(wa(t,s),"float32")),"derA"),b:u(()=>P(n,le(Is(t,s),"float32")),"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7={kernelName:Yd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>Je(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7={kernelName:xu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{const a=dn(t.shape,r);return a.length>0?M(ye(n,a),t.shape):n},"derA"),b:u(()=>{const a=P(n,Rt(vh(Se(t,s)))),c=dn(s.shape,r);return c.length>0?M(ye(a,c),s.shape):a},"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7={kernelName:wu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{const a=P(n,le(s,"float32")),c=dn(t.shape,r);return c.length>0?M(ye(a,c),t.shape):a},"derA"),b:u(()=>{const a=P(n,le(t,"float32")),c=dn(s.shape,r);return c.length>0?M(ye(a,c),s.shape):a},"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7={kernelName:Qd,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7={kernelName:eh,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Zt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B7={kernelName:Zd,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7={kernelName:th,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return or(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dv={kernelName:nh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>Je(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7={kernelName:Su,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,a=Ne(o.shape,i.shape);return{a:u(()=>{const d=le(i,"float32");let h=P(n,P(d,So(o,fe(d,ve(1)))));const p=dn(o.shape,a);return p.length>0&&(h=ye(h,p)),M(h,o.shape)},"derBase"),b:u(()=>{const d=Is(o,0),h=Dn(d,Rs(o),et(o));let p=P(n,P(r,h));const f=dn(i.shape,a);return f.length>0&&(p=ye(p,f)),M(p,i.shape)},"derExp")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7={kernelName:sh,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=Is(t,0);return{x:()=>Dn(r,n,P(n,s)),alpha:()=>{let o=Dn(r,et(n),P(n,t));const i=dn(s.shape,n.shape);return i.length>0&&(o=ye(o,i)),M(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n,e,t){const s=n.shape.slice();s[t]=1;const r=M(e,s),o=vf(n,t,!0,!1),i=vf(n,t,!0,!0),a=P(o,i);return P(r,a)}u(G7,"prodGradFn_");function H7(n,e,t){const s=n.shape.length,r=s-t.length,o=xt(t,s);let i=n;o!=null&&(i=Ze(n,o));const a=i.shape.slice(),l=a.splice(s-t.length,t.length).reduce((p,f)=>p*f,1);a.push(l);const d=i.reshape(a);let h=G7(d,e,r);if(h=h.reshape(i.shape),o!=null){const p=Kr(o);h=Ze(h,p)}return h}u(H7,"prodsGradFn_");const j7={kernelName:rh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>H7(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7={kernelName:su,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{const a=Se(n,le(s,"float32")),c=dn(t.shape,r);return c.length>0?M(ye(a,c),t.shape):a},"derA"),b:u(()=>{let a=P(n,le(t,"float32"));const c=dn(s.shape,r);c.length>0&&(a=M(ye(a,c),s.shape));const l=wt(s);return Rt(Se(a,le(l,"float32")))},"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K7={kernelName:Cu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,Rt(wt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X7={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=P(wa(t,6),Vu(t));return{x:()=>P(n,le(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7={kernelName:vu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,le(Vu(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q7={kernelName:oh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>M(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J7={kernelName:ah,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:u(()=>F.runKernel(eg,r,t),"imagesDer")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7={kernelName:ih,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:u(()=>F.runKernel(Zm,r,t),"imagesDer")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9={kernelName:ch,gradFunc:(n,e,t)=>{const{dims:s}=t,r=Pe(s,n.shape);return{x:()=>rr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t9={kernelName:ku,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9={kernelName:$u,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Rt(Se(n,P(So(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9={kernelName:uh,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>le(et(t),"float32"),t:()=>P(n,le(t,n.dtype)),e:()=>P(n,le(Ig(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9={kernelName:Nu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Is(t,ve(0)),r=ve(kh),o=ve($h),i=P(n,o),a=P(P(n,r),os(le(t,"float32")));return Dn(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9={kernelName:Ru,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,P(t,fe(ve(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9={kernelName:_u,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9={kernelName:Tu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(xg(le(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(Ew(le(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u9={kernelName:lh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[a,c]=Ih(s,r,o),l=[];for(let d=0;d<n.rank;d++)l.push([a[d],i[d]-a[d]-c[d]]);return{x:()=>mi(n,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9={kernelName:fh,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=P(n,s);return{logits:()=>fe(i,P(ye(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9={kernelName:Au,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,Br(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ov={kernelName:hh,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>bg(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fv={kernelName:ph,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>Wt(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h9={kernelName:Du,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,P(Tn(le(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p9={kernelName:ag,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,P(le(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f9={kernelName:Ou,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=ve(2);return{a:u(()=>P(n,P(r,fe(t,s))),"derA"),b:u(()=>P(n,P(r,fe(s,t))),"derB")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m9={kernelName:zu,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9={kernelName:Fu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(t.shape,s.shape);return{a:u(()=>{let a=n;const c=dn(t.shape,r);return c.length>0&&(a=ye(a,c)),M(a,t.shape)},"derA"),b:u(()=>{let a=n;const c=dn(s.shape,r);return c.length>0&&(a=ye(a,c)),M(Rt(a),s.shape)},"derB")}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9={kernelName:dh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;Pe(o,s.shape).forEach(l=>{r[l]=1});const a=M(n,r),c=P(a,ms(s.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b9={kernelName:Pu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(n,wt(xg(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9={kernelName:Lu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(fe(ve(1),wt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:u(()=>{let i=et(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=ee(i,Je(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let c=0;c<r[1];++c)i=ee(i,Je(n,[a*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let c=0;c<r[1];++c)for(let l=0;l<r[2];++l)i=ee(i,Je(n,[a*s.shape[0],c*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let c=0;c<r[1];++c)for(let l=0;l<r[2];++l)for(let d=0;d<r[3];++d)i=ee(i,Je(n,[a*s.shape[0],c*s.shape[1],l*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i},"derX")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9={kernelName:Ui,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=Kr(r);return{x:()=>Ze(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9={kernelName:mh,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>ys(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v9={kernelName:gh,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:u(()=>I9(n,t),"derX")}}};function I9(n,e){const t=Io(e,et(e)),s=sa(n,t);let r=fi(e,ve(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=Bn(r,a+1);r=Ur(r,ms(s.shape,"bool"));const i=et(s);return Dn(r,s,i)}u(I9,"gatherDropNegatives");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9={kernelName:yh,gradFunc:n=>({x:()=>et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9=[e_,vY,IY,kY,$Y,NY,TY,EY,_Y,RY,AY,DY,PY,zY,BY,WY,VY,UY,GY,HY,jY,qY,XY,KY,JY,ZY,e7,t7,n7,s7,q7,r7,o7,i7,a7,c7,l7,u7,d7,h7,p7,f7,m7,g7,y7,b7,x7,w7,S7,I7,Av,Av,k7,T7,R7,A7,D7,O7,F7,P7,L7,M7,z7,B7,W7,Dv,Dv,V7,U7,j7,K7,X7,Y7,Q7,J7,Z7,e9,t9,n9,s9,r9,o9,i9,a9,c9,u9,l9,d9,Ov,Ov,Fv,Fv,h9,f9,p9,m9,g9,y9,b9,x9,w9,S9,C9,v9,k9];for(const n of $9)fH(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.abs=function(){return this.throwIfDisposed(),nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acos=function(){return this.throwIfDisposed(),sT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acosh=function(){return this.throwIfDisposed(),rT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.add=function(n){return this.throwIfDisposed(),ee(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.all=function(n,e){return this.throwIfDisposed(),Iw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.any=function(n,e){return this.throwIfDisposed(),Cf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMax=function(n){return this.throwIfDisposed(),vc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMin=function(n){return this.throwIfDisposed(),oT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),M(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asType=function(n){return this.throwIfDisposed(),le(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as1D=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as2D=function(n,e){return this.throwIfDisposed(),M(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),M(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),M(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),M(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asin=function(){return this.throwIfDisposed(),iT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asinh=function(){return this.throwIfDisposed(),aT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan=function(){return this.throwIfDisposed(),cT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan2=function(n){return this.throwIfDisposed(),uT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atanh=function(){return this.throwIfDisposed(),lT(this)};K().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),yg(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),bg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),xh(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.broadcastTo=function(n){return this.throwIfDisposed(),ac(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cast=function(n){return this.throwIfDisposed(),le(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ceil=function(){return this.throwIfDisposed(),gT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),gs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Mt&&(n=[n]),Wt([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),$w(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),Tw(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Jo(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cos=function(){return this.throwIfDisposed(),xg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cosh=function(){return this.throwIfDisposed(),Ew(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),vf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),_w(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),IT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),wh(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),kT(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.divNoNan=function(n){return this.throwIfDisposed(),$T(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.div=function(n){return this.throwIfDisposed(),Se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dot=function(n){return this.throwIfDisposed(),NT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.elu=function(){return this.throwIfDisposed(),Sh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.equal=function(n){return this.throwIfDisposed(),br(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.erf=function(){return this.throwIfDisposed(),Rw(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),_T(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.exp=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expandDims=function(n){return this.throwIfDisposed(),Bn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expm1=function(){return this.throwIfDisposed(),RT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.fft=function(){return this.throwIfDisposed(),Dg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.flatten=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floor=function(){return this.throwIfDisposed(),vh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floorDiv=function(n){return this.throwIfDisposed(),vw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.gather=function(n,e,t){return this.throwIfDisposed(),sa(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greaterEqual=function(n){return this.throwIfDisposed(),fi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greater=function(n){return this.throwIfDisposed(),Is(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ifft=function(){return this.throwIfDisposed(),jl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.irfft=function(){return this.throwIfDisposed(),eS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isFinite=function(){return this.throwIfDisposed(),AT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isInf=function(){return this.throwIfDisposed(),DT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isNaN=function(){return this.throwIfDisposed(),OT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Sg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.lessEqual=function(n){return this.throwIfDisposed(),wa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.less=function(n){return this.throwIfDisposed(),Ul(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),FT(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSigmoid=function(){return this.throwIfDisposed(),PT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Ow(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),vg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log=function(){return this.throwIfDisposed(),Rs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log1p=function(){return this.throwIfDisposed(),Cg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ur(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalNot=function(){return this.throwIfDisposed(),Ig(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalOr=function(n){return this.throwIfDisposed(),Fw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalXor=function(n){return this.throwIfDisposed(),LT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Qe(this,n,e,t)};K().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),kg(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.max=function(n,e){return this.throwIfDisposed(),tr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.maximum=function(n){return this.throwIfDisposed(),Io(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mean=function(n,e){return this.throwIfDisposed(),Gt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.min=function(n,e){return this.throwIfDisposed(),Vl(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.minimum=function(n){return this.throwIfDisposed(),ra(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),zT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mod=function(n){return this.throwIfDisposed(),BT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mul=function(n){return this.throwIfDisposed(),P(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.neg=function(){return this.throwIfDisposed(),Rt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Ch(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.notEqual=function(n){return this.throwIfDisposed(),Ic(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Lw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.onesLike=function(){return this.throwIfDisposed(),As(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pad=function(n,e){return this.throwIfDisposed(),mi(this,n,e)};K().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),WT(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pow=function(n){return this.throwIfDisposed(),So(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prelu=function(n){return this.throwIfDisposed(),Tg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prod=function(n,e){return this.throwIfDisposed(),VT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reciprocal=function(){return this.throwIfDisposed(),GT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu=function(){return this.throwIfDisposed(),Xr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu6=function(){return this.throwIfDisposed(),jw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshapeAs=function(n){return this.throwIfDisposed(),M(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshape=function(n){return this.throwIfDisposed(),M(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),aE(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),cE(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reverse=function(n){return this.throwIfDisposed(),rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rfft=function(){return this.throwIfDisposed(),Og(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.round=function(){return this.throwIfDisposed(),qw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rsqrt=function(){return this.throwIfDisposed(),Kw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.selu=function(){return this.throwIfDisposed(),Xw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Yw(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sigmoid=function(){return this.throwIfDisposed(),Br(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sign=function(){return this.throwIfDisposed(),HT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sin=function(){return this.throwIfDisposed(),Qw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sinh=function(){return this.throwIfDisposed(),Jw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.slice=function(n,e){return this.throwIfDisposed(),Je(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softmax=function(n){return this.throwIfDisposed(),Ag(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softplus=function(){return this.throwIfDisposed(),Wu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Ng(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.split=function(n,e){return this.throwIfDisposed(),es(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sqrt=function(){return this.throwIfDisposed(),Tn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.square=function(){return this.throwIfDisposed(),wt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squaredDifference=function(n){return this.throwIfDisposed(),tS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squeeze=function(n){return this.throwIfDisposed(),vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Mt?[this,n]:[this,...n];return ys(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.step=function(n){return this.throwIfDisposed(),Vu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stridedSlice=function(n,e,t,s,r,o,i,a){return this.throwIfDisposed(),jT(this,n,e,t,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sub=function(n){return this.throwIfDisposed(),fe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sum=function(n,e){return this.throwIfDisposed(),ye(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tan=function(){return this.throwIfDisposed(),qT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tanh=function(){return this.throwIfDisposed(),na(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tile=function(n){return this.throwIfDisposed(),Ks(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toBool=function(){return this.throwIfDisposed(),le(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toFloat=function(){return this.throwIfDisposed(),le(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toInt=function(){return this.throwIfDisposed(),le(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.topk=function(n,e){return this.throwIfDisposed(),YT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.transpose=function(n){return this.throwIfDisposed(),Ze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unique=function(n){return this.throwIfDisposed(),QT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),rS(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unstack=function(n){return this.throwIfDisposed(),or(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.where=function(n,e){return this.throwIfDisposed(),Dn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.zerosLike=function(){return this.throwIfDisposed(),et(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ar extends Error{static{u(this,"AttributeError")}constructor(e){super(e),Object.setPrototypeOf(this,Ar.prototype)}}class Xs extends Error{static{u(this,"RuntimeError")}constructor(e){super(e),Object.setPrototypeOf(this,Xs.prototype)}}class B extends Error{static{u(this,"ValueError")}constructor(e){super(e),Object.setPrototypeOf(this,B.prototype)}}class Ue extends Error{static{u(this,"NotImplementedError")}constructor(e){super(e),Object.setPrototypeOf(this,Ue.prototype)}}class bS extends Error{static{u(this,"AssertionError")}constructor(e){super(e),Object.setPrototypeOf(this,bS.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class n_{static{u(this,"LruCache")}constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ia(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}u(ia,"pyListRepeat");function Dr(n,e){if(!n)throw new bS(e)}u(Dr,"assert");function Pv(n,e){let t=0;for(const s of n)s===e&&t++;return t}u(Pv,"count");function Yn(n){return n.length===1?n[0]:n}u(Yn,"singletonOrArray");function gt(n){return Array.isArray(n)?n:[n]}u(gt,"toList");function no(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}u(no,"toSnakeCase");function Ei(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}u(Ei,"toCamelCase");let Ms={};function xS(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}u(xS,"serializeKerasObject");function _x(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>_x(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:_x(s))}}}u(_x,"convertNDArrayScalarsInConfig");function Nh(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in Ms)i=Ms[o];else if(i=e[o],i==null)throw new B(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new B(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,c;if(i in t?[a,c]=t[i]:i in Ms?[a,c]=Ms.className:i in e&&([a,c]=e[i]),a==null)throw new B(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const l={};for(const f of Object.keys(Ms))l[f]=Ms[f];for(const f of Object.keys(t))l[f]=t[f];const d=o.config;d.customObjects=l;const h=Object.assign({},Ms);for(const f of Object.keys(t))Ms[f]=t[f];_x(o.config);const p=c(a,o.config,t,r);return Ms=Object.assign({},h),p}else{const l=Object.assign({},Ms);for(const h of Object.keys(t))Ms[h]=t[h];const d=new a(o.config);return Ms=Object.assign({},l),d}}}u(Nh,"deserializeKerasObject");function N9(n,e){return n<e?-1:n>e?1:0}u(N9,"numberCompare");function up(n,e){return-1*N9(n,e)}u(up,"reverseNumberCompare");function Go(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}u(Go,"unique$2");function T9(n){if(n==null)throw new B(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}u(T9,"isObjectEmpty");function $a(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new B(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}u($a,"checkStringTypeUnionValue");function wS(n,e,t=0,s=1/0){return Dr(t>=0),Dr(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}u(wS,"checkArrayTypeAndLength");function xn(n,e){Array.isArray(n)?(N(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>xn(t,`element ${s+1} of ${e}`))):N(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${s_(n)}.`)}u(xn,"assertPositiveInteger");function s_(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>s_(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}u(s_,"formatAsFriendlyString");function E9(n,e,t){let s=t!=null?t():Kn(),r;return u((...i)=>{const a=t!=null?t():Kn();return a-s<e||(s=a,r=n(...i)),r},"f2")}u(E9,"debounce");function r_(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}u(r_,"mapActivationToFusedKernel");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _9=0;function o_(){return _9++}u(o_,"getNextUniqueTensorId");const lp={};function uy(n=""){return n in lp||(lp[n]=0),lp[n]+=1,n+lp[n].toString()}u(uy,"getUid");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const R9=["channelsFirst","channelsLast"],A9=["nearest","bilinear"],D9=["valid","same","causal"],O9=["max","avg"],F9=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const La=new Map;function Qt(n){$a(R9,"DataFormat",n)}u(Qt,"checkDataFormat");function P9(n){$a(A9,"InterpolationFormat",n)}u(P9,"checkInterpolationFormat");function Fs(n){$a(D9,"PaddingMode",n)}u(Fs,"checkPaddingMode");function i_(n){$a(O9,"PoolMode",n)}u(i_,"checkPoolMode");const kl=[],Lv="/";function Gi(n,e){kl.push(n);try{const t=e();return kl.pop(),t}catch(t){throw kl.pop(),t}}u(Gi,"nameScope");function L9(){return kl.length===0?"":kl.join(Lv)+Lv}u(L9,"currentNameScopePrefix");function a_(n){if(!u_(n))throw new Error("Not a valid tensor name: '"+n+"'");return L9()+n}u(a_,"getScopedTensorName");function c_(n){if(!u_(n))throw new Error("Not a valid tensor name: '"+n+"'");La.has(n)||La.set(n,0);const e=La.get(n);if(La.set(n,La.get(n)+1),e>0){const t=`${n}_${e}`;return La.set(t,1),t}else return n}u(c_,"getUniqueTensorName");const M9=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function u_(n){return!!n.match(M9)}u(u_,"isValidTensorName");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function z9(n){return n===parseInt(n.toString(),10)}u(z9,"isInteger");function Ho(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}u(Ho,"arrayProd");function $c(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}u($c,"min$3");function ei(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}u(ei,"max$3");function Sr(n,e){if(e<n)throw new B(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}u(Sr,"range$3");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let sb;function sn(){return sb==null&&(sb=gg().epsilon()),sb}u(sn,"epsilon$1");function Cr(){return"channelsLast"}u(Cr,"imageDataFormat");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wr(n,e){return le(n,e)}u(Wr,"cast$3");function Th(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),M(n,t)}u(Th,"expandDims$3");function B9(n,e){return H(()=>{if(n.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Th(n,1);return Rx(t,[1,e,1])})}u(B9,"repeat");function W9(n){const e=[Ho(n.shape)];return M(n,e)}u(W9,"flatten");function V9(n){if(n.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Ho(n.shape,1)];return M(n,e)}u(V9,"batchFlatten");function Hi(n,e,t){return H(()=>{switch(n.rank){case 1:return _g(n,e,t);case 2:return Zw(n,[e,0],[t,n.shape[1]]);case 3:return Rg(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Hl(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Je(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Je(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}u(Hi,"sliceAlongFirstAxis");function rb(n,e,t){return H(()=>{switch(n.rank){case 1:return _g(n,e,t);case 2:return Zw(n,[0,e],[n.shape[0],t]);case 3:return Rg(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Hl(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}u(rb,"sliceAlongLastAxis");function dp(n,e,t,s){return H(()=>{switch(n.rank){case 1:return _g(n,e,t);case 2:switch(s){case 1:return Hi(n,e,t);case 2:return rb(n,e,t);default:throw new B(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Hi(n,e,t);case 2:return Rg(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return rb(n,e,t);default:throw new B(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Hi(n,e,t);case 2:return Hl(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Hl(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return rb(n,e,t);default:throw new B(`The axis is not within the rank of the tensor ${s}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}u(dp,"sliceAlongAxis");function SS(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Wt(n,e)}u(SS,"concatenate");function Mv(n,e){switch(n.rank){case 1:return yT([n,e]);case 2:return bT([n,e],0);case 3:return xT([n,e],0);case 4:return wT([n,e],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}u(Mv,"concatAlongFirstAxis");function Rx(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new B(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Ks(n,e)}u(Rx,"tile$3");function ly(n,e=0,t=1,s,r){return Hw(n,e,t,s,r)}u(ly,"randomNormal");function Vr(n,e,t,s){if(n.rank<2||e.rank<2)throw new Ue(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new Ue(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return $x({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Ax(n.rank,s,Cr()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=M(n,[-1,o]);const i=e.shape.slice(),a=i.pop(),c=i.pop(),l=[...i,a],d=Array.from({length:e.rank},(m,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=M(Ze(e,d),[c,-1]);const h=[...r,...l];return M($x({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Ax(n.rank,s,Cr()):null,activation:t}),h)}}u(Vr,"dot");function l_(n,e,t){return H(()=>(Array.isArray(e)?e=Vn(e,"int32"):e=le(e,"int32"),sa(n,e,t)))}u(l_,"gather");function Eh(n){return P(n,n)}u(Eh,"square$1");function Ax(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new B(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1,1]):M(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,1,1,s[0]]):M(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1]):M(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,1,s[0]]):M(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1]):M(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,s[0]]):M(e,[1].concat(s))}else if(n<3)return e;throw new B(`Unsupported input rank by biasAdd: ${e.rank}`)}u(Ax,"reshapeBias");function Nr(n,e,t){return H(()=>(t==null&&(t=Cr()),Qt(t),ee(n,Ax(n.rank,e,t))))}u(Nr,"biasAdd");function U9(n,e=1){if(e!==1)throw new Ue(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Sh(n)}u(U9,"elu$3");function G9(n){return H(()=>Se(n,ee(nn(n),1)))}u(G9,"softsign");function d_(n,e,t,s){return H(()=>eE(n,e,t,s))}u(d_,"dropout");function H9(n){return H(()=>{const e=ee(.5,P(.2,n));return gs(e,0,1)})}u(H9,"hardSigmoid");function _h(n,e,t=!1){return t?n():e()}u(_h,"inTrainPhase");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const j9=["fanIn","fanOut","fanAvg"],q9=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function K9(n){$a(j9,"FanMode",n)}u(K9,"checkFanMode");function X9(n){$a(q9,"Distribution",n)}u(X9,"checkDistribution");class ir extends Gu{static{u(this,"Initializer")}fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class h_ extends ir{static{u(this,"Zeros")}apply(e,t){return Zt(e,t)}}h_.className="Zeros";te(h_);class CS extends ir{static{u(this,"Ones")}apply(e,t){return ms(e,t)}}CS.className="Ones";te(CS);class p_ extends ir{static{u(this,"Constant")}constructor(e){if(super(),typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return H(()=>P(ve(this.value),ms(e,t)))}getConfig(){return{value:this.value}}}p_.className="Constant";te(p_);class f_ extends ir{static{u(this,"RandomUniform")}constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ca(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}f_.className="RandomUniform";te(f_);class m_ extends ir{static{u(this,"RandomNormal")}constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ue(`randomNormal does not support dType ${t}.`);return ly(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}m_.className="RandomNormal";te(m_);class g_ extends ir{static{u(this,"TruncatedNormal")}constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ue(`truncatedNormal does not support dType ${t}.`);return sS(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}g_.className="TruncatedNormal";te(g_);class y_ extends ir{static{u(this,"Identity")}constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return H(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,Dw(e[0]))})}getConfig(){return{gain:this.gain}}}y_.className="Identity";te(y_);function Y9(n,e="channelsLast"){let t,s;if(Qt(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Ho(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Ho(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Ho(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}u(Y9,"computeFans");class bs extends ir{static{u(this,"VarianceScaling")}constructor(e){if(super(),e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,K9(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,X9(this.distribution),this.seed=e.seed}apply(e,t){const s=Y9(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ue(`${this.getClassName()} does not support dType ${t}.`);return sS(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return Ca(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}bs.className="VarianceScaling";te(bs);class vS extends bs{static{u(this,"GlorotUniform")}constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return bs.className}}vS.className="GlorotUniform";te(vS);class IS extends bs{static{u(this,"GlorotNormal")}constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return bs.className}}IS.className="GlorotNormal";te(IS);class kS extends bs{static{u(this,"HeNormal")}constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return bs.className}}kS.className="HeNormal";te(kS);class $S extends bs{static{u(this,"HeUniform")}constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return bs.className}}$S.className="HeUniform";te($S);class NS extends bs{static{u(this,"LeCunNormal")}constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return bs.className}}NS.className="LeCunNormal";te(NS);class TS extends bs{static{u(this,"LeCunUniform")}constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return bs.className}}TS.className="LeCunUniform";te(TS);class b_ extends ir{static{u(this,"Orthogonal")}constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return H(()=>{if(e.length<2)throw new Ue("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=U(e.slice(0,-1)),r=e[e.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&`${this.ELEMENTS_WARN_SLOW}${o}`;const i=[Math.max(r,s),Math.min(r,s)],a=ly(i,0,1,t,this.seed),c=uE.qr(a,!1);let l=c[0];const h=c[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return l=P(l,h.sign()),s<r&&(l=l.transpose()),P(ve(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}b_.className="Orthogonal";te(b_);const zv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Bv(n,e={}){return Nh(n,Gs.getMap().classNameMap,e,"initializer")}u(Bv,"deserializeInitializer");function Bt(n){return xS(n)}u(Bt,"serializeInitializer");function Dt(n){if(typeof n=="string"){const e=n in zv?zv[n]:n;if(e==="GlorotNormal")return new IS;if(e==="GlorotUniform")return new vS;if(e==="HeNormal")return new kS;if(e==="HeUniform")return new $S;if(e==="LeCunNormal")return new NS;if(e==="LeCunUniform")return new TS;{const t={};return t.className=e,t.config={},Bv(t)}}else return n instanceof ir?n:Bv(n)}u(Dt,"getInitializer");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dx(n){return Array.isArray(n)&&Array.isArray(n[0])}u(Dx,"isArrayOfShapes");function kf(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}u(kf,"normalizeShapeList");function _e(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new B(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}u(_e,"getExactlyOneTensor");function ht(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new B(`Expected exactly 1 Shape; got ${n.length}`)}else return n}u(ht,"getExactlyOneShape");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $f(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}u($f,"countParamsInWeights");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Wv="Variable";class Q9{static{u(this,"LayerVariable")}constructor(e,t="float32",s=Wv,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=o_(),s=s??Wv,this.originalName=a_(s),this.name=c_(this.originalName),this.trainable_=r,this.constraint=o,this.val=JT(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),J9(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function J9(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}u(J9,"checkShapesMatch");function Ox(n){return n.map(e=>e.read())}u(Ox,"batchGetValue");function ES(n){n.forEach(e=>{e[0].write(e[1])})}u(ES,"batchSetValue");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rn{static{u(this,"InputSpec")}constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Gr{static{u(this,"SymbolicTensor")}constructor(e,t,s,r,o,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=o_(),i!=null&&(this.originalName=a_(i),this.name=c_(this.originalName)),this.rank=t.length}}let Z9=0,dy=class{static{u(this,"Node")}constructor(e,t){this.callArgs=t,this.id=Z9++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},eQ=0;class Ke extends Gu{static{u(this,"Layer")}constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=eQ++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=no(s)+"_"+uy(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Xs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Yn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Yn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ar(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ar(`Layer ${this.name} is not connected, no input to return.`);return Yn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ar(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ar(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Yn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=gt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=gt(this.inputSpec);if(t.length!==s.length)throw new B(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const o=t[r],i=s[r];if(i==null)continue;const a=o.rank;if(i.ndim!=null&&a!==i.ndim)throw new B(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new B(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new B(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new B(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const c=o.shape;for(const l in i.axes){const d=Number(l),h=i.axes[l],p=d>=0?c[d]:c[c.length+d];if(h!=null&&[h,null].indexOf(p)===-1)throw new B(`Input ${r} is incompatible with layer ${this.name}: expected axis ${d} of input shape to have value ${h} but got shape ${c}.`)}}if(i.shape!=null)for(let c=0;c<i.shape.length;++c){const l=i.shape[c],d=o.shape[c];if(l!=null&&d!=null&&l!==d)throw new B(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=gt(e),r=sQ(e),o=rQ(e);if(r===o)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Gi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of gt(e))i.push(a.shape);this.build(Yn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=gt(i),c=[];for(let l of a)s.indexOf(l)!==-1&&(l=l.clone()),c.push(l);if(i=Yn(c),this.activityRegularizer!=null)throw new Ue("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=tQ(e),a=this.computeOutputShape(i);let c;const l=nQ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?c=a.map((d,h)=>new Gr(l,d,this,gt(e),t,this.name,h)):c=new Gr(l,a,this,gt(e),t,this.name),this.addInboundNode(e,c,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new Ue("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)`${JSON.stringify(e)}${JSON.stringify(this.batchInputShape)}${this.name}`;else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&`${JSON.stringify(e)}${this.name}${JSON.stringify(this.batchInputShape)}`}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ar(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ar(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return $f(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ox(e?this.trainableWeights:this.weights)}setWeights(e){H(()=>{const t=this.weights;if(t.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Ox(t);for(let o=0;o<r.length;++o){const i=r[o],a=t[o],c=e[o];if(!Ge(i.shape,c.shape))throw new B(`Layer weight shape ${i.shape} not compatible with provided weight shape ${c.shape}`);s.push([a,c])}ES(s)})}addWeight(e,t,s,r,o,i,a,c){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=c!=null?c():Dt("zeros"));const l=r.apply(t,s),d=new Q9(l,s,e,i,a);return l.dispose(),o!=null&&this.addLoss(()=>o.apply(d.read())),i==null&&(i=!0),i?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=gt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),o=gt(t),i=gt(r);if(o.length!==i.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=i[a]}addInboundNode(e,t,s,r,o,i,a=null){const c=gt(e);t=gt(t),s=gt(s),r=gt(r),o=kf(o),i=kf(i);const l=[],d=[],h=[];for(const p of c)l.push(p.sourceLayer),d.push(p.nodeIndex),h.push(p.tensorIndex);new dy({outboundLayer:this,inboundLayers:l,nodeIndices:d,tensorIndices:h,inputTensors:c,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function tQ(n){n=gt(n);const e=[];for(const t of n)e.push(t.shape);return Yn(e)}u(tQ,"collectInputShape");function nQ(n){return"float32"}u(nQ,"guessOutputDType");function x_(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],c=s.nodeIndices[o],l=x_(i,a,c);for(const d of l)r.indexOf(d)===-1&&r.push(d)}return r}}}u(x_,"getSourceInputs");function sQ(n){let e=!0;for(const t of gt(n))if(!(t instanceof Gr)){e=!1;break}return e}u(sQ,"checkAllSymbolic");function rQ(n){let e=!0;for(const t of gt(n))if(t instanceof Gr){e=!1;break}return e}u(rQ,"checkNoneSymbolic");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rh extends Ke{static{u(this,"InputLayer")}constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:uy("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Gr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new dy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Rh.className="InputLayer";te(Rh);function oQ(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Rh({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}u(oQ,"Input");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iQ(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return le(e,n.dtype)}catch{throw new B(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}u(iQ,"assertFeedCompatibility");class zo{static{u(this,"FeedDict")}constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof zo)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=iQ(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new B(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Gr){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Gr){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&We(this.id2Mask)}}const Nf=new n_,Tf=new n_;function aQ(n){Nf?.setMaxEntries(n),Tf?.setMaxEntries(n)}u(aQ,"updateCacheMaxEntries");function pl(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],a=i.map(m=>m.name),c=[],l=e.names();for(const m of a)l.indexOf(m)!==-1?c.push(e.getValue(m)):c.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const d=a.join(",")+"|"+e.names().sort().join(",");let h=Nf.get(d),p;if(h==null){const m=cQ(i,e);h=m.sorted,p=m.recipientCounts,Nf.put(d,h),Tf.put(d,p)}p={},r||Object.assign(p,Tf.get(d));const f=new zo(e);for(let m=0;m<h.length;++m){if(s!=null){const T=Sf().numTensors;T>s.maxNumTensors&&(s.maxNumTensors=T),T<s.minNumTensors&&(s.minNumTensors=T)}const g=h[m],y=g.sourceLayer;if(y instanceof Rh)continue;const b=[],x=[],S=[];let w=!1;for(const T of g.inputs){const E=f.getValue(T),R=f.getMask(T);b.push(E),x.push(R),R!=null&&(w=!0),r||(p[T.name]--,p[T.name]===0&&!e.hasKey(T)&&a.indexOf(T.name)===-1&&!E.isDisposed&&T.sourceLayer.stateful!==!0&&S.push(E))}w&&(t=t||{},t.mask=x[0]);const C=gt(y.apply(b,t));let v=null;y.supportsMasking&&(v=y.computeMask(b,x));const k=lQ(g),$=Array.isArray(k)?k:[k];for(let T=0;T<$.length;++T){f.hasKey($[T])||f.add($[T],C[T],Array.isArray(v)?v[0]:v);const E=a.indexOf($[T].name);E!==-1&&(c[E]=C[T])}r||We(S)}return f.disposeMasks(),o?c:c[0]}u(pl,"execute");function cQ(n,e){N(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=Vv(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=Vv(o,e);for(const c of i)r.has(c.name)||(t.push(c),r.add(c.name));for(const c in a)s[c]==null&&(s[c]=new Set),a[c].forEach(l=>s[c].add(l))}}return{sorted:t,recipientCounts:uQ(s)}}u(cQ,"getTopologicalSortAndRecipientCounts");function uQ(n){const e={};for(const t in n)e[t]=n[t].size;return e}u(uQ,"recipientMap2Counts");function Vv(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(t.has(a.name)){o.pop();continue}const c=i[i.length-1]===o.length-1;if(a.inputs.length===0||c)o.pop(),s.push(a),t.add(a.name),c&&i.pop();else{i.push(o.length-1);for(const l of a.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(a.name),!t.has(l.name)&&o.push(l)}}return{sorted:s,recipientMap:r}}u(Vv,"getTopologicalSortAndRecipientCountsForOneFetch");function lQ(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}u(lQ,"getNodeOutputs");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dQ=j();dQ.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,aQ);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _S(n,e){return H(()=>Tn(ye(P(n,n),e,!0)))}u(_S,"calcL2Norms");class Ah extends Gu{static{u(this,"Constraint")}getConfig(){return{}}}class w_ extends Ah{static{u(this,"MaxNorm")}constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return H(()=>{const t=_S(e,this.axis),s=gs(t,0,this.maxValue);return P(e,Se(s,ee(sn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}w_.className="MaxNorm";te(w_);class S_ extends Ah{static{u(this,"UnitNorm")}constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return H(()=>Se(e,ee(sn(),_S(e,this.axis))))}getConfig(){return{axis:this.axis}}}S_.className="UnitNorm";te(S_);class C_ extends Ah{static{u(this,"NonNeg")}apply(e){return Xr(e)}}C_.className="NonNeg";te(C_);class v_ extends Ah{static{u(this,"MinMaxNorm")}constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return H(()=>{const t=_S(e,this.axis),s=ee(P(this.rate,gs(t,this.minValue,this.maxValue)),P(1-this.rate,t));return P(e,Se(s,ee(sn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}v_.className="MinMaxNorm";te(v_);const Uv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function an(n){return xS(n)}u(an,"serializeConstraint");function Gv(n,e={}){return Nh(n,Gs.getMap().classNameMap,e,"constraint")}u(Gv,"deserializeConstraint");function cn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Uv?Uv[n]:n,config:{}};return Gv(t)}else return n instanceof Ah?n:Gv(n)}u(cn,"getConstraint");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ci(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];We(s)}}u(Ci,"resolveScalarsInLogs");function I_(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}u(I_,"disposeTensorsInLogs");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Hv;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Hv||(Hv={}));const hQ=125;class ql{static{u(this,"BaseCallback")}constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class pQ{static{u(this,"CallbackList")}constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class fQ extends ql{static{u(this,"BaseLogger")}constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=H(()=>ee(this.totals[r],P(o,s)));this.totals[r]=a,i?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:H(()=>{const r=P(Se(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),bn(t[s])}))}}class mQ extends ql{static{u(this,"History")}async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const c=i[a];e.push(c.data()),t.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class gQ extends ql{static{u(this,"CustomCallback")}constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_E,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=hQ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ax(this.yieldEvery)&&(this.maybeWait=E9(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Ci(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ci(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Ci(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ci(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Ci(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):ax(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Ci(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ci(e),await this.trainEnd(e))}}function k_(n,e){return n==null&&(n={}),n instanceof ql?[n]:Array.isArray(n)&&n[0]instanceof ql?n:gt(n).map(s=>new gQ(s,e))}u(k_,"standardizeCallbacks");class Bs{static{u(this,"CallbackConstructorRegistry")}constructor(){}static registerCallbackConstructor(e,t){N(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Bs.checkForDuplicate(t),Bs.constructors[e]==null&&(Bs.constructors[e]=[]),Bs.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Bs.constructors)Bs.constructors[+t].forEach(r=>{if(r===e)throw new B("Duplicate callback constructor.")})}static clear(){Bs.constructors={}}static createCallbacks(e){const t=[];for(const s in Bs.constructors){const r=+s;e>=r&&t.push(...Bs.constructors[r])}return t.map(s=>new s)}}Bs.constructors={};function $_(n,e,t,s,r,o,i,a,c){const l=new mQ,d=[new fQ,...Bs.createCallbacks(e)];n!=null&&d.push(...n),d.push(l);const h=new pQ(d);return h.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:c}),{callbackList:h,history:l}}u($_,"configureCallbacks");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function po(n,e={},t=!1){return Nh(n,Gs.getMap().classNameMap,e,"layer",t)}u(po,"deserialize");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ef(n,e){return H(()=>{n.dtype!=="float32"&&(n=le(n,"float32"));const t=ye(Eh(n),e,!0),s=Bu(t.shape,sn()),r=Tn(Io(t,s));return Se(n,r)})}u(Ef,"l2Normalize");function hy(n,e){return H(()=>Gt(Eh(fe(e,n)),-1))}u(hy,"meanSquaredError");function RS(n,e){return H(()=>Gt(nn(fe(e,n)),-1))}u(RS,"meanAbsoluteError");function AS(n,e){return H(()=>{const t=fe(n,e),s=gs(nn(n),sn(),Number.MAX_VALUE),r=nn(Se(t,s));return P(100,Gt(r,-1))})}u(AS,"meanAbsolutePercentageError");function yQ(n,e){return H(()=>{const t=gs(e,sn(),Number.MAX_VALUE),s=Rs(ee(1,t)),r=gs(n,sn(),Number.MAX_VALUE),o=Rs(ee(1,r));return Gt(Eh(fe(s,o)),-1)})}u(yQ,"meanSquaredLogarithmicError");function bQ(n,e){return H(()=>{const t=Io(0,fe(1,P(n,e)));return Gt(Eh(t),-1)})}u(bQ,"squaredHinge");function xQ(n,e){return H(()=>{const t=Io(0,fe(1,P(n,e)));return Gt(t,-1)})}u(xQ,"hinge");function wQ(n,e){return H(()=>{const t=ye(P(n,e),-1),s=tr(P(fe(1,n),e),-1);return Io(0,ee(1,fe(s,t)))})}u(wQ,"categoricalHinge");function SQ(n,e){return H(()=>{const t=Math.log(2),s=fe(e,n),r=fe(ee(s,Wu(P(-2,s))),t);return Gt(r,-1)})}u(SQ,"logcosh");function Kl(n,e,t=!1){return H(()=>{if(t)e=Ag(e);else{const s=ye(e,e.shape.length-1,!0);e=Se(e,s)}return e=gs(e,sn(),1-sn()),Rt(ye(P(le(n,"float32"),Rs(e)),e.shape.length-1))})}u(Kl,"categoricalCrossentropy$1");function _f(n,e,t=!1){return H(()=>{const s=le(vh(W9(n)),"int32");e=gs(e,sn(),1-sn());const r=e.shape,o=M(Lw(s,r[r.length-1]),r);return Kl(o,e,t)})}u(_f,"sparseCategoricalCrossentropy$1");function CQ(n,e){if(!Ge(n.shape,e.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return H(()=>{const t=Xr(e),s=Rt(nn(e));return ee(fe(t,P(e,n)),Cg(os(s)))})}u(CQ,"sigmoidCrossEntropyWithLogits");function py(n,e){return H(()=>{let t;return t=gs(e,sn(),1-sn()),t=Rs(Se(t,fe(1,t))),Gt(CQ(n,t),-1)})}u(py,"binaryCrossentropy$1");function vQ(n,e){return H(()=>{const t=gs(n,sn(),1),s=gs(e,sn(),1);return ye(P(n,Rs(Se(t,s))),-1)})}u(vQ,"kullbackLeiblerDivergence");function IQ(n,e){return H(()=>{const t=Rs(ee(sn(),e));return Gt(fe(e,P(n,t)),-1)})}u(IQ,"poisson");function N_(n,e){return H(()=>{const t=Ef(n,-1),s=Ef(e,-1),r=P(t,s);return Rt(ye(r,-1))})}u(N_,"cosineProximity");const Rf={meanSquaredError:hy,meanAbsoluteError:RS,meanAbsolutePercentageError:AS,meanSquaredLogarithmicError:yQ,squaredHinge:bQ,hinge:xQ,categoricalHinge:wQ,logcosh:SQ,categoricalCrossentropy:Kl,sparseCategoricalCrossentropy:_f,binaryCrossentropy:py,kullbackLeiblerDivergence:vQ,poisson:IQ,cosineProximity:N_};function ob(n){if(typeof n=="string"){if(n in Rf)return Rf[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(e)}else return n}u(ob,"get$1");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T_(n,e){return H(()=>{const t=P(.5,As(e)),s=Wr(Is(e,t),n.dtype);return Gt(br(n,s),-1)})}u(T_,"binaryAccuracy");function E_(n,e){return H(()=>Wr(br(vc(n,-1),vc(e,-1)),"float32"))}u(E_,"categoricalAccuracy");function kQ(n,e){return H(()=>le(ye(Ur(br(n,1),br(e,1))),"float32"))}u(kQ,"truePositives");function $Q(n,e){return H(()=>le(ye(Ur(br(n,0),br(e,1))),"float32"))}u($Q,"falsePositives");function NQ(n,e){return H(()=>{const t=kQ(n,e),s=$Q(n,e),r=ee(t,s);return le(Dn(Is(r,0),Se(t,r),0),"float32")})}u(NQ,"precision");function TQ(n,e){return py(n,e)}u(TQ,"binaryCrossentropy");function EQ(n,e){return n.rank===e.rank&&(n=vo(n,[n.rank-1])),e=vc(e,-1),e.dtype!==n.dtype&&(e=le(e,n.dtype)),le(br(n,e),"float32")}u(EQ,"sparseCategoricalAccuracy");const _Q=hy,RQ=hy,AQ=RS,DQ=RS,OQ=AS,FQ=AS,__=Kl,PQ=N_,R_=_f,Af={binaryAccuracy:T_,categoricalAccuracy:E_,precision:NQ,categoricalCrossentropy:__,sparseCategoricalCrossentropy:R_,mse:_Q,MSE:RQ,mae:AQ,MAE:DQ,mape:OQ,MAPE:FQ,cosine:PQ};function LQ(n){if(typeof n=="string"&&n in Af)return Af[n];if(typeof n!="string"&&n!=null)return n;throw new B(`Unknown metric ${n}`)}u(LQ,"get");function hp(n){if(Dr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Rf))if(Rf[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Af))if(Af[t]===n){e=t;break}return e!==void 0?e:n.name}}u(hp,"getLossOrMetricName");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MQ(n){const e={Adagrad:()=>Pa.adagrad(.01),Adadelta:()=>Pa.adadelta(1,.95,sn()),Adam:()=>Pa.adam(.001,.9,.999,sn()),Adamax:()=>Pa.adamax(.002,.9,.999,sn(),0),RMSProp:()=>Pa.rmsprop(.001,.9,0,sn()),SGD:()=>Pa.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new B(`Unknown Optimizer ${n}`)}u(MQ,"getOptimizer");/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const jv=1*1024*1024;function qv(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Fx(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>jv&&`${e}${s.length}${jv}`}}u(qv,"checkUserDefinedMetadata");function Fx(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Fx(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Fx(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}u(Fx,"plainObjectCheck");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zQ(n,e,t,s=console.log){const r=WQ(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(d=>Math.floor(e*d)));let i;if(!r){o.push("Receives inputs"),i=[];for(const d in n.nodesByDepth)i.push(...n.nodesByDepth[d])}s("_".repeat(e)),Df(o,t,s),s("=".repeat(e));const a=n.layers;for(let d=0;d<a.length;++d)r?VQ(a[d],t,s):UQ(a[d],t,i,s),s((d===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const c=BQ(n),l=$f(n.nonTrainableWeights);s(`Total params: ${c+l}`),s(`Trainable params: ${c}`),s(`Non-trainable params: ${l}`),s("_".repeat(e))}u(zQ,"printSummary");function BQ(n){let e;return n.collectedTrainableWeights!=null?e=$f(n.collectedTrainableWeights):e=$f(n.trainableWeights),e}u(BQ,"countTrainableParams");function WQ(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}u(WQ,"isModelSequentialLike");function Df(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}u(Df,"printRow");function VQ(n,e,t){let s,r;try{r=n.inboundNodes.map(c=>JSON.stringify(c.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];Df(a,e,t)}u(VQ,"printLayerSummary");function UQ(n,e,t,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let p=0;p<h.inboundLayers.length;++p){const f=h.inboundLayers[p].name,m=h.nodeIndices[p],g=h.tensorIndices[p];i.push(`${f}[${m}][${g}]`)}const a=n.name,c=n.getClassName(),l=i.length===0?"":i[0],d=[`${a} (${c})`,o,r,n.countParams().toString(),l];Df(d,e,s);for(let h=1;h<i.length;++h)Df(["","","","",i[h]],e,s)}u(UQ,"printLayerSummaryWithConnections");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function A_(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}u(A_,"isArrayItemInputOrOutputName");function Px(n,e){if(n===null)return null;if(typeof n=="string")return Ei(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];A_(e,r,o)?t.push(o):t.push(Px(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=Ei(s);t[o]=Px(r,o)}}return t}}u(Px,"convertPythonicToTs");function Lx(n,e){if(n==null)return null;if(typeof n=="string")return no(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];A_(e,r,o)?t.push(o):t.push(Lx(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=no(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Lx(r,s)}return t}}u(Lx,"convertTsToPythonic");/** @license See the LICENSE file. */const D_="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GQ=u(n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))},"isKerasSavedModelFormat");class lr extends Ke{static{u(this,"Container")}constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=uy(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Go(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Go(this.outputs).length!==this.outputs.length&&`${this.outputs.map(x=>x.name)}`,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const S=x.sourceLayer,w=x.nodeIndex,C=x.tensorIndex;this.outputLayers.push(S),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(C)}for(const x of this.inputs){const S=x.sourceLayer,w=x.nodeIndex,C=x.tensorIndex;Dr(w===0,"input layer has >1 nodes"),Dr(C===0,"input layer has >1 tensors"),this.inputLayers.push(S),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const S=this.inputLayers[x];if(!(S instanceof Rh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${S.getClassName()}.`);this.inputNames.push(S.name),this.feedInputShapes.push(S.batchInputShape),this.feedInputNames.push(S.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},r={},o={},i={},a=[],c=u((x,S,w,C,v,k)=>{(C==null||v==null||k==null)&&(C=x.sourceLayer,v=x.nodeIndex,k=x.tensorIndex);const $=C.inboundNodes[v];if(w.indexOf($)!==-1)throw new Xs(`The tensor ${x.name} at layer "${C.name}" is part of a cycle.`);if(S.indexOf($)!==-1)return;this.containerNodes.add(lr.nodeKey(C,v)),C.id in i||(i[C.id]=Object.keys(i).length),w.indexOf($)===-1&&w.push($);const T=$.inboundLayers.length;for(let E=0;E<T;E++){const R=$.inputTensors[E],O=$.inboundLayers[E],L=$.nodeIndices[E],z=$.tensorIndices[E];c(R,S,w,O,L,z)}for(S.push($);w.indexOf($)>=0;)w.splice(w.indexOf($),1);a.push($)},"buildMapOfGraph"),l=[],d=[];for(const x of this.outputs)c(x,l,d);const h=a.slice().reverse();for(const x of h){s[x.id]=x,x.id in t||(t[x.id]=0);let S=t[x.id];const w=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];S=Math.max(S,w),r[x.outboundLayer.id]=S,o[x.outboundLayer.id]=x.outboundLayer,t[x.id]=S;for(let C=0;C<x.inboundLayers.length;C++){const v=x.inboundLayers[C],k=x.nodeIndices[C],$=v.inboundNodes[k],T=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(S+1,T),s[$.id]=$}}const p={};for(const x in t){const S=t[x];S in p||(p[S]=[]),p[S].push(s[x])}const f={};for(const x in r){const S=r[x];S in f||(f[S]=[]),f[S].push(o[x])}let m=Object.keys(f).map(x=>parseInt(x,10)).sort(up);this.layers=[];for(const x of m){const S=f[x];S.sort((w,C)=>{const v=i[w.id],k=i[C.id];return v<k?-1:v>k?1:0});for(const w of S)w instanceof lr&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=f,m=Object.keys(p).map(x=>parseInt(x,10)).sort(up);const g=this.inputs.slice(),y=[];for(const x of m)for(const S of p[x]){const w=S.outboundLayer;if(w!=null){for(const C of S.inputTensors)if(g.indexOf(C)===-1)throw new Xs(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${w.name}". The following previous layers were accessed without issue: ${y}`);for(const C of S.outputTensors)g.push(C);y.push(w.name)}}this.nodesByDepth=p;const b=this.layers.map(x=>x.name);for(const x of b){const S=b.filter(w=>w===x).length;if(S!==1)throw new Xs(`The name "${x}" is used ${S} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new dy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const o=GQ(e);o&&this.parseWeights(e);for(const a of this.layers)for(const[c,l]of a.weights.entries()){const d=o?`${l.name.split("/").slice(0,-1).join("/")+"/"}${c}`:l.originalName;if(s[d]!=null)throw new B(`Duplicate weight name: ${d}`);s[d]=l,r++}const i=[];for(const a in e){let c=a;if(s[a]==null){const l=a.split("/");c=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[c]!=null)i.push([s[c],e[a]]);else if(t)throw new B(`Provided weight data has no target variable: ${a}`);delete s[c]}if(t){const a=[];for(const c in s)a.push(c);if(a.length>0)throw new B(`${a.length} of ${r} weights are not set: ${a}`)}ES(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${D_}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Lx(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return H(()=>{e=gt(e);const s=new zo;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return pl(this.outputs,s,t)})}computeMask(e,t){return H(()=>{e=gt(e);let s;return t==null?s=ia(null,e.length):s=gt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=kf(e);if(t.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const c=this.inputLayers[a],l=t[a],d=c.name+"_0_0";s[d]=l}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(up);if(r.length>1)for(const a of r){const c=this.nodesByDepth[a];for(const l of c){const d=l.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(d.id)!==-1)continue;const h=[];for(let g=0;g<l.inboundLayers.length;g++){const y=l.inboundLayers[g],b=l.nodeIndices[g],x=l.tensorIndices[g],S=`${y.name}_${b}_${x}`,w=s[S];h.push(w)}const p=d.computeOutputShape(Yn(h)),f=kf(p),m=d.inboundNodes.indexOf(l);for(let g=0;g<f.length;g++){const y=`${d.name}_${m}_${g}`;s[y]=f[g]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const c=this.outputLayers[a],l=this.outputLayersNodeIndices[a],d=this.outputLayersTensorIndices[a],h=`${c.name}_${l}_${d}`;i.push(h)}for(let a=0;a<i.length;a++){const c=i[a];Dr(c in s),o.push(s[c])}return Yn(o)}runInternalGraph(e,t){t==null&&(t=ia(null,e.length));const s={};for(let c=0;c<this.inputs.length;++c){const l=this.inputs[c],d=e[c],h=t[c];s[l.id]=[d,h]}const r=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(up);for(const c of r){const l=this.nodesByDepth[c];for(const d of l){const h=d.outboundLayer,p=d.inputTensors,f=d.outputTensors,m=new Array;for(const g of p)g.id in s&&m.push(s[g.id]);if(m.length===p.length){let g={},y,b,x,S;if(d.callArgs!=null&&(g=d.callArgs),m.length===1){const[w,C]=m[0];g.mask==null&&(g.mask=C),x=gt(h.call(w,g)),S=gt(h.computeMask(w,C)),y=[w],b=[C]}else y=m.map(w=>w[0]),b=m.map(w=>w[1]),g.mask==null&&(g.mask=b),x=gt(h.call(y,g)),S=gt(h.computeMask(y,b));if(h.activityRegularizer)throw new Ue("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<f.length;++w){const C=f[w],v=x[w],k=S[w];s[C.id]=[v,k]}}}}const o=[],i=[],a=[];for(const c of this.outputs){Dr(c.id in s,`Could not compute output ${c.name} : ${c.id}`);const[l,d]=s[c.id];a.push(l.shape),o.push(l),i.push(d)}return[o,i,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof lr?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=lr.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new B("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new B(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new B(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return H(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=lr.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),c=i.getConfig(),l=[];for(let h=0;h<i.inboundNodes.length;h++){const p=i.inboundNodes[h],f=lr.nodeKey(i,h);let m={};if(this.containerNodes.has(f)){if(p.callArgs)try{JSON.stringify(p.callArgs),m=p.callArgs}catch{`${i.name}${p.callArgs}`,m={}}if(p.inboundLayers.length>0){const g=[];for(let y=0;y<p.inboundLayers.length;y++){const b=p.inboundLayers[y],x=p.nodeIndices[y],S=p.tensorIndices[y],w=lr.nodeKey(b,x);let C=t[w];C==null&&(C=0),g.push([b.name,C,S,m])}l.push(g)}}}const d={};d.name=i.name,d.className=a,d.config=c,d.inboundNodes=l,s.push(d)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],c=this.inputLayersNodeIndices[i],l=lr.nodeKey(a,c);if(!this.containerNodes.has(l))continue;let d=t[l];d==null&&(d=0);const h=this.inputLayersTensorIndices[i];r.push([a.name,d,h])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],c=this.outputLayersNodeIndices[i],l=lr.nodeKey(a,c);if(!this.containerNodes.has(l))continue;let d=t[l];d==null&&(d=0);const h=this.outputLayersTensorIndices[i];o.push([a.name,d,h])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function a(y,b){y.name in i?i[y.name].push(b):i[y.name]=[b]}u(a,"addUnprocessedNode");function c(y,b){const x=[];let S;for(const w of b){const C=w[0],v=w[1],k=w[2];if(S=w[3]==null?{}:w[3],!(C in o)){a(y,b);return}const $=o[C];if($.inboundNodes.length<=v){a(y,b);return}const T=$.inboundNodes[v];x.push(T.outputTensors[k])}x.length>0&&y.apply(Yn(x),S)}u(c,"processNode");function l(y){const b=y.name,x=po(y,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(r),o[b]=x,y.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${w}`);a(x,w)})}u(l,"processLayer");const d=t.name,h=t.layers;for(const y of h)l(y);for(;!T9(i);)for(const y of h){const b=o[y.name];if(b.name in i){const x=i[b.name];delete i[b.name];for(const S of x)c(b,S)}}const p=[],f=[],m=t.inputLayers;for(const y of m){const b=y[0],x=y[1],S=y[2];Dr(b in o);const C=o[b].inboundNodes[x].outputTensors;p.push(C[S])}const g=t.outputLayers;for(const y of g){const b=y[0],x=y[1],S=y[2];Dr(b in o);const C=o[b].inboundNodes[x].outputTensors;f.push(C[S])}return new e({inputs:p,outputs:f,name:d})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){H(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function HQ(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}u(HQ,"standardizeSampleOrClassWeights");function O_(n,e){return HQ(n,e,"classWeight")}u(O_,"standardizeClassWeights");async function F_(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const r=H(()=>{if(n.shape.length===1)return ho(n);if(n.shape.length===2){if(n.shape[1]>1)return vc(n,1);if(n.shape[1]===1)return M(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());We(r);const i=[];return o.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),Vn(i,"float32")}else return null}u(F_,"standardizeWeights");function jQ(n,e){return P(n,e)}u(jQ,"computeWeightedLoss");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const qQ=32;function P_(n,e){let t,s;const r=e;t=r.xs,s=r.ys,N(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=Kv("input",n.inputNames,t),i=Kv("output",n.outputNames,s),a=o[0].shape[0];N(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),N(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let c=0;c<o.length;c++)N(o[c].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[c]} has ${o[c].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let c=0;c<i.length;c++)N(i[c].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[c]} has ${i[c].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}u(P_,"standardizeDataIteratorOutput");function Kv(n,e,t){if(t instanceof Mt)return[t];if(Array.isArray(t))return N(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new B(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}u(Kv,"flattenTensorOrArrayOrMap");function KQ(n){if(n.length===3)throw new Ue("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}u(KQ,"standardizeTensorValidationData");async function XQ(n,e,t){const s=t.batchesPerEpoch!=null;if(N(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),N(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),N(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),N(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),N(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(Xv(t.validationData))N(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const y=KQ(t.validationData);o=y.xs,i=y.ys}const a=n.makeTrainFunction(),c=n.getDedupedMetricsNames();let l;r?l=c.slice().concat(c.map(y=>"val_"+y)):l=c.slice();const d=k_(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:p,history:f}=$_(d,h,t.epochs,null,null,YQ(e,t),null,r,l);p.setModel(n),n.history=f,await p.onTrainBegin(),n.stopTraining_=!1;let m=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;m<t.epochs;){const y={};await p.onEpochBegin(m);let b=0,x=0;for(s||(g=await e.iterator());!s||b<t.batchesPerEpoch;){const S=await g.next();if(s&&S.done){`${t.batchesPerEpoch}${b}`,t.batchesPerEpoch*t.epochs;break}if(S.value!=null){const{xs:w,ys:C}=P_(n,S.value),v={};v.batch=x,v.size=w[0].shape[0],await p.onBatchBegin(x,v);const k=[];if(t.classWeight!=null){const E=O_(t.classWeight,n.outputNames);for(let R=0;R<E.length;++R)k.push(await F_(C[R],null,E[R]))}const $=w.concat(C).concat(k),T=a($);We($);for(let E=0;E<c.length;++E){const R=c[E],O=T[E];v[R]=O,bn(O)}await p.onBatchEnd(x,v),I_(v),x++,b++}if(s?b>=t.batchesPerEpoch:S.done){if(r){let w;Xv(t.validationData)?w=gt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):w=gt(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?qQ:t.validationBatchSize,verbose:0}));for(let C=0;C<n.metricsNames.length;++C)y[`val_${n.metricsNames[C]}`]=w[C]}break}if(n.stopTraining_)break}if(await p.onEpochEnd(m,y),m++,n.stopTraining_)break}return await p.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}u(XQ,"fitDataset");function YQ(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}u(YQ,"getStepsPerEpoch");function Xv(n){return typeof n.iterator=="function"}u(Xv,"isDatasetObject");function QQ(n){return typeof n.next=="function"}u(QQ,"isLazyIteratorObject");async function JQ(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new Ue("Verbose mode is not implemented yet.");N(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=QQ(e)?e:await e.iterator();let a=0,c=0;for(;!s||c<t.batches;){const l=await i.next();if(o=H(()=>{if(l.value){const{xs:d,ys:h}=P_(n,l.value),p=d.concat(h),f=H(()=>r(p));if(We(p),c===0)for(let g=0;g<f.length;++g)o.push(ve(0));const m=p[0].shape[0];for(let g=0;g<f.length;++g){const y=f[g],b=o[g];o[g]=H(()=>ee(o[g],P(m,y))),c>0&&We(b)}We(f),a+=m,++c}return o}),l.done){s&&`${t.batches}`;break}}for(let l=0;l<o.length;++l){const d=o[l];o[l]=Se(o[l],a),We(d)}return Yn(o)}u(JQ,"evaluateDataset");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ib(n){N(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}u(ib,"checkBatchSize");function al(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Hi(s,e,t-e)):Hi(n,e,t-e)}u(al,"sliceArrays");function Mx(n,e){return H(()=>n==null?null:Array.isArray(n)?n.map(t=>Mx(t,e)):l_(n,e.dtype==="int32"?e:le(e,"int32")))}u(Mx,"sliceArraysByIndices");function ab(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}u(ab,"makeBatches");function L_(n){const e=[];n instanceof Mt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Th(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}u(L_,"ensureTensorsRank2OrHigher");function cr(n,e){if(n==null)return;const t=[];if(e instanceof Mt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Mt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}u(cr,"disposeNewTensors");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZQ(n){return n instanceof Mt}u(ZQ,"isDataTensor");function zx(n){return Array.isArray(n)}u(zx,"isDataArray");function Yv(n){return!ZQ(n)&&!zx(n)}u(Yv,"isDataDict");function Qv(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(zx(n)&&n.length>0)i=!0;else if(Yv(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new B(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(Yv(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new B(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(zx(n)){if(n=n,n.length!==e.length)throw new B(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new B(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=L_(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new B(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let c=0;c<t[i].length;++c){if(c===0&&!s)continue;const l=a.shape[c],d=t[i][c];if(d!=null&&d>=0&&l!==d)throw new B(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}u(Qv,"standardizeInputData");function eJ(n,e,t){const s=Go(n.map(o=>o.shape[0]));s.sort();const r=Go(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Ge(s,r))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}u(eJ,"checkArrayLengths");function tJ(n,e,t){const s=[hy,py,Kl];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],a=t[r];if(i!=null){if(i===Kl&&o.shape[o.shape.length-1]===1)throw new B(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const c=o.shape.slice(1),l=a.slice(1);for(let d=0;d<c.length;++d){const h=c[d],p=l[d];if(p!=null&&h!==p)throw new B(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}u(tJ,"checkLossAndTargetCompatibility");function Jv(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new B(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new B(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new B(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let c=0;c<t[i].length;++c){if(c===0&&!s)continue;const l=a.shape[c],d=t[i][c];if(d!=null&&d!==l)throw new B(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}u(Jv,"checkInputData");function nJ(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}u(nJ,"collectMetrics");const sJ="layers-model";class cc extends lr{static{u(this,"LayersModel")}constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");zQ(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=MQ(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof gi))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new B(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&`${i}${i}`,t.push(ob(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>ob(a))}else{const i=ob(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],c=this.outputNames[i];this.feedOutputNames.push(c),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Gi("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=nJ(e.metrics,this.outputNames),o=u((i,a,c)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([c,i])},"appendMetric");Gi("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];u(l=>{const d="";let h,p,f;for(const m of l){if(typeof m=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(m)!==-1){const y=this.internalOutputShapes[i];y[y.length-1]===1||this.lossFunctions[i]===py?["accuracy","acc"].indexOf(m)!==-1?p=T_:["crossentropy","ce"].indexOf(m)!==-1&&(p=TQ):this.lossFunctions[i]===_f?["accuracy","acc"].indexOf(m)!==-1?p=EQ:["crossentropy","ce"].indexOf(m)!==-1&&(p=R_):["accuracy","acc"].indexOf(m)!==-1?p=E_:["crossentropy","ce"].indexOf(m)!==-1&&(p=__);let b;["accuracy","acc"].indexOf(m)!==-1?b="acc":["crossentropy","ce"].indexOf(m)!==-1&&(b="ce"),f=p,h=d+b}else f=LQ(m),h=d+hp(m);let g;Gi(h,()=>{g=f}),o(i,h,g)}},"handleMetrics")(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;ib(r);const i=this.standardizeUserDataXY(e,t,!0,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const c=this.testFunction,l=this.testLoop(c,a,r,s.verbose,s.steps);return Yn(l)}finally{cr(i[0],e),cr(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),JQ(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new B(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new zo;if(e instanceof Mt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)i.add(this.inputs[c],e[c])}else for(const c of this.inputs){const l=e[c.name];if(l==null)throw new B(`No value is provided for the model's input ${c.name}`);i.add(c,l)}const a=pl(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=ia(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const c=i.indexOf(e[a]);if(c!==-1&&(t[a]=o[c],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return H(()=>{const r=this.checkNumSamples(e);if(s)throw new Ue("Verbose predictLoop() is not implemented yet.");const o=ab(r,t),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)H(()=>{const l=o[a][0],d=o[a][1],h=al(e,l,d),p=[];if(Array.isArray(h))for(let m=0;m<h.length;++m)p.push({key:this.inputs[m],value:h[m]});else p.push({key:this.inputs[0],value:h});const f=new zo(p);return pl(this.outputs,f)}).forEach((l,d)=>i[d].push(l));return Yn(i.map(a=>Wt(a,0)))})}predict(e,t={}){const s=L_(e);Jv(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return ib(r),this.predictLoop(s,r)}finally{cr(s,e)}}predictOnBatch(e){Jv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new Xs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===_f?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=Qv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Qv(t,this.feedOutputNames,o,!1,"target"),eJ(e,t),tJ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[a,c]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){const d=O_(r,this.outputNames);l=[];for(let h=0;h<d.length;++h)l.push(await F_(c[h],null,d[h]))}return[a,c,l]}testLoop(e,t,s,r=0,o){return H(()=>{const i=this.checkNumSamples(t,s,o,"steps"),a=[];if(r>0)throw new Ue("Verbose mode is not implemented yet.");if(o!=null)throw new Ue("steps mode in testLoop() is not implemented yet");{const c=ab(i,s),l=Vn(Sr(0,i));for(let d=0;d<c.length;++d){const h=c[d][0],p=c[d][1],f=Hi(l,h,p-h),m=Mx(t,f),g=e(m);if(d===0)for(let y=0;y<g.length;++y)a.push(ve(0));for(let y=0;y<g.length;++y){const b=g[y];a[y]=ee(a[y],P(p-h,b))}}for(let d=0;d<a.length;++d)a[d]=Se(a[d],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(Pv(e,r)>1){const i=Pv(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=u(()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:s[g]});const p=new zo(h),f=pl(this.outputs,p,{training:!0});let m;for(let g=0;g<this.lossFunctions.length;++g){const y=this.lossFunctions[g];let b=y(r[g],f[g]);o[g]!=null&&(b=jQ(b,o[g]));const x=Gt(b);t.push(x),g===0?m=b:m=ee(m,b)}for(let g=0;g<this.metricsTensors.length;++g){let y;if(this.outputs.length>1&&g<this.outputs.length)y=t[g];else{const b=this.metricsTensors[g][0],x=this.metricsTensors[g][1];y=Gt(b(r[x],f[x]))}bn(y),i.push(y)}return m=Gt(m),this.calculateLosses().forEach(g=>{m=ee(m,g)}),m},"totalLossFunction"),c=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,c)].concat(i)}}makeTestFunction(){this.testFunction=e=>H(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:r[l]});const a=new zo(i),c=pl(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){const d=this.lossFunctions[l],h=Gt(d(o[l],c[l]));l===0?s=h:s=ee(s,h),t.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const d=this.metricsTensors[l][0],h=this.metricsTensors[l][1],p=Gt(d(o[h],c[h]));t.push(p)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,c,l,d,h,p;try{const f=s.batchSize==null?32:s.batchSize;ib(f);const g=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,f);r=g[0],o=g[1],p=g[2];let y=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)c=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new Ue("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const E=await this.standardizeUserData(c,l,null,null,!0,f);d=E[0],h=E[1],b=d.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const T=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];d=al(r,T,E),i=r,r=al(r,0,T),h=al(o,T,E),a=o,o=al(o,0,T),b=d.concat(h)}else s.validationSteps!=null&&(y=!0);const x=r.concat(o).concat(p);this.checkTrainableWeightsConsistency();const S=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let C,v;y?(this.makeTestFunction(),C=this.testFunction,v=w.slice().concat(w.map(T=>"val_"+T))):(C=null,b=[],v=w.slice());const k=k_(s.callbacks,s.yieldEvery);return await this.fitLoop(S,x,w,f,s.epochs,s.verbose,k,C,b,s.shuffle,v,s.initialEpoch,null,null)}finally{this.isTraining=!1,cr(r,e),cr(o,t),cr(i,e),cr(a,t),cr(d,c),cr(h,l),p!=null&&We(p)}}async fitLoop(e,t,s,r,o,i,a,c,l,d,h,p,f,m){r==null&&(r=32),o==null&&(o=1),d==null&&(d=!0),p==null&&(p=0);let g=!1;if(c!=null&&l!=null&&(g=!0),m!=null&&(g=!0,f==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(t,r,f,"steps_per_epoch");let b;y!=null&&(b=Sr(0,y)),i==null&&(i=1);const{callbackList:x,history:S}=$_(a,i,o,p,y,f,r,g,h);x.setModel(this),this.history=S,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=p;w<o;++w){await x.onEpochBegin(w);const C={};if(f!=null)throw new Ue("stepsPerEpoch mode is not implemented yet.");{if(d==="batch")throw new Ue("batch shuffling is not implemneted yet");d&&ZG(b);const v=Vn(b),k=ab(y,r);for(let $=0;$<k.length;++$){const T={};if(await x.onBatchBegin($,T),H(()=>{const E=k[$][0],R=k[$][1],O=Hi(v,E,R-E);T.batch=$,T.size=R-E;const L=Mx(t,O),z=e(L);for(let W=0;W<s.length;++W){const A=s[W],G=z[W];T[A]=G,bn(G)}if($===k.length-1&&g){const W=this.testLoop(c,l,r);for(let A=0;A<s.length;++A){const G=s[A],V=W[A];bn(V),C["val_"+G]=V}}}),await x.onBatchEnd($,T),I_(T),this.stopTraining_)break}v.dispose()}if(await x.onEpochEnd(w,C),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return XQ(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),c=[];for(const l of a){const d=await l.data();c.push(d[0])}return We(a),cr(s[0],e),cr(s[1],t),Yn(c)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Sf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Sf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=no(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>no(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=no(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[no(hp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>no(hp(e)));{const e={};for(const t in this.metrics)e[t]=no(hp(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Px(e.optimizer_config),s=po(t);let r;if(typeof e.loss=="string")r=Ei(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>Ei(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=Ei(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>Ei(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=Ei(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const l=KN(e);if(l.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new B(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await xx(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:sJ,generatedBy:`TensorFlow.js tfjs-layers v${D_}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const l="optimizer",{data:d,specs:h}=await xx(await this.optimizer.getWeights(),l);s.specs.push(...h),s.data=HN([s.data,d])}return this.userDefinedMetadata!=null&&(qv(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){qv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}cc.className="Model";te(cc);class M_ extends cc{static{u(this,"Functional")}}M_.className="Functional";te(M_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xl extends cc{static{u(this,"Sequential")}constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:uy("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Xl||e instanceof cc;let s;if(t){if(s=e,s.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=oQ({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=x_(this.outputs[0])}this.inboundNodes=[],new dy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ia(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ht(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new cc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");o=t}else N(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof Xl))throw new Ue(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const c of o){const d=po(c,void 0,r);r&&d.setFastWeightInitDuringBuild(!0),a.add(d)}return a}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Xl.className="Sequential";te(Xl);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Pn=class extends Gu{static{u(this,"Activation")}getConfig(){return{}}};class z_ extends Pn{static{u(this,"Elu")}apply(e,t=1){return U9(e,t)}}z_.className="elu";te(z_);class B_ extends Pn{static{u(this,"Selu")}apply(e){return Xw(e)}}B_.className="selu";te(B_);class W_ extends Pn{static{u(this,"Relu")}apply(e){return Xr(e)}}W_.className="relu";te(W_);class V_ extends Pn{static{u(this,"Relu6")}apply(e){return H(()=>ra(6,Xr(e)))}}V_.className="relu6";te(V_);class U_ extends Pn{static{u(this,"Linear")}apply(e){return e}}U_.className="linear";te(U_);class G_ extends Pn{static{u(this,"Sigmoid")}apply(e){return Br(e)}}G_.className="sigmoid";te(G_);class H_ extends Pn{static{u(this,"HardSigmoid")}apply(e){return H9(e)}}H_.className="hardSigmoid";te(H_);class j_ extends Pn{static{u(this,"Softplus")}apply(e){return Wu(e)}}j_.className="softplus";te(j_);class q_ extends Pn{static{u(this,"Softsign")}apply(e){return G9(e)}}q_.className="softsign";te(q_);class K_ extends Pn{static{u(this,"Tanh")}apply(e){return na(e)}}K_.className="tanh";te(K_);let DS=class extends Pn{static{u(this,"Softmax")}apply(e,t=-1){return Ag(e,t)}};DS.className="softmax";te(DS);class X_ extends Pn{static{u(this,"LogSoftmax")}apply(e,t=-1){return Ow(e,t)}}X_.className="logSoftmax";te(X_);class Y_ extends Pn{static{u(this,"Gelu")}apply(e){return H(()=>H(()=>{const t=Math.sqrt(2),s=P(.5,ee(1,Rw(Se(e,t))));return P(e,s)}))}}Y_.className="gelu";te(Y_);class Q_ extends Pn{static{u(this,"GeluNew")}apply(e){return H(()=>P(.5,P(e,ee(1,na(P(Tn(Se(2,Math.PI)),ee(e,P(.044715,So(e,3)))))))))}}Q_.className="gelu_new";te(Q_);class J_ extends Pn{static{u(this,"Mish")}apply(e){return H(()=>P(e,na(Wu(e))))}}J_.className="mish";te(J_);class Z_ extends Pn{static{u(this,"Swish")}apply(e,t=1){return H(()=>P(Br(P(e,t)),e))}}Z_.className="swish";te(Z_);function ti(n){return n.getClassName()}u(ti,"serializeActivation");function cb(n,e={}){return Nh(n,Gs.getMap().classNameMap,e,"activation")}u(cb,"deserializeActivation");function ni(n){if(n==null){const e={};return e.className="linear",e.config={},cb(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},cb(e)}else return n instanceof Pn?n:cb(n)}u(ni,"getActivation");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rJ(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}u(rJ,"assertObjectArgs");class eR extends Gu{static{u(this,"Regularizer")}}class tR extends eR{static{u(this,"L1L2")}constructor(e){super(),rJ(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return H(()=>{let t=Zt([1]);return this.hasL1&&(t=ee(t,ye(P(this.l1,nn(e))))),this.hasL2&&(t=ee(t,ye(P(this.l2,Eh(e))))),M(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}tR.className="L1L2";te(tR);const Zv={l1l2:"L1L2"};function St(n){return xS(n)}u(St,"serializeRegularizer");function eI(n,e={}){return Nh(n,Gs.getMap().classNameMap,e,"regularizer")}u(eI,"deserializeRegularizer");function Ot(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Zv?Zv[n]:n,config:{}};return eI(t)}else return n instanceof eR?n:eI(n)}u(Ot,"getRegularizer");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nR extends Ke{static{u(this,"ReLU")}constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=_e(e);let s=Xr(e);return this.maxValue!=null&&(s=gs(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}nR.className="ReLU";te(nR);class sR extends Ke{static{u(this,"LeakyReLU")}constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=_e(e);return Sg(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}sR.className="LeakyReLU";te(sR);class rR extends Ke{static{u(this,"PReLU")}constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Dt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ot(e.alphaRegularizer),this.alphaConstraint=cn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ht(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new rn({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=_e(e),Tg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Bt(this.alphaInitializer),alphaRegularizer:St(this.alphaRegularizer),alphaConstraint:an(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}rR.className="PReLU";te(rR);let oR=class extends Ke{static{u(this,"ELU")}constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ue(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=_e(e);return Sh(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};oR.className="ELU";te(oR);class iR extends Ke{static{u(this,"ThresholdedReLU")}constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=_e(e);return P(s,le(Is(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}iR.className="ThresholdedReLU";te(iR);class aR extends Ke{static{u(this,"Softmax")}constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new DS().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return H(()=>{let s=_e(e);const r=t.mask;if(r!=null){const o=P(fe(ms(s.shape),le(r,s.dtype)),ve(-1e9));s=ee(s,o)}return this.axis instanceof Array?this.axis.length>1?os(fe(s,vg(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}aR.className="Softmax";te(aR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uc(n,e,t){if(typeof n=="number")return ia(n,e);if(n.length!==e)throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!z9(r))throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}u(uc,"normalizeArray");function mr(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}u(mr,"convOutputLength");function Or(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+ei([t-e,0]);else if(s==="same")n=n*e;else throw new B(`Unsupport padding mode: ${s}.`);return n}u(Or,"deconvLength");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OS(n,e){return H(()=>(Qt(e),e==="channelsFirst"?Ze(n,[0,2,3,1]):n))}u(OS,"preprocessConv2DInput");function cR(n,e){return H(()=>(Qt(e),e==="channelsFirst"?Ze(n,[0,2,3,4,1]):n))}u(cR,"preprocessConv3DInput");function oJ(n,e,t,s=1,r="valid",o,i=1){return H(()=>{if(o==null&&(o=Cr()),Qt(o),n.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Ze(n,[0,2,1])),r==="causal")throw new Ue("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=$w(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(a=Nr(a,t)),a})}u(oJ,"conv1dWithBias");function tI(n,e,t,s=[1,1],r="valid",o,i,a=null){return H(()=>{if(o==null&&(o=Cr()),Qt(o),n.rank!==3&&n.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=OS(n,o);if(r==="causal")throw new Ue("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=nE({x:c,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),o==="channelsFirst"&&(c=Ze(c,[0,3,1,2])),c})}u(tI,"conv2dWithBiasActivation");function iJ(n,e,t,s=[1,1,1],r="valid",o,i){return H(()=>{if(o==null&&(o=Cr()),Qt(o),n.rank!==4&&n.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=cR(n,o);if(r==="causal")throw new Ue("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=ST(a,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(a=Nr(a,t)),o==="channelsFirst"&&(a=Ze(a,[0,4,1,2,3])),a})}u(iJ,"conv3dWithBias");class fy extends Ke{static{u(this,"BaseConv")}constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fy.verifyArgs(t),this.rank=e,xn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ue(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=uc(t.kernelSize,e,"kernelSize"),this.strides=uc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Fs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Qt(this.dataFormat),this.activation=ni(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Dt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(t.biasConstraint),this.biasRegularizer=Ot(t.biasRegularizer),this.activityRegularizer=Ot(t.activityRegularizer),this.dilationRate=uc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Dr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!wS(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ti(this.activation),useBias:this.useBias,biasInitializer:Bt(this.biasInitializer),biasRegularizer:St(this.biasRegularizer),activityRegularizer:St(this.activityRegularizer),biasConstraint:an(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Hu extends fy{static{u(this,"Conv")}constructor(e,t){super(e,t),this.kernel=null,Hu.verifyArgs(t),this.filters=t.filters,xn(this.filters,"filters"),this.kernelInitializer=Dt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.kernelRegularizer=Ot(t.kernelRegularizer)}build(e){e=ht(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return H(()=>{e=_e(e);let s;const r=this.bias==null?null:this.bias.read(),o=r_(this.activation.getClassName());if(o!=null&&this.rank===2)s=tI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=oJ(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=tI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=iJ(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ue("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=ht(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=mr(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Bt(this.kernelInitializer),kernelRegularizer:St(this.kernelRegularizer),kernelConstraint:an(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Dh extends Hu{static{u(this,"Conv2D")}constructor(e){super(2,e),Dh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wS(e.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Dh.className="Conv2D";te(Dh);class Oh extends Hu{static{u(this,"Conv3D")}constructor(e){super(3,e),Oh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Oh.className="Conv3D";te(Oh);class uR extends Dh{static{u(this,"Conv2DTranspose")}constructor(e){if(super(e),this.inputSpec=[new rn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ht(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new rn({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return H(()=>{let s=_e(e);if(s.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const c=r[i],l=r[a],d=this.kernelSize[0],h=this.kernelSize[1],p=this.strides[0],f=this.strides[1],m=Or(c,p,d,this.padding),g=Or(l,f,h,this.padding),y=[o,m,g,this.filters];this.dataFormat!=="channelsLast"&&(s=Ze(s,[0,2,3,1]));let b=Tw(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=Ze(b,[0,3,1,2])),this.bias!=null&&(b=Nr(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(e){e=ht(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],c=this.strides[0],l=this.strides[1];return t[s]=this.filters,t[r]=Or(t[r],c,i,this.padding),t[o]=Or(t[o],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}uR.className="Conv2DTranspose";te(uR);class lR extends Oh{static{u(this,"Conv3DTranspose")}constructor(e){if(super(e),this.inputSpec=[new rn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ht(e),e.length!==5)throw new B("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new rn({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return H(()=>{let s=_e(e);if(s.shape.length!==5)throw new B(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,c;this.dataFormat==="channelsFirst"?(c=2,i=3,a=4):(c=1,i=2,a=3);const l=r[c],d=r[i],h=r[a],p=this.kernelSize[0],f=this.kernelSize[1],m=this.kernelSize[2],g=this.strides[0],y=this.strides[1],b=this.strides[2],x=Or(l,g,p,this.padding),S=Or(d,y,f,this.padding),w=Or(h,b,m,this.padding),C=[o,x,S,w,this.filters];this.dataFormat!=="channelsLast"&&(s=Ze(s,[0,2,3,4,1]));let v=vT(s,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=Ze(v,[0,4,1,2,3])),this.bias!==null&&(v=Nr(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=ht(e);const t=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],c=this.kernelSize[1],l=this.kernelSize[2],d=this.strides[0],h=this.strides[1],p=this.strides[2];return t[s]=this.filters,t[r]=Or(t[r],d,a,this.padding),t[o]=Or(t[o],h,c,this.padding),t[i]=Or(t[i],p,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}lR.className="Conv3DTranspose";te(lR);class dR extends Hu{static{u(this,"SeparableConv")}constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Dt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ot(t.depthwiseRegularizer),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.pointwiseInitializer=Dt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ot(t.pointwiseRegularizer),this.pointwiseConstraint=cn(t.pointwiseConstraint)}build(e){if(e=ht(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new rn({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return H(()=>{e=_e(e);let s;if(this.rank===1)throw new Ue("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ze(e,[0,2,3,1])),s=Yw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Nr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ze(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Bt(this.depthwiseInitializer),e.pointwiseInitializer=Bt(this.pointwiseInitializer),e.depthwiseRegularizer=St(this.depthwiseRegularizer),e.pointwiseRegularizer=St(this.pointwiseRegularizer),e.depthwiseConstraint=an(this.depthwiseConstraint),e.pointwiseConstraint=an(this.pointwiseConstraint),e}}dR.className="SeparableConv";class hR extends dR{static{u(this,"SeparableConv2D")}constructor(e){super(2,e)}}hR.className="SeparableConv2D";te(hR);class my extends Hu{static{u(this,"Conv1D")}constructor(e){super(1,e),my.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wS(e.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}my.className="Conv1D";te(my);class pR extends Ke{static{u(this,"Cropping2D")}constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return H(()=>{if(e=_e(e),this.dataFormat==="channelsLast"){const s=dp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return dp(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=dp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return dp(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}pR.className="Cropping2D";te(pR);class fR extends Ke{static{u(this,"UpSampling2D")}constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Qt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,P9(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return H(()=>{let s=_e(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Ze(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?Un.resizeNearestNeighbor(s,[o,i]):Un.resizeBilinear(s,[o,i]);return Ze(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?Un.resizeNearestNeighbor(s,[o,i]):Un.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}fR.className="UpSampling2D";te(fR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aJ(n,e,t=[1,1],s="valid",r,o){return H(()=>{r==null&&(r=Cr()),Qt(r);let i=OS(n,r);if(n.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=wh(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=Ze(i,[0,3,1,2])),i})}u(aJ,"depthwiseConv2d");class mR extends fy{static{u(this,"DepthwiseConv2D")}constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Dt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.depthwiseRegularizer=Ot(e.depthwiseRegularizer)}build(e){if(e=ht(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return H(()=>{e=_e(e);let s=aJ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Nr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=ht(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=mr(t,this.kernelSize[0],this.padding,this.strides[0]),i=mr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Bt(this.depthwiseInitializer),e.depthwiseRegularizer=St(this.depthwiseRegularizer),e.depthwiseConstraint=an(this.depthwiseRegularizer),e}}mR.className="DepthwiseConv2D";te(mR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gR(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return u(r,"toListOrNull"),e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}u(gR,"standardizeArgs");function yR(n,e,t,s=!1,r,o,i=!1,a=!1){return H(()=>{const c=e.shape.length;if(c<3)throw new B(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(Sr(2,c));if(e=Ze(e,l),o!=null)throw new Ue("The rnn() functoin of the deeplearn.js backend does not support constants yet.");r!=null&&(r=le(le(r,"bool"),"float32"),r.rank===c-1&&(r=Bn(r,-1)),r=Ze(r,l)),s&&(e=rr(e,0),r!=null&&(r=rr(r,0)));const d=[];let h,p=t;const f=e.shape[0],m=or(e);let g;r!=null&&(g=or(r));for(let b=0;b<f;++b){const x=m[b],S=H(()=>n(x,p));if(r==null)h=S[0],p=S[1];else{const w=H(()=>{const C=g[b],v=fe(As(C),C),k=ee(P(S[0],C),P(p[0],v)),$=p.map((T,E)=>ee(P(S[1][E],C),P(T,v)));return{output:k,newStates:$}});h=w.output,p=w.newStates}a&&d.push(h)}let y;return a&&(y=ys(d,1)),[h,y,p]})}u(yR,"rnn");class yi extends Ke{static{u(this,"RNN")}constructor(e){super(e);let t;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new LS({cells:e.cell}):t=e.cell,t.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new rn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Sr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Dx(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return H(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ue("Constants support is not implemented in RNN yet.");Dx(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new rn({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Ge(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new rn({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){H(()=>{if(!this.stateful)throw new Ar("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Zt([s,r])):this.states_=[Zt([s,this.cell.stateSize])];else if(e==null)We(this.states_),this.keptStates!=null&&(We(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Zt([s,r])):this.states_[0]=Zt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):We(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!Ge(o.shape,a))throw new B(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>bn(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=gR(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new rn({shape:l.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Gr){const l=[e].concat(i),d=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=d;const p=super.apply(l,t);return this.inputSpec=h,p}else return super.apply(e,t)}call(e,t){return H(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=_e(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new B(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll;const a={training:r},l=yR(u((m,g)=>{const y=this.cell.call([m].concat(g),a);return[y[0],y.slice(1)]},"step"),e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),d=l[0],h=l[1],p=l[2];this.stateful&&this.resetStates(p,r);const f=this.returnSequences?h:d;return this.returnState?[f].concat(p):f})}getInitialState(e){return H(()=>{let t=Zt(e.shape);return t=ye(t,[1,2]),t=Th(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Rx(t,[1,s]):t):this.cell.stateSize>1?[Rx(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===yi.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=po(r,s);return new e(Object.assign(t,{cell:o}))}}yi.className="RNN";te(yi);class gy extends Ke{static{u(this,"RNNCell")}}class FS extends gy{static{u(this,"SimpleRNNCell")}constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=ni(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=$c([1,ei([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$c([1,ei([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ht(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return H(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=si({ones:()=>As(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=si({ones:()=>As(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=Vr(P(e,i),this.kernel.read()):o=Vr(e,this.kernel.read()),this.bias!=null&&(o=Nr(o,this.bias.read())),a!=null&&(s=P(s,a));let c=ee(o,Vr(s,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ti(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:St(this.kernelRegularizer),recurrentRegularizer:St(this.recurrentRegularizer),biasRegularizer:St(this.biasRegularizer),activityRegularizer:St(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),recurrentConstraint:an(this.recurrentConstraint),biasConstraint:an(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}FS.className="SimpleRNNCell";te(FS);class bR extends yi{static{u(this,"SimpleRNN")}constructor(e){e.cell=new FS(e),super(e)}call(e,t){return H(()=>{this.cell.dropoutMask!=null&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}bR.className="SimpleRNN";te(bR);class PS extends gy{static{u(this,"GRUCell")}constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xn(this.units,"units"),this.activation=ni(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ni(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=$c([1,ei([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$c([1,ei([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ht(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return H(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=si({ones:()=>As(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=si({ones:()=>As(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,c,l;0<this.dropout&&this.dropout<1&&(e=P(e,o[0]));let d=Vr(e,this.kernel.read());this.useBias&&(d=Nr(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=P(r,i[0]));const h=this.recurrentKernel.read(),[p,f]=es(h,[2*this.units,this.units],h.rank-1),m=Vr(r,p),[g,y,b]=es(d,3,d.rank-1),[x,S]=es(m,2,m.rank-1);a=this.recurrentActivation.apply(ee(g,x)),c=this.recurrentActivation.apply(ee(y,S));const w=Vr(P(c,r),f);l=this.activation.apply(ee(b,w));const C=ee(P(a,r),P(ee(1,Rt(a)),l));return[C,C]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ti(this.activation),recurrentActivation:ti(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:St(this.kernelRegularizer),recurrentRegularizer:St(this.recurrentRegularizer),biasRegularizer:St(this.biasRegularizer),activityRegularizer:St(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),recurrentConstraint:an(this.recurrentConstraint),biasConstraint:an(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}PS.className="GRUCell";te(PS);class xR extends yi{static{u(this,"GRU")}constructor(e){e.implementation,e.cell=new PS(e),super(e)}call(e,t){return H(()=>{this.cell.dropoutMask!=null&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}xR.className="GRU";te(xR);class yy extends gy{static{u(this,"LSTMCell")}constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=ni(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ni(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=$c([1,ei([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$c([1,ei([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ht(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends ir{static{u(this,"CustomInit")}apply(c,l){const d=o.apply([i]),h=new CS().apply([i]),p=o.apply([i*2]);return Mv(Mv(d,h),p)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return H(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=si({ones:()=>As(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=si({ones:()=>As(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let c,l,d,h;0<this.dropout&&this.dropout<1&&(e=P(e,i[0]));let p=Vr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=P(r,a[0])),p=ee(p,Vr(r,this.recurrentKernel.read())),this.useBias&&(p=Nr(p,this.bias.read()));const[f,m,g,y]=es(p,4,p.rank-1);c=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(m),d=ee(P(l,o),P(c,this.activation.apply(g))),h=this.recurrentActivation.apply(y);const b=P(h,this.activation.apply(d));return[b,b,d]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ti(this.activation),recurrentActivation:ti(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:St(this.kernelRegularizer),recurrentRegularizer:St(this.recurrentRegularizer),biasRegularizer:St(this.biasRegularizer),activityRegularizer:St(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),recurrentConstraint:an(this.recurrentConstraint),biasConstraint:an(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}yy.className="LSTMCell";te(yy);class wR extends yi{static{u(this,"LSTM")}constructor(e){e.implementation,e.cell=new yy(e),super(e)}call(e,t){return H(()=>{this.cell.dropoutMask!=null&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}wR.className="LSTM";te(wR);class LS extends gy{static{u(this,"StackedRNNCells")}constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return H(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const c=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=c.call(i,t),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){Dx(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{Gi(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=u(o=>({className:o.getClassName(),config:o.getConfig()}),"getCellConfig"),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(po(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ox(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}ES(t)}}LS.className="StackedRNNCells";te(LS);function si(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,i=u(()=>o!=null?o(e(),t):d_(e(),t),"droppedInputs"),a=u(()=>_h(i,e,s),"createMask");return!r||r<=1?bn(a().clone()):Array(r).fill(void 0).map(a).map(l=>bn(l.clone()))}u(si,"generateDropoutMask");/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var cJ=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class SR extends yi{static{u(this,"ConvRNN2D")}constructor(e){if(e.unroll)throw new Ue("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ue("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new rn({ndim:5})]}call(e,t){return H(()=>{if(this.cell.dropoutMask!=null&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new B("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return H(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=Zt(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){H(()=>{if(!this.stateful)throw new Ar("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Zt(o)):this.states_=[Zt(o)];else if(e==null)We(this.states_),this.keptStates!=null&&(We(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Zt(o)):this.states_[0]=Zt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):We(this.states_);for(let a=0;a<this.states_.length;++a){const c=e[a],l=o;if(!Ge(c.shape,l))throw new B(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${c.shape}`);this.states_[a]=c}}this.states_=this.states_.map(a=>bn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,c=t==="channelsFirst",l=e[c?3:2],d=e[c?4:3],h=mr(l,r[0],o,i[0],a[0]),p=mr(d,r[1],o,i[1],a[1]);return[...e.slice(0,2),...c?[s,h,p]:[h,p,s]]}}SR.className="ConvRNN2D";class MS extends yy{static{u(this,"ConvLSTM2DCell")}constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,xn(this.filters,"filters"),this.kernelSize=uc(s,2,"kernelSize"),this.kernelSize.forEach(c=>xn(c,"kernelSize")),this.strides=uc(r||1,2,"strides"),this.strides.forEach(c=>xn(c,"strides")),this.padding=o||"valid",Fs(this.padding),this.dataFormat=i||"channelsLast",Qt(this.dataFormat),this.dilationRate=uc(a||1,2,"dilationRate"),this.dilationRate.forEach(c=>xn(c,"dilationRate"))}build(e){var t;e=ht(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const l=this.biasInitializer,d=this.filters;c=new(t=class extends ir{static{u(this,"CustomInit")}apply(p,f){const m=l.apply([d]),g=ms([d]),y=l.apply([d*2]);return SS([m,g,y])}},t.className="CustomInit",t)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return H(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=si({ones:()=>As(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,l=u((Y,Q,ne)=>!Q||!Q[ne]?Y:P(Q[ne],Y),"applyDropout");let d=l(r,c,0),h=l(r,c,1),p=l(r,c,2),f=l(r,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=si({ones:()=>As(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let g=l(o,m,0),y=l(o,m,1),b=l(o,m,2),x=l(o,m,3);const S=3,[w,C,v,k]=es(this.kernel.read(),a,S),[$,T,E,R]=this.useBias?es(this.bias.read(),a):[null,null,null,null];d=this.inputConv(d,w,$,this.padding),h=this.inputConv(h,C,T,this.padding),p=this.inputConv(p,v,E,this.padding),f=this.inputConv(f,k,R,this.padding);const[O,L,z,W]=es(this.recurrentKernel.read(),a,S);g=this.recurrentConv(g,O),y=this.recurrentConv(y,L),b=this.recurrentConv(b,z),x=this.recurrentConv(x,W);const A=this.recurrentActivation.apply(ee(d,g)),G=this.recurrentActivation.apply(ee(h,y)),V=ee(P(G,i),P(A,this.activation.apply(ee(p,b)))),q=P(this.recurrentActivation.apply(ee(f,x)),this.activation.apply(V));return[q,q,V]})}getConfig(){const e=super.getConfig(),t=cJ(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const o=Jo(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Nr(o,s,this.dataFormat):o}recurrentConv(e,t){return Jo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}MS.className="ConvLSTM2DCell";te(MS);class CR extends SR{static{u(this,"ConvLSTM2D")}constructor(e){const t=new MS(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}CR.className="ConvLSTM2D";te(CR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zS extends Ke{static{u(this,"Dropout")}constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return _h(()=>d_(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}zS.className="Dropout";te(zS);class vR extends zS{static{u(this,"SpatialDropout1D")}constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}vR.className="SpatialDropout1D";te(vR);class IR extends Ke{static{u(this,"Dense")}constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xn(this.units,"units"),this.activation=ni(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.biasConstraint=cn(e.biasConstraint),this.kernelRegularizer=Ot(e.kernelRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.activityRegularizer=Ot(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ht(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ht(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e),r=r_(this.activation.getClassName());let o;return r!=null?o=Vr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Vr(s,this.kernel.read()),this.bias!=null&&(o=Nr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:ti(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:St(this.kernelRegularizer),biasRegularizer:St(this.biasRegularizer),activityRegularizer:St(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),biasConstraint:an(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}IR.className="Dense";te(IR);class kR extends Ke{static{u(this,"Flatten")}constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ht(e);for(const t of e.slice(1))if(t==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ho(e,1)]}call(e,t){return H(()=>{this.invokeCallHook(e,t);let s=_e(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Ze(s,r)}return V9(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}kR.className="Flatten";te(kR);class $R extends Ke{static{u(this,"Activation")}constructor(e){super(e),this.supportsMasking=!0,this.activation=ni(e.activation)}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e);return this.activation.apply(s)})}getConfig(){const e={activation:ti(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}$R.className="Activation";te($R);class NR extends Ke{static{u(this,"RepeatVector")}constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return H(()=>(e=_e(e),B9(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}NR.className="RepeatVector";te(NR);class TR extends Ke{static{u(this,"Reshape")}constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let c=0;c<r.length;++c){const l=r[c];if(this.isUnknown(l))if(i===null)i=c;else throw new B("Can only specifiy one unknown dimension.");else o*=l}const a=Ho(e);if(i!==null){if(o===0||a%o!==0)throw new B(s);r[i]=a/o}else if(a!==o)throw new B(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return M(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}TR.className="Reshape";te(TR);class ER extends Ke{static{u(this,"Permute")}constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Sr(1,e.dims.length+1);if(!Ge(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new rn({ndim:this.dims.length+1})]}computeOutputShape(e){e=ht(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return Ze(_e(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ER.className="Permute";te(ER);class _R extends Ke{static{u(this,"Masking")}constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=_e(e);return Cf(Ic(s,this.maskValue),-1)}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e),i=Cf(Ic(s,this.maskValue),-1,!0);return P(s,le(i,s.dtype))})}}_R.className="Masking";te(_R);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RR extends Ke{static{u(this,"Embedding")}constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(gt(e.inputLength))}this.inputDim=e.inputDim,xn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xn(this.outputDim,"outputDim"),this.embeddingsInitializer=Dt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ot(e.embeddingsRegularizer),this.activityRegularizer=Ot(e.activityRegularizer),this.embeddingsConstraint=cn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return H(()=>this.maskZero?(e=_e(e),Ic(e,et(e))):null)}computeOutputShape(e){if(e=ht(e),this.inputLength==null)return[...e,this.outputDim];const t=gt(this.inputLength);if(t.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return H(()=>{this.invokeCallHook(e,t);let s=_e(e);s.dtype!=="int32"&&(s=Wr(s,"int32"));const r=l_(this.embeddings.read(),M(s,[s.size]));return M(r,ht(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Bt(this.embeddingsInitializer),embeddingsRegularizer:St(this.embeddingsRegularizer),activityRegularizer:St(this.activityRegularizer),embeddingsConstraint:an(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}RR.className="Embedding";te(RR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Na extends Ke{static{u(this,"Merge")}constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ue}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ht(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Go(t),t.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Go(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return H(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=ei(r);for(let i of e){const a=i.rank;for(let c=0;c<o-a;++c)i=Th(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const c of e){const l=c.rank;if(l==null){const d=c.shape,h=d[0],p=d.slice(1).concat([h]);let f=M(c,[h].concat(Ho(d.slice(1))));f=Ze(f,[1,0]),f=M(f,p),s.push(f),o=!0}else if(l>1){const d=Sr(1,l).concat([0]);s.push(Ze(c,d)),o=!0}else s.push(c)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const c=i.shape,l=c.length,d=c[l-1],h=[d].concat(c.slice(0,c.length-1));i=M(Ze(M(i,[-1,d]),[1,0]),h)}else if(a>1){const c=[a-1].concat(Sr(0,a-1));i=Ze(i,c)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Go(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return H(()=>{if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(t.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Bn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Ur(s,t[r]);return s})}}class AR extends Na{static{u(this,"Add")}constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ee(t,e[s]);return t})}}AR.className="Add";te(AR);class DR extends Na{static{u(this,"Multiply")}constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=P(t,e[s]);return t})}}DR.className="Multiply";te(DR);class OR extends Na{static{u(this,"Average")}constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ee(t,e[s]);return P(1/e.length,t)})}}OR.className="Average";te(OR);class FR extends Na{static{u(this,"Maximum")}constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Io(t,e[s]);return t})}}FR.className="Maximum";te(FR);class PR extends Na{static{u(this,"Minimum")}constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=ra(t,e[s]);return t})}}PR.className="Minimum";te(PR);class LR extends Na{static{u(this,"Concatenate")}constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(Ge(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return H(()=>SS(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new B(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return H(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(le(As(e[i]),"bool")):t[i].rank<e[i].rank?r.push(Bn(t[i],-1)):r.push(t[i]);const o=Wt(r,this.axis);return Iw(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}LR.className="Concatenate";te(LR);function cl(n,e){for(;n<0;)n+=e;return n}u(cl,"interpretAxis");function uJ(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new Ue("batchDot is not implemented for tensors of 4D or higher rank yet");if(N(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),N(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new Ue("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return H(()=>{let i;if(s>r){i=s-r;const c=[];for(let l=0;l<i;++l)c.push(1);e=M(e,e.shape.concat(c))}else if(r>s){i=r-s;const c=[];for(let l=0;l<i;++l)c.push(1);n=M(n,n.shape.concat(c))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=ye(P(n,e),o[0]):a=ye(P(Ze(n,[1,0]),e),o[1]);else{const c=o[0]!==n.shape.length-1,l=o[1]===e.shape.length-1;a=Qe(n,e,c,l)}if(i>0){let c;s>r?c=s+r-3:c=s-1;const l=[];for(let d=c;d<c+i;++d)l.push(d);a=vo(a,l)}return a.shape.length===1&&(a=Bn(a,1)),a})}u(uJ,"batchDot");class MR extends Na{static{u(this,"Dot")}constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new Ue("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new B(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>cl(o,e[i].shape.length)):r=[cl(this.axes,t.shape.length),cl(this.axes,s.shape.length)],this.normalize&&(t=Ef(t,r[0]),s=Ef(s,r[1])),uJ(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[cl(this.axes,e.length),cl(this.axes,t.length)],s}computeOutputShape(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new Ue("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}MR.className="Dot";te(MR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zR extends Ke{static{u(this,"GaussianNoise")}constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e);return _h(u(()=>ee(ly(s.shape,0,this.stddev),s),"noised"),()=>s,t.training||!1)})}}zR.className="GaussianNoise";te(zR);class BR extends Ke{static{u(this,"GaussianDropout")}constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return H(()=>{this.invokeCallHook(e,t);const s=_e(e);return this.rate>0&&this.rate<1?_h(u(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return P(s,ly(s.shape,1,o))},"noised"),()=>s,t.training||!1):s})}}BR.className="GaussianDropout";te(BR);class WR extends Ke{static{u(this,"AlphaDropout")}constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||_e(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return H(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return _h(u(()=>{const o=_e(e),c=-1.6732632423543772*1.0507009873554805;let l=fi(Ca(s),this.rate);l=Wr(l,"float32");const d=((1-this.rate)*(1+this.rate*c**2))**-.5,h=-d*c*this.rate,p=ee(P(o,l),P(ee(l,-1),c));return ee(P(p,d),h)},"droppedInputs"),()=>_e(e),t.training||!1)}return e})}}WR.className="AlphaDropout";te(WR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yl(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=hT(n,e,t,s,r,o);else if(n.rank===3)i=pT(n,e,t,s,r,o);else if(n.rank===4)i=fT(n,e,t,s,r,o);else throw new Ue(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}u(Yl,"batchNormalization");function lJ(n,e,t,s,r=.001){return H(()=>{const o=$g(n,s),i=o.mean,a=o.variance;return[Yl(n,i,a,t,e,r),i,a]})}u(lJ,"regularNormalizeBatchInTraining");function dJ(n,e,t,s,r=.001){return H(()=>{const o=$g(n,s),i=o.mean,a=o.variance,c=[];for(const m of Sr(0,n.rank))s.indexOf(m)!==-1?c.push(1):c.push(n.shape[m]);const l=M(i,c),d=M(a,c),h=e==null?null:M(e,c),p=t==null?null:M(t,c);return[Yl(n,l,d,p,h,r),i,a]})}u(dJ,"broadcastNormalizeBatchInTraining");function hJ(n,e,t,s,r=.001){return Ge(s.slice().sort(),Sr(0,n.rank-1))?lJ(n,e,t,s,r):dJ(n,e,t,s,r)}u(hJ,"normalizeBatchInTraining");class VR extends Ke{static{u(this,"BatchNormalization")}constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Dt(e.betaInitializer||"zeros"),this.gammaInitializer=Dt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Dt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Dt(e.movingVarianceInitializer||"ones"),this.betaConstraint=cn(e.betaConstraint),this.gammaConstraint=cn(e.gammaConstraint),this.betaRegularizer=Ot(e.betaRegularizer),this.gammaRegularizer=Ot(e.gammaRegularizer)}build(e){e=ht(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new B(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new rn({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return H(()=>{const s=t.training==null?!1:t.training,r=_e(e),o=r.shape,i=o.length,a=Sr(0,i),c=this.axis>=0?this.axis:this.axis+i;a.splice(c,1);const l=ia(1,i);l[c]=o[c];const d=a.slice();d.sort();const h=!Ge(d,Sr(0,i).slice(0,i-1)),p=u(()=>{if(h){const x=M(this.movingMean.read(),l),S=M(this.movingVariance.read(),l),w=this.center?M(this.beta.read(),l):null,C=this.scale?M(this.gamma.read(),l):null;return Yl(r,x,S,w,C,this.epsilon)}else return Yl(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)},"normalizeInference");if(!s)return p();const[f,m,g]=hJ(r,this.gamma.read(),this.beta.read(),a,this.epsilon),y=u((x,S,w)=>{H(()=>{const C=1-w,v=x.read(),k=P(fe(v,S),C);x.write(fe(v,k))})},"doMovingAverage");return u(()=>{y(this.movingMean,m,this.momentum),y(this.movingVariance,g,this.momentum)},"updateMovingMeanAndVariance")(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),movingMeanInitializer:Bt(this.movingMeanInitializer),movingVarianceInitializer:Bt(this.movingVarianceInitializer),betaRegularizer:St(this.betaRegularizer),gammaRegularizer:St(this.gammaRegularizer),betaConstraint:an(this.betaConstraint),gammaConstraint:an(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}VR.className="BatchNormalization";te(VR);class UR extends Ke{static{u(this,"LayerNormalization")}constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Dt(e.betaInitializer||"zeros"),this.gammaInitializer=Dt(e.gammaInitializer||"ones"),this.betaRegularizer=Ot(e.betaRegularizer),this.gammaRegularizer=Ot(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ht(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Go(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=_e(e),r=s.shape,o=r.length;return H(()=>{let{mean:a,variance:c}=$g(s,this.axis,!0);const l=ia(1,o);for(const g of this.axis)l[g]=r[g];const d=u(g=>g!=null&&g.shape.length!==o?M(g,l):g,"broadcast");let h=this.scale?d(this.gamma.read()):null,p=this.center?d(this.beta.read()):null;const f=[],m=[];for(let g=0;g<o;++g)this.axis.indexOf(g)!==-1?(f.push(r[g]),m.push(1)):(f.push(1),m.push(r[g]));return a=Ks(a,f),c=Ks(c,f),h!=null&&(h=Ks(h,m)),p!=null&&(p=Ks(p,m)),Yl(s,a,c,p,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),betaRegularizer:St(this.betaRegularizer),gammaRegularizer:St(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}UR.className="LayerNormalization";te(UR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pJ(n,e,t){return H(()=>{if(n.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Cr()),t!=="channelsLast"&&t!=="channelsFirst")throw new B(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],mi(n,s)})}u(pJ,"spatial2dPadding");class GR extends Ke{static{u(this,"ZeroPadding2D")}constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Cr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new rn({ndim:4})]}computeOutputShape(e){e=ht(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return H(()=>pJ(_e(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}GR.className="ZeroPadding2D";te(GR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function by(n,e,t,s,r,o){return H(()=>{Qt(r),i_(o),Fs(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Cr()),o==null&&(o="max"),n=OS(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=kg(n,e,t,a):i=yg(n,e,t,a),r==="channelsFirst"&&(i=Ze(i,[0,3,1,2])),i})}u(by,"pool2d");function HR(n,e,t,s,r,o){return H(()=>{Qt(r),i_(o),Fs(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Cr()),o==null&&(o="max"),n=cR(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=MT(n,e,t,a):i=dT(n,e,t,a),r==="channelsFirst"&&(i=Ze(i,[0,4,1,2,3])),i})}u(HR,"pool3d$1");class jR extends Ke{static{u(this,"Pooling1D")}constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(xn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Fs(this.padding),this.inputSpec=[new rn({ndim:3})]}computeOutputShape(e){e=ht(e);const t=mr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return H(()=>{this.invokeCallHook(e,t),e=Th(_e(e),2);const s=this.poolingFunction(_e(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return vo(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class qR extends jR{static{u(this,"MaxPooling1D")}constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Qt(o),Fs(r),by(e,t,s,r,o,"max")}}qR.className="MaxPooling1D";te(qR);class KR extends jR{static{u(this,"AveragePooling1D")}constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Qt(o),Fs(r),by(e,t,s,r,o,"avg")}}KR.className="AveragePooling1D";te(KR);class XR extends Ke{static{u(this,"Pooling2D")}constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Qt(this.dataFormat),Fs(this.padding),this.inputSpec=[new rn({ndim:4})]}computeOutputShape(e){e=ht(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=mr(t,this.poolSize[0],this.padding,this.strides[0]),s=mr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return H(()=>(this.invokeCallHook(e,t),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class YR extends XR{static{u(this,"MaxPooling2D")}constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Qt(o),Fs(r),by(e,t,s,r,o,"max")}}YR.className="MaxPooling2D";te(YR);class QR extends XR{static{u(this,"AveragePooling2D")}constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Qt(o),Fs(r),by(e,t,s,r,o,"avg")}}QR.className="AveragePooling2D";te(QR);class JR extends Ke{static{u(this,"Pooling3D")}constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Qt(this.dataFormat),Fs(this.padding),this.inputSpec=[new rn({ndim:5})]}computeOutputShape(e){e=ht(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=mr(t,this.poolSize[0],this.padding,this.strides[0]),s=mr(s,this.poolSize[1],this.padding,this.strides[1]),r=mr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return H(()=>(this.invokeCallHook(e,t),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ZR extends JR{static{u(this,"MaxPooling3D")}constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Qt(o),Fs(r),HR(e,t,s,r,o,"max")}}ZR.className="MaxPooling3D";te(ZR);class eA extends JR{static{u(this,"AveragePooling3D")}constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Qt(o),Fs(r),HR(e,t,s,r,o,"avg")}}eA.className="AveragePooling3D";te(eA);class tA extends Ke{static{u(this,"GlobalPooling1D")}constructor(e){super(e),this.inputSpec=[new rn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ue}}class nA extends tA{static{u(this,"GlobalAveragePooling1D")}constructor(e){super(e||{})}call(e,t){return H(()=>{const s=_e(e);return Gt(s,1)})}}nA.className="GlobalAveragePooling1D";te(nA);class sA extends tA{static{u(this,"GlobalMaxPooling1D")}constructor(e){super(e||{})}call(e,t){return H(()=>{const s=_e(e);return tr(s,1)})}}sA.className="GlobalMaxPooling1D";te(sA);class rA extends Ke{static{u(this,"GlobalPooling2D")}constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Qt(this.dataFormat),this.inputSpec=[new rn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ue}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class oA extends rA{static{u(this,"GlobalAveragePooling2D")}call(e,t){return H(()=>{const s=_e(e);return this.dataFormat==="channelsLast"?Gt(s,[1,2]):Gt(s,[2,3])})}}oA.className="GlobalAveragePooling2D";te(oA);class iA extends rA{static{u(this,"GlobalMaxPooling2D")}call(e,t){return H(()=>{const s=_e(e);return this.dataFormat==="channelsLast"?tr(s,[1,2]):tr(s,[2,3])})}}iA.className="GlobalMaxPooling2D";te(iA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aA extends Ke{static{u(this,"Wrapper")}constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=po(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class cA extends aA{static{u(this,"TimeDistributed")}constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=ht(e),e.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ht(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return H(()=>(e=_e(e),yR(u((i,a)=>[_e(this.layer.call(i,t)),[]],"step"),e,[],!1,null,null,!1,!0)[1]))}}cA.className="TimeDistributed";te(cA);function fJ(n){$a(F9,"BidirectionalMergeMode",n)}u(fJ,"checkBidirectionalMergeMode");const mJ="concat";class uA extends aA{static{u(this,"Bidirectional")}constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=po(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=po(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?mJ:e.mergeMode,fJ(this.mergeMode),e.weights)throw new Ue("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):Yn(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=gR(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const l=s.length;if(l%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const d=s.map(h=>new rn({shape:h.shape}));this.forwardLayer.stateSpec=d.slice(0,l/2),this.backwardLayer.stateSpec=d.slice(l/2),a.push(...d)}if(r!=null)throw new Ue("Support for constants in Bidirectional layers is not implemented yet.");const c=i[0]instanceof Gr;for(const l of i)if(l instanceof Gr!==c)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const l=[e].concat(i),d=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=d;const p=super.apply(l,t);return this.inputSpec=h,p}else return super.apply(e,t)}call(e,t){return H(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const c=s.slice(0,s.length/2),l=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:c})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=rr(o,1));let a;return this.mergeMode==="concat"?a=SS([r,o]):this.mergeMode==="sum"?a=ee(r,o):this.mergeMode==="ave"?a=P(.5,ee(r,o)):this.mergeMode==="mul"?a=P(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Gi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Gi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=po(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ue("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}uA.className="Bidirectional";te(uA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lA extends Ke{static{u(this,"Rescaling")}constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return H(()=>(e=_e(e),e.dtype!=="float32"&&(e=Wr(e,"float32")),ee(P(e,this.scale),this.offset)))}}lA.className="Rescaling";te(lA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:gJ,cropAndResize:yJ}=Un;class dA extends Ke{static{u(this,"CenterCrop")}constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,i,a,c){return H(()=>{let l,d=!1;const h=t/i,p=s/a,f=(r+t)/i,m=(o+s)/a,g=[h,p,f,m],y=[];e.rank===3?(d=!0,l=ys([e])):l=e;for(let C=0;C<l.shape[0];C++)y.push(g);const b=er(y,[y.length,4]),x=kc(0,y.length,1,"int32"),w=yJ(l,b,x,[r,o],"nearest");return Wr(d?_e(or(w)):w,c)})}upsize(e,t,s,r){return H(()=>{const o=gJ(e,[t,s]);return Wr(o,r)})}call(e,t){return H(()=>{const s=_e(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let c=0;i!==this.height&&(c=Math.floor((i-this.height)/2));let l=0;return a!==this.width&&(l=Math.floor((a-this.width)/2),l===0&&(l=1)),c>=0&&l>=0?this.centerCrop(s,c,l,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=ht(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}dA.className="CenterCrop";te(dA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bJ(n,e,t,s){let r=_e(n);if(r.dtype!=="int32"&&(r=Wr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=Bn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Bn(r,-1)),r.rank>2)throw new B(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let c;if(typeof s<"u"&&e==="count"?c=kx(a,s,t,i):c=kx(a,[],t,i),e!=="tfIdf")return c;if(s)return P(c,s);throw new B("When outputMode is 'tfIdf', weights must be provided.")}u(bJ,"encodeCategoricalInputs");/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hA extends Ke{static{u(this,"CategoryEncoding")}constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=ht(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return H(()=>{e=_e(e),e.dtype!=="int32"&&(e=Wr(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new B(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=_e(t.countWeights)}const r=tr(e),o=Vl(e),i=Is(this.numTokens,r).bufferSync().get(0),a=fi(o,0).bufferSync().get(0);if(!(i&&a))throw new B(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return bJ(e,this.outputMode,this.numTokens,s)})}}hA.className="CategoryEncoding";te(hA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xJ=["bilinear","nearest"],nI=new Set(xJ);class pA extends Ke{static{u(this,"Resizing")}constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(nI.has(e.interpolation))this.interpolation=e.interpolation;else throw new B(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=ht(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return H(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Un.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Un.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...nI]} are supported`)})}}pA.className="Resizing";te(pA);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fA{static{u(this,"RandomSeed")}constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}fA.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mA extends Ke{static{u(this,"BaseRandomLayer")}constructor(e){super(e),this.randomGenerator=new fA(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}mA.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const wJ=["bilinear","nearest"],sI=new Set(wJ);class gA extends mA{static{u(this,"RandomWidth")}constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new B(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new B(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new B(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(sI.has(s))this.interpolation=s;else throw new B(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=ht(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return H(()=>{const s=_e(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Ca([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return Un.resizeBilinear(e,i);case"nearest":return Un.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...sI]} are supported`)}})}}gA.className="RandomWidth";te(gA);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ=j();SJ.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ls;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(ls||(ls={}));var rI;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(rI||(rI={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ={};function yA(n){return CJ[n]}u(yA,"getRegisteredOp");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,c=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,l=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return In(e.inputNames[l],t,s,r);if(o.type==="tensors"){const p=e.inputs.slice(a,c);return e.inputNames.slice(a,c).filter((m,g)=>{var y;return((y=p[g])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(m=>In(m,t,s,r))}const d=In(e.inputNames[l],t,s,r),h=d.dataSync();return o.type==="number"?h[0]:Zs(d.shape,h)}const i=e.attrParams[n];return i&&i.value}u(I,"getParamValue");function In(n,e,t,s){const[r,o]=ds(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[Of(r,a)]);return i!==void 0?e[Of(r,i)][o]:void 0}u(In,"getTensor");function oI(n,e,t){return e[Of(n,t.currentContextId)]}u(oI,"getTensorsForCurrentContext");function so(n,e){const[t,s,r]=ds(n,e);return[Of(t,e&&e.currentContextId),s,r]}u(so,"getNodeNameAndIndex");function Of(n,e){return e?`${n}-${e}`:n}u(Of,"getNodeNameWithContextId");function ds(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],i=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[o,a,i]}return t&&e.parseNodeNameCache.set(n,r),r}u(ds,"parseNodeName");function Bp(n,e,t){let s=I("pad",n,e,t);if(s==="explicit"){s=I("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}u(Bp,"getPadding");function ro(n){return n.kept?n:ho(n)}u(ro,"cloneTensor");/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vJ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var IJ=Object.freeze({__proto__:null,json:vJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var $J=Object.freeze({__proto__:null,json:kJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var TJ=Object.freeze({__proto__:null,json:NJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var _J=Object.freeze({__proto__:null,json:EJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RJ=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var AJ=Object.freeze({__proto__:null,json:RJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DJ=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var OJ=Object.freeze({__proto__:null,json:DJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FJ=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var PJ=Object.freeze({__proto__:null,json:FJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var MJ=Object.freeze({__proto__:null,json:LJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zJ=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var BJ=Object.freeze({__proto__:null,json:zJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WJ=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var VJ=Object.freeze({__proto__:null,json:WJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var GJ=Object.freeze({__proto__:null,json:UJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var jJ=Object.freeze({__proto__:null,json:HJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var KJ=Object.freeze({__proto__:null,json:qJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XJ=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var YJ=Object.freeze({__proto__:null,json:XJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QJ=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var JJ=Object.freeze({__proto__:null,json:QJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZJ=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var eZ=Object.freeze({__proto__:null,json:ZJ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tZ=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var nZ=Object.freeze({__proto__:null,json:tZ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sZ=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var rZ=Object.freeze({__proto__:null,json:sZ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oZ=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var iZ=Object.freeze({__proto__:null,json:oZ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iI{static{u(this,"OperationMapper")}static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[IJ,$J,TJ,_J,AJ,OJ,PJ,MJ,BJ,VJ,GJ,jJ,KJ,YJ,JJ,eZ,nZ,rZ,iZ],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((g,y)=>(g[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?r.push(g[y.name]):y.op==="Const"?o.push(g[y.name]):(y.input==null||y.input.length===0)&&i.push(g[y.name]),g),{});let c=[];const l=[];let d={},h={};t!=null&&(d=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const p=Object.keys(a);p.forEach(g=>{const y=a[g];y.inputNames.forEach((b,x)=>{const[S,,w]=so(b),C=a[S];if(C.outputs!=null){const v=C.outputs.indexOf(w);if(v!==-1){const k=`${S}:${v}`;y.inputNames[x]=k}}y.inputs.push(C),C.children.push(y)})}),Object.keys(h).length===0?p.forEach(g=>{const y=a[g];y.children.length===0&&l.push(y)}):Object.keys(h).forEach(g=>{const[y]=so(g),b=a[y];b!=null&&(b.signatureKey=h[g],l.push(b))}),Object.keys(d).length>0?Object.keys(d).forEach(g=>{const[y]=so(g),b=a[y];b&&(b.signatureKey=d[g],c.push(b))}):c=r;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((g,y)=>(g[y.signature.name]=this.mapFunction(y),g),{}));const m={nodes:a,inputs:c,outputs:l,weights:o,placeholders:r,signature:t,functions:f};return i.length>0&&(m.initNodes=i),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=yA(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=Bx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Bx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=qx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=qx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=Vx(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=Vx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=jx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=jx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=Wx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Wx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=Xx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Xx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=Hx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Hx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=Kx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Kx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=Ux(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Ux(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=Gx(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Gx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=aI(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=aI(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((h,p)=>(h[p.name]=this.mapNode(p),p.op==="Const"&&r.push(h[p.name]),h),{}));const i=[],a=[];e.signature.inputArg.forEach(h=>{const[p]=so(h.name),f={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:BS(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,i.push(f),o[p]=f}),Object.keys(o).forEach(h=>{const p=o[h];p.inputNames.forEach((f,m)=>{const[g,,y]=so(f),b=o[g];if(b.outputs!=null){const x=b.outputs.indexOf(y);if(x!==-1){const S=`${g}:${x}`;p.inputNames[m]=S}}p.inputs.push(b),b.children.push(p)})});const l=e.ret;e.signature.outputArg.forEach(h=>{const[p,f]=so(l[h.name]),m=o[p];m!=null&&(m.defaultOutput=f,a.push(m))});const d=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:d}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function aZ(n){const e=j().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}u(aZ,"decodeBase64");function bA(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):aZ(n);return e?t:t.toLowerCase()}u(bA,"parseStringParam");function Bx(n,e,t,s=!1){const r=n[e];return r!=null?bA(r.s,s):t}u(Bx,"getStringParam");function Wx(n,e,t){const s=n[e];return s?s.b:t}u(Wx,"getBoolParam");function Vx(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}u(Vx,"getNumberParam");function BS(n){switch(typeof n=="string"&&(n=ls[n]),n){case ls.DT_FLOAT:case ls.DT_HALF:return"float32";case ls.DT_INT32:case ls.DT_INT64:case ls.DT_INT8:case ls.DT_UINT8:return"int32";case ls.DT_BOOL:return"bool";case ls.DT_DOUBLE:return"float32";case ls.DT_STRING:return"string";case ls.DT_COMPLEX64:case ls.DT_COMPLEX128:return"complex64";default:return null}}u(BS,"parseDtypeParam");function aI(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}u(aI,"getFuncParam");function Ux(n,e,t){const s=n[e];return s&&s.type?BS(s.type):t}u(Ux,"getDtypeParam");function Gx(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>BS(r)):t}u(Gx,"getDtypeArrayParam");function xA(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}u(xA,"parseTensorShapeParam");function Hx(n,e,t){const s=n[e];return s&&s.shape?xA(s.shape):t}u(Hx,"getTensorShapeParam");function jx(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}u(jx,"getNumericArrayParam");function qx(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>bA(o,s)):t}u(qx,"getStringArrayParam");function Kx(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>xA(r)):t}u(Kx,"getTensorShapeArrayParam");function Xx(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}u(Xx,"getBoolArrayParam");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cZ{static{u(this,"NodeValueImpl")}constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return In(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return In(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Vx(this.node.rawAttrs,e,t);if(s.s!=null)return Bx(this.node.rawAttrs,e,t);if(s.b!=null)return Wx(this.node.rawAttrs,e,t);if(s.shape!=null)return Hx(this.node.rawAttrs,e,t);if(s.type!=null)return Ux(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return jx(this.node.rawAttrs,e,t);if(s.list.s!=null)return qx(this.node.rawAttrs,e,t);if(s.list.shape!=null)return Kx(this.node.rawAttrs,e,t);if(s.list.b!=null)return Xx(this.node.rawAttrs,e,t);if(s.list.type!=null)return Gx(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var En=Object.freeze({__proto__:null,OP_SCOPE_SUFFIX:BN,abs:nn,acos:sT,acosh:rT,add:ee,addN:Tj,all:Iw,any:Cf,argMax:vc,argMin:oT,asin:iT,asinh:aT,atan:cT,atan2:uT,atanh:lT,avgPool:yg,avgPool3d:dT,basicLSTMCell:Qj,batchNorm:xh,batchNorm2d:hT,batchNorm3d:pT,batchNorm4d:fT,batchToSpaceND:bg,bincount:mT,bitwiseAnd:iq,booleanMaskAsync:VK,broadcastArgs:cq,broadcastTo:ac,buffer:Oe,cast:le,ceil:gT,clipByValue:gs,clone:ho,complex:Xo,concat:Wt,concat1d:yT,concat2d:bT,concat3d:xT,concat4d:wT,conv1d:$w,conv2d:Jo,conv2dTranspose:Tw,conv3d:ST,conv3dTranspose:vT,cos:xg,cosh:Ew,cosineWindow:iS,cumprod:vf,cumsum:_w,denseBincount:kx,depthToSpace:IT,depthwiseConv2d:wh,diag:Rq,dilation2d:kT,div:Se,divNoNan:$T,dot:NT,dropout:eE,einsum:Ya,elu:Sh,enclosingPowerOfTwo:tE,ensureShape:Wq,equal:br,erf:Rw,euclideanNorm:_T,exp:os,expandDims:Bn,expm1:RT,eye:Dw,fft:Dg,fill:Bu,floor:vh,floorDiv:vw,fused:lX,gather:sa,gatherND:JK,greater:Is,greaterEqual:fi,ifft:jl,imag:wg,image:Un,inTopKAsync:nX,irfft:eS,isFinite:AT,isInf:DT,isNaN:OT,leakyRelu:Sg,less:Ul,lessEqual:wa,linalg:uE,linspace:p5,localResponseNormalization:FT,log:Rs,log1p:Cg,logSigmoid:PT,logSoftmax:Ow,logSumExp:vg,logicalAnd:Ur,logicalNot:Ig,logicalOr:Fw,logicalXor:LT,losses:W8,lowerBound:E5,matMul:Qe,max:tr,maxPool:kg,maxPool3d:MT,maxPoolWithArgmax:D5,maximum:Io,mean:Gt,meshgrid:P5,min:Vl,minimum:ra,mirrorPad:zT,mod:BT,moments:$g,movingAverage:HK,mul:P,multiRNNCell:V5,multinomial:G5,neg:Rt,norm:Ch,notEqual:Ic,oneHot:Lw,ones:ms,onesLike:As,op:D,outerProduct:X5,pad:mi,pad1d:J5,pad2d:e6,pad3d:n6,pad4d:r6,pool:WT,pow:So,prelu:Tg,print:nT,prod:VT,raggedGather:h6,raggedRange:f6,raggedTensorToTensor:g6,rand:b6,randomGamma:M6,randomNormal:Hw,randomStandardNormal:W6,randomUniform:Ca,randomUniformInt:G6,range:kc,real:Gl,reciprocal:GT,relu:Xr,relu6:jw,reshape:M,reverse:rr,reverse1d:Q6,reverse2d:Z6,reverse3d:tK,reverse4d:sK,rfft:Og,round:qw,rsqrt:Kw,scalar:ve,scatterND:qK,searchSorted:Pw,selu:Xw,separableConv2d:Yw,setdiff1dAsync:uK,sigmoid:Br,sign:HT,signal:B8,sin:Qw,sinh:Jw,slice:Je,slice1d:_g,slice2d:Zw,slice3d:Rg,slice4d:Hl,softmax:Ag,softplus:Wu,spaceToBatchND:Ng,sparse:V8,sparseToDense:YK,spectral:z8,split:es,sqrt:Tn,square:wt,squaredDifference:tS,squeeze:vo,stack:ys,step:Vu,stridedSlice:jT,string:U8,sub:fe,sum:ye,tan:qT,tanh:na,tensor:er,tensor1d:Vn,tensor2d:Il,tensor3d:KT,tensor4d:EK,tensor5d:_K,tensor6d:RK,tensorScatterUpdate:DK,tile:Ks,topk:YT,transpose:Ze,truncatedNormal:sS,unique:QT,unsortedSegmentSum:rS,unstack:or,upperBound:zK,variable:JT,where:Dn,whereAsync:ZT,zeros:Zt,zerosLike:et});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uZ=u((n,e,t,s=En)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[s.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[s.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[s.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[s.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[s.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[s.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[s.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[s.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[s.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$k");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lZ=u((n,e,t,s=En)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,e,t))];case"Acos":return[s.acos(I("x",n,e,t))];case"Acosh":return[s.acosh(I("x",n,e,t))];case"Asin":return[s.asin(I("x",n,e,t))];case"Asinh":return[s.asinh(I("x",n,e,t))];case"Atan":return[s.atan(I("x",n,e,t))];case"Atan2":return[s.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[s.atanh(I("x",n,e,t))];case"Ceil":return[s.ceil(I("x",n,e,t))];case"Complex":return[s.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[s.cos(I("x",n,e,t))];case"Cosh":return[s.cosh(I("x",n,e,t))];case"Elu":return[s.elu(I("x",n,e,t))];case"Erf":return[s.erf(I("x",n,e,t))];case"Exp":return[s.exp(I("x",n,e,t))];case"Expm1":return[s.expm1(I("x",n,e,t))];case"Floor":return[s.floor(I("x",n,e,t))];case"Log":return[s.log(I("x",n,e,t))];case"Log1p":return[s.log1p(I("x",n,e,t))];case"Imag":return[s.imag(I("x",n,e,t))];case"Neg":return[s.neg(I("x",n,e,t))];case"Reciprocal":return[s.reciprocal(I("x",n,e,t))];case"Real":return[s.real(I("x",n,e,t))];case"Relu":return[s.relu(I("x",n,e,t))];case"Round":return[s.round(I("x",n,e,t))];case"Selu":return[s.selu(I("x",n,e,t))];case"Sigmoid":return[s.sigmoid(I("x",n,e,t))];case"Sin":return[s.sin(I("x",n,e,t))];case"Sign":return[s.sign(I("x",n,e,t))];case"Sinh":return[s.sinh(I("x",n,e,t))];case"Softplus":return[s.softplus(I("x",n,e,t))];case"Sqrt":return[s.sqrt(I("x",n,e,t))];case"Square":return[s.square(I("x",n,e,t))];case"Tanh":return[s.tanh(I("x",n,e,t))];case"Tan":return[s.tan(I("x",n,e,t))];case"ClipByValue":return[s.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(I("x",n,e,t))];case"Rsqrt":return[s.rsqrt(In(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[s.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[s.isNaN(In(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(In(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(In(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$j");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){N(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];N(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}u(Ws,"assertShapesMatchAllowUndefinedSize");function cI(n){return!(typeof n=="number"||n.some(e=>e<0))}u(cI,"fullDefinedShape");function ul(n,e,t){let s=Yx(n,t);const r=!cI(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=Yx(o.shape,s)}),!cI(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}u(ul,"inferElementShape");function Yx(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}u(Yx,"mergeElementShape");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dZ{static{u(this,"TensorArray")}constructor(e,t,s,r,o,i,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=ve(0),bn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ws(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,bn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return er([],[0].concat(this.elementShape));const s=this.readMany(e);return Ws(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ys(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return er([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return Ws(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Wt(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,or(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];H(()=>{t=M(t,[1,s,o]);for(let c=0;c<e.length;++c){const d=[0,c===0?0:r[c-1],0],h=[1,e[c],o];i[c]=M(Je(t,d,h),this.elementShape)}return i});const a=[];for(let c=0;c<e.length;c++)a[c]=c;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aa{static{u(this,"TensorList")}get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e?.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);Ws(t,o.shape,"TensorList shape mismatch: "),bn(o)}),this.idTensor=ve(0),this.maxNumElements=r,bn(this.idTensor)}copy(){return new aa([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ws(e,this.elementShape,"TensorList shape mismatch: ");const r=ul(this.elementShape,this.tensors,e);return H(()=>{const o=this.tensors.map(i=>M(i,r));return ys(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=ul(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Ws(r.shape,e,"TensorList shape mismatch: "),M(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ws(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");bn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new aa([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ws(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ul(this.elementShape,this.tensors,t);return M(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ws(this.elementShape,t.shape,"TensorList shape mismatch: "),bn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ws(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ul(this.elementShape,this.tensors,s);return e.length===0?er([],[0].concat(r)):H(()=>{const o=e.map(i=>M(this.tensors[i],r));return ys(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ws(this.elementShape,t,"TensorList shape mismatch: ");const s=ul(this.elementShape,this.tensors,t);return this.size()===0?er([],[0].concat(s)):H(()=>{const r=this.tensors.map(o=>M(o,s));return Wt(r,0)})}}function hZ(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);Ws(r,e,"TensorList shape mismatch: ");const o=or(n);return new aa(o,e,s)}u(hZ,"fromTensor");function pZ(n,e,t,s){return new aa([],n,e,s)}u(pZ,"reserve");function fZ(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new aa([],t,n.dtype,s),i=or(n,0);return e.forEach((a,c)=>{o.setItem(a,i[c])}),o}u(fZ,"scatter");function mZ(n,e,t){let s=0;const r=e.map(d=>(s+=d,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=Yx(o,t),a=s===0?0:n.size/s,c=H(()=>{const d=[];n=M(n,[1,s,a]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:r[h-1],0],m=[1,e[h],a];d[h]=M(Je(n,f,m),i)}return n.dispose(),d}),l=new aa([],t,n.dtype,e.length);for(let d=0;d<c.length;d++)l.setItem(d,c[d]);return l}u(mZ,"split$1");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=u(async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,e,t),r=I("elseBranch",n,e,t),o=I("cond",n,e,t),i=I("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,e,t),r=I("cond",n,e,t),o=I("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(d=>d.id);let c=await i[0].data();i.forEach(d=>{!d.kept&&a.indexOf(d.id)===-1&&d.dispose()});let l=o;for(;c[0];){const d=l;l=await t.functionMap[s].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);const h=l.map(f=>f.id);d.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const p=await t.functionMap[r].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);c=await p[0].data(),p.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{const s=I("pred",n,e,t);return[ro(s)]}case"Switch":{const s=I("pred",n,e,t);let r=I("data",n,e,t);return r.kept||(r=ro(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>In(r,e,t)!==void 0);if(s){const r=In(s,e,t);return[ro(r)]}return}case"Enter":{const s=I("frameName",n,e,t),r=I("tensor",n,e,t);return t.enterFrame(s),[ro(r)]}case"Exit":{const s=I("tensor",n,e,t);return t.exitFrame(),[ro(s)]}case"NextIteration":{const s=I("tensor",n,e,t);return t.nextIteration(),[ro(s)]}case"TensorArrayV3":{const s=I("size",n,e,t),r=I("dtype",n,e,t),o=I("elementShape",n,e,t),i=I("dynamicSize",n,e,t),a=I("clearAfterRead",n,e,t),c=I("identicalElementShapes",n,e,t),l=I("name",n,e,t),d=new dZ(l,r,s,o,c,i,a);return t.addTensorArray(d),[d.idTensor,ve(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=I("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,e,t),r=I("tensor",n,e,t),o=I("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[ve(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,e,t),r=I("tensor",n,e,t),o=I("elementShape",n,e,t),i=I("numElements",n,e,t),a=fZ(r,s,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,e,t),r=I("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=I(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,c=pZ(s,r,i,a);return t.addTensorList(c),[c.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,e,t),r=I("indices",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=I("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=hZ(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id),o=I("dtype",n,e,t),i=I("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=I("tensorListId",n,e,t),r=I("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("lengths",n,e,t),i=mZ(s,o,r);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id);return[ve(r.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,e,t),r=I("size",n,e,t),i=t.getTensorList(s.id).resize(r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$i");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n,e,t){const[s,r]=I("fusedOps",n,e,t),o=s==="biasadd",i=!o,a=r==="prelu",c=s==="fusedbatchnorm",l=I("numArgs",n,e,t);if(o){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const d=I("strides",n,e,t),h=Bp(n,e,t),p=I("dataFormat",n,e,t).toUpperCase(),f=I("dilations",n,e,t);let[m,g]=I("args",n,e,t);i&&(g=m,m=void 0);const y=I("leakyreluAlpha",n,e,t);return{stride:d,pad:h,dataFormat:p,dilations:f,biasArg:m,preluArg:g,activationFunc:r,leakyreluAlpha:y}}u(uI,"fusedConvAndDepthWiseParams");const yZ=u((n,e,t,s=En)=>{switch(n.op){case"Conv1D":{const r=I("stride",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilation",n,e,t);return[s.conv1d(I("x",n,e,t),I("filter",n,e,t),r,o,i,a)]}case"Conv2D":{const r=I("strides",n,e,t),o=Bp(n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv2d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:c,preluArg:l,activationFunc:d,leakyreluAlpha:h}=uI(n,e,t);return[s.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:c,activation:d,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:c,preluArg:l,activationFunc:d,leakyreluAlpha:h}=uI(n,e,t);return[s.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:c,activation:d,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=I("outputShape",n,e,t),o=I("strides",n,e,t),i=Bp(n,e,t);return[s.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=I("strides",n,e,t),o=Bp(n,e,t),i=I("dilations",n,e,t),a=I("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv3d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t),a=I("includeBatchInIndex",n,e,t),{result:c,indexes:l}=s.maxPoolWithArgmax(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o,a);return[c,l]}case"AvgPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dilations",n,e,t),a=r[1],c=r[2],l=i[1],d=i[2];return[s.dilation2d(I("x",n,e,t),I("filter",n,e,t),[a,c],o,[l,d],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$h");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bZ=u((n,e,t,s=En)=>{switch(n.op){case"Fill":{const r=I("shape",n,e,t),o=I("dtype",n,e,t),i=I("value",n,e,t);return[s.fill(r,i,o)]}case"LinSpace":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("num",n,e,t);return[s.linspace(r,o,i)]}case"Multinomial":{const r=I("logits",n,e,t),o=I("numSamples",n,e,t),i=I("seed",n,e,t);return[s.multinomial(r,o,i)]}case"OneHot":{const r=I("indices",n,e,t),o=I("depth",n,e,t),i=I("onValue",n,e,t),a=I("offValue",n,e,t),c=I("dtype",n,e,t);return[s.oneHot(r,o,i,a,c)]}case"Ones":return[s.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[s.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("seed",n,e,t))];case"Range":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("step",n,e,t);return[s.range(r,o,i,I("dtype",n,e,t))]}case"TruncatedNormal":{const r=I("shape",n,e,t),o=I("mean",n,e,t),i=I("stdDev",n,e,t),a=I("seed",n,e,t);return[s.truncatedNormal(r,o,i,I("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$g");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ub(n,e,t){const s=I("boxes",n,e,t),r=I("scores",n,e,t),o=I("maxOutputSize",n,e,t),i=I("iouThreshold",n,e,t),a=I("scoreThreshold",n,e,t),c=I("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:c}}u(ub,"nmsParams");const xZ=u(async(n,e,t,s,r=En)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:c,scoreThreshold:l,softNmsSigma:d}=ub(n,e,t),h=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,c,l,d);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:c,scoreThreshold:l}=ub(n,e,t),d=I("padToMaxOutputSize",n,e,t),h=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,c,l,d);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:c,scoreThreshold:l}=ub(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,i,a,c,l)]}case"Where":{const o=r.cast(I("condition",n,e,t),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$f");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wZ=u((n,e,t,s=En)=>{switch(n.op){case"LowerBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=I("x",n,e,t),o=I("k",n,e,t),i=I("sorted",n,e,t),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=I("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=I("x",n,e,t),o=I("axis",n,e,t),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$e");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ=u((n,e,t,s=En)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=I("default",n,e,t);return[In(n.name,e,t)||r];case"Placeholder":return[In(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const d=I("x",n,e,t);return[ro(d)]}case"IdentityN":return I("x",n,e,t).map(d=>ro(d));case"Snapshot":const o=I("x",n,e,t);return[ro(o)];case"Shape":return[s.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(d=>s.tensor1d(d.shape));case"Size":return[s.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=I("x",n,e,t),a=I("data",n,e,t),c=I("message",n,e,t),l=I("summarize",n,e,t);for(let d=0;d<a.length;d++)Array.prototype.slice.call(a[d].dataSync()).slice(0,l);return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$d");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{static{u(this,"HashTable")}get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ve(0),this.tensorMap=new Map,bn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ve(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),H(()=>{const r=or(t),o=s.length,i=r.length;N(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const c=s[a],l=r[a];bn(l),this.tensorMap.set(c,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return H(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,t);r.push(a)}return ys(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vZ=u(async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=I("keyDType",n,e,t),i=I("valueDType",n,e,t),a=new CZ(o,i);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=I("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$c");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IZ=u((n,e,t,s=En)=>{switch(n.op){case"ResizeBilinear":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=I("image",n,e,t),o=I("boxes",n,e,t),i=I("boxInd",n,e,t),a=I("cropSize",n,e,t),c=I("method",n,e,t),l=I("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,i,a,c,l)]}case"ImageProjectiveTransformV3":{const r=I("images",n,e,t),o=I("transforms",n,e,t),i=I("outputShape",n,e,t),a=I("fillValue",n,e,t),c=I("interpolation",n,e,t),l=I("fillMode",n,e,t);return[s.image.transform(r,o,c.toLowerCase(),l.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$b");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kZ=u((n,e,t,s=En)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[s.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[s.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[s.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[s.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[s.logicalNot(I("a",n,e,t))];case"LogicalOr":return[s.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[s.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$a");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Z=u((n,e,t,s=En)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[s.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[s.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[r,o]=I("fusedOps",n,e,t),i=r==="biasadd",a=o==="prelu",c=I("numArgs",n,e,t),l=I("leakyreluAlpha",n,e,t);if(i){if(a&&c!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&c!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,h]=I("args",n,e,t);return[s.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:d,activation:o,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[s.linalg.bandPart(I("a",n,e,t),I("numLower",n,e,t),I("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$9");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NZ=u((n,e,t,s=En)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[s.softmax(I("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$8");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ=u((n,e,t,s=En)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$7");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ=u((n,e,t,s=En)=>{switch(n.op){case"Max":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.max(I("x",n,e,t),a,c)]}case"Mean":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.mean(I("x",n,e,t),a,c)]}case"Min":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.min(I("x",n,e,t),a,c)]}case"Sum":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.sum(I("x",n,e,t),a,c)]}case"All":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.all(I("x",n,e,t),a,c)]}case"Any":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.any(I("x",n,e,t),a,c)]}case"ArgMax":{const a=I("axis",n,e,t);return[s.argMax(I("x",n,e,t),a)]}case"ArgMin":{const a=I("axis",n,e,t);return[s.argMin(I("x",n,e,t),a)]}case"Prod":{const a=I("axis",n,e,t),c=I("keepDims",n,e,t);return[s.prod(I("x",n,e,t),a,c)]}case"Cumprod":{const a=I("axis",n,e,t),c=I("exclusive",n,e,t),l=I("reverse",n,e,t);return[s.cumprod(I("x",n,e,t),a,c,l)]}case"Cumsum":{const a=I("axis",n,e,t),c=I("exclusive",n,e,t),l=I("reverse",n,e,t);return[s.cumsum(I("x",n,e,t),a,c,l)]}case"Bincount":const r=I("x",n,e,t),o=I("weights",n,e,t),i=I("size",n,e,t);return[s.bincount(r,o,i)];case"DenseBincount":{const a=I("x",n,e,t),c=I("weights",n,e,t),l=I("size",n,e,t),d=I("binaryOutput",n,e,t);return[s.denseBincount(a,c,l,d)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$6");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Z=u((n,e,t,s=En)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=I("n",n,e,t),o=I("axis",n,e,t);let i=I("tensors",n,e,t);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=I("axis",n,e,t),o=I("batchDims",n,e,t),i=I("x",n,e,t),a=I("indices",n,e,t);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=I("dims",n,e,t),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=I("x",n,e,t);return[s.reverse(i,o)]}case"ReverseV2":{const r=I("axis",n,e,t),o=I("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=I("begin",n,e,t),o=I("size",n,e,t);return[s.slice(I("x",n,e,t),r,o)]}case"StridedSlice":{const r=I("begin",n,e,t),o=I("end",n,e,t),i=I("strides",n,e,t),a=I("beginMask",n,e,t),c=I("endMask",n,e,t),l=I("ellipsisMask",n,e,t),d=I("newAxisMask",n,e,t),h=I("shrinkAxisMask",n,e,t),p=I("x",n,e,t);return[s.stridedSlice(p,r,o,i,a,c,l,d,h)]}case"Pack":return H(()=>{const r=I("axis",n,e,t),o=I("tensors",n,e,t),i=o[0].shape,a=s.squeeze(o[0]).shape,c=o.map(l=>{const d=Ge(l.shape,i);if(!d&&!Ge(s.squeeze(l).shape,a))throw new Error("the input tensors shape does not match");return d?l:s.reshape(l,i)});return[s.stack(c,r)]});case"Unpack":{const r=I("axis",n,e,t),o=I("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=I("reps",n,e,t);return[s.tile(I("x",n,e,t),r)]}case"Split":case"SplitV":{const r=I("axis",n,e,t),o=I("numOrSizeSplits",n,e,t),i=I("x",n,e,t);return s.split(i,o,r)}case"ScatterNd":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("shape",n,e,t);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=I("sparseIndices",n,e,t),o=I("outputShape",n,e,t),i=I("sparseValues",n,e,t),a=I("defaultValue",n,e,t);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}case"TensorScatterUpdate":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("tensor",n,e,t);return[s.tensorScatterUpdate(i,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$5");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RZ=u((n,e,t,s=En)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$4");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ=u((n,e,t,s=En)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,e,t))];case"IFFT":return[s.ifft(I("x",n,e,t))];case"RFFT":return[s.rfft(I("x",n,e,t))];case"IRFFT":return[s.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$3");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DZ=u((n,e,t,s=En)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(I("input",n,e,t),I("pattern",n,e,t),I("rewrite",n,e,t),I("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$2");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ=u((n,e,t,s=En)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const r=I("axis",n,e,t);return[s.expandDims(I("x",n,e,t),r)]}case"Squeeze":{const r=I("axis",n,e,t);return[s.squeeze(I("x",n,e,t),r)]}case"Reshape":return[s.reshape(I("x",n,e,t),I("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const r=I("blockShape",n,e,t),o=I("paddings",n,e,t);return[s.spaceToBatchND(I("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=I("blockShape",n,e,t),o=I("crops",n,e,t);return[s.batchToSpaceND(I("x",n,e,t),r,o)]}case"DepthToSpace":{const r=I("blockSize",n,e,t),o=I("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(I("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},"executeOp$1");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n,e,t,s,r=H){const o=((i,a,c)=>{switch(i.category){case"arithmetic":return r(()=>uZ(i,a,c));case"basic_math":return r(()=>lZ(i,a,c));case"control":return gZ(i,a,c);case"convolution":return r(()=>yZ(i,a,c));case"creation":return r(()=>bZ(i,a,c));case"dynamic":return xZ(i,a,c);case"evaluation":return r(()=>wZ(i,a,c));case"image":return r(()=>IZ(i,a,c));case"graph":return r(()=>SZ(i,a,c));case"logical":return r(()=>kZ(i,a,c));case"matrices":return r(()=>$Z(i,a,c));case"normalization":return r(()=>NZ(i,a,c));case"ragged":return r(()=>TZ(i,a,c));case"reduction":return r(()=>EZ(i,a,c));case"slice_join":return r(()=>_Z(i,a,c));case"sparse":return r(()=>RZ(i,a,c));case"spectral":return r(()=>AZ(i,a,c));case"string":return r(()=>DZ(i,a,c));case"transformation":return r(()=>OZ(i,a,c));case"hash_table":return vZ(i,a,c,s);case"custom":const l=yA(i.op);if(l&&l.customExecutor)return l.customExecutor(new cZ(i,a,c));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Qi(o)?o.then(i=>[].concat(i)):[].concat(o)}u(lI,"executeOp");class dI{static{u(this,"ExecutionContext")}constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n,e,t,s){const r=new Set,o=[];let i=null,a=null;const c=new Set,l=new Set(Object.keys(n).map(p=>ds(p)[0]));s=s||[];const d=new Set(s.map(p=>ds(p.name)[0])),h=[...e];for(;h.length>0;){const p=h.pop();if((_i(p)||VZ(p)||UZ(p))&&i==null&&(i=p,a=i.children.map(f=>f.name).filter(f=>r.has(f))),r.add(p.name),t[p.name]==null&&!l.has(p.name)&&!d.has(p.name)){if(p.inputs.length===0){o.push(p.name);continue}p.inputs.forEach(f=>{c.has(f.name)||(c.add(f.name),h.push(f))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}u(hI,"getExecutionSubgraph");function FZ(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(y=>ds(y)[0]).map(y=>n.nodes[y]),o=n.initNodes||[],i=u(y=>t.has(typeof y=="string"?y:y.name),"isUsed");function a(y){return[...new Map(y.map(b=>[b.name,b])).values()]}u(a,"unique");const c=a([...r,...n.weights,...o]).filter(i),l=a([...c,...Object.values(n.nodes)]).filter(i),d=new Map(l.map(y=>[y.name,y])),h={};for(const y of l){h[y.name]=h[y.name]||0;for(const b of y.children)i(b)||(h[b.name]=Number.POSITIVE_INFINITY),h[b.name]=(h[b.name]||0)+1}const p=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),f=[...p];for(;p.length>0;){const y=p.pop(),b=d.get(y);for(const x of b.children.filter(i))--h[x.name]===0&&(f.push(x.name),p.push(x.name))}const m=f.map(y=>d.get(y)),g=PZ(m,c);return LZ(g,c),g}u(FZ,"getNodesInTopologicalOrder");function PZ(n,e){const t=new Map(n.map(i=>[i.name,i])),s=e.map(i=>i.name),r=new Set(s);for(;s.length>0;){const i=s.pop(),a=t.get(i);for(const c of a.children)!t.has(c.name)||r.has(c.name)||(r.add(c.name),s.push(c.name))}return n.filter(i=>r.has(i.name))}u(PZ,"filterPredefinedReachableNodes");class pp extends Error{static{u(this,"NodesExecutionOrderError")}constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function LZ(n,e){const t=new Map(n.map((a,c)=>[a.name,c])),s=new Set(e.map(a=>a.name)),r=u(a=>s.has(typeof a=="string"?a:a.name),"isPredefined"),o=new Set(n.map(a=>a.name)),i=u(a=>o.has(typeof a=="string"?a:a.name),"willBeExecuted");for(const a of n){for(const c of a.children.filter(i)){if(!t.has(c.name))throw new pp(`Child ${c.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(c.name))throw new pp(`Node ${a.name} is scheduled to run after its child ${c.name}.`)}if(!r(a))for(const c of a.inputs){if(!t.has(c.name))throw new pp(`Input ${c.name} of node ${a.name} is unreachable.`);if(t.get(c.name)>t.get(a.name))throw new pp(`Node ${a.name} is scheduled to run before its input ${c.name}.`)}}}u(LZ,"validateNodesExecutionOrder");function MZ(n){const e=new Map(n.map((a,c)=>[a.name,c])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,c)=>_i(a)?t:c),r=u(a=>{const c=s[e.get(a.name)];return c??-1},"getSelfLifeSpan"),o=n.map((a,c)=>a.children.map(r).reduce((l,d)=>Math.max(l,d),s[c])),i=new Map;for(let a=0;a<n.length;++a){const c=o[a];if(c===t)continue;const l=n[a],d=n[c];i.has(d.name)||i.set(d.name,[]),i.get(d.name).push(l)}return i}u(MZ,"getNodeLiveUntilMap");const zZ=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),BZ=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),WZ=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function _i(n){return zZ.has(n.op)}u(_i,"isControlFlow");function VZ(n){return BZ.has(n.op)}u(VZ,"isDynamicShape");function UZ(n){return WZ.has(n.op)}u(UZ,"isHashTable");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ff{static{u(this,"GraphExecutor")}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Ff(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=hI(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const l=t.map(h=>h.name),d=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${d}]. Missing the following inputs: [${r}]`)}const a=FZ(this.graph,s),c=MZ(a);return{orderedNodes:a,nodeLiveUntilMap:c}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return bn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(p=>this.graph.nodes[ds(p)[0]]),o=t.map(p=>ds(p)[0]),i=new Set(o);let a=o.map(p=>this.graph.nodes[p]);a.length===0&&(a=this._outputs);const c=this.getCompilationKey(r,a);let l=this.compiledMap.get(c);l==null&&(l=this.compile(e,a),this.compiledMap.set(c,l));try{this.keepIntermediateTensors=j().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,p.message}const d={},h={};return H(()=>{const p=new dI(this.weightMap,d,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(b=>{const[x,S]=ds(b,p),w=[];w[S]=e[b],f[x]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(w))});const m=this.getFrozenTensorIds(f),{orderedNodes:g,nodeLiveUntilMap:y}=l;for(const b of g){if(f[b.name])continue;const x=lI(b,f,p,this._resourceManager);if(Qi(x))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);f[b.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,f,p,m,i,y.get(b.name))}return this.parent==null&&p.dispose(m),t.map(b=>In(b,f,p))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,a){if(!(_i(t)||i.has(e))){for(const c of s[e])c!=null&&(a[c.id]=(a[c.id]||0)+t.children.length);for(const c of t.inputs){if(_i(c))continue;const l=oI(c.name,s,r);if(l!=null)for(const d of l){if(!d||d.kept||o.has(d.id))continue;const h=a[d.id];h===1?(d.dispose(),delete a[d.id]):h!=null&&a[d.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,i){function a(c){return _i(c)||o.has(c.name)}if(u(a,"isNonDisposableNode"),!(_i(e)||i==null))for(const c of i){if(a(c))continue;const l=oI(c.name,t,s);for(const d of l)!d||d.kept||r.has(d.id)||d.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=j().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,p.message}const i=new dI(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,s),c=t.map(p=>In(p,a,i)),l=c.map(p=>p.id),d=Object.keys(e).map(p=>e[p].id),h=new Set([...l,...d,...this.weightIds]);return Object.values(a).forEach(p=>{p.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&i.dispose(h),c}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(w=>this.graph.nodes[ds(w)[0]]),a=s.map(w=>ds(w)[0]),c=new Set(a);let l=a.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);const{usedNodes:d,missingInputs:h,dynamicNode:p,syncInputs:f}=hI(e,l,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[C,v]=ds(w),k=[];k[v]=e[w],g[C]=k});const y={},b=this.getFrozenTensorIds(g),x={};for(;m.length>0;){const w=this.processStack(i,m,t,g,x,b,c,y,d);await Promise.all(w)}p==null;const S=l.filter(w=>!_i(w)&&!In(w.name,g,t)).map(w=>w.name);if(S.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${S}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${w}`)}return g}processStack(e,t,s,r,o,i,a,c,l){const d=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let p="";if(h.node.op==="Enter"&&I("isConstant",h.node,r,s)&&([p]=so(h.node.name,s)),r[h.node.name]==null){const f=lI(h.node,r,s,this._resourceManager);p||([p]=so(h.node.name,s));const m=s.currentContext;Qi(f)?d.push(f.then(g=>(r[p]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(g)),s.currentContext=m,this.checkTensorForDisposal(p,h.node,r,s,i,a,c),this.processChildNodes(h.node,t,s,r,o,l),g))):(r[p]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(f)),this.checkTensorForDisposal(p,h.node,r,s,i,a,c),this.processChildNodes(h.node,t,s,r,o,l))}else this.processChildNodes(h.node,t,s,r,o,l)}return d}processChildNodes(e,t,s,r,o,i){e.children.forEach(a=>{const[c]=so(a.name,s);o[c]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!In(l,r,s))&&(o[c]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(l=>!!In(l,r,s))&&(o[c]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=ds(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((c,l)=>i[l]===-1||i[l]===c);N(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&N(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=ds(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=ds(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class GZ{static{u(this,"ResourceManager")}constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HZ="?tfjs-format=file",jZ="model.json";class qZ{static{u(this,"GraphModel")}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=SE){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new GZ}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Qi(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await GN(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Ff(iI.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=iI.Instance.transformGraph(e.modelInitializer);this.initializer=new Ff(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Mt?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Mt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,c,l;const d=(l=(c=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||c===void 0?void 0:c[i])===null||l===void 0?void 0:l.resourceId;return d!=null?o[i]=this.resourceIdToCapturedInput[d]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&We(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function KZ(n,e={},t=SE){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=XZ(n));const s=new qZ(n,e,t);return await s.load(),s}u(KZ,"loadGraphModel");function XZ(n){return n.endsWith("/")||(n=n+"/"),`${n}${jZ}${HZ}`}u(XZ,"getTFHubUrl");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var pI;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(pI||(pI={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&N(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}u(be,"assertNotComplex$2");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YZ=oS;class xy extends gm{static{u(this,"MathBackendCPU")}nextDataId(){return xy.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new sw(this,ks())}write(e,t,s){this.firstUse&&(this.firstUse=!1,j().get("IS_NODE")&&Ts(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Uc(s[0])){const o=s.map(i=>lo(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return xr(r,o)}return Lp(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>yr(r));return Oe(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,t)}makeOutput(e,t,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Kn();return e(),{kernelMs:Kn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");const t=this.readSync(e.dataId);return YZ(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}xy.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}u(wA,"simpleAbsImpl");const QZ=u(n=>{const{x:e}=n.inputs,t=n.backend;be(e,"abs");let s=new Float32Array(U(e.shape));const r=t.data.get(e.dataId).values;return s=wA(r),t.makeOutput(s,e.shape,e.dtype)},"abs$2"),JZ={kernelName:yd,backendName:"cpu",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(n){return(e,t,s,r,o)=>{const i=Ne(e,t),a=i.length,c=we(i),l=U(i),d=ln(o,l),h=e.length,p=t.length,f=we(e),m=we(t),g=Zo(e,i),y=Zo(t,i);if(g.length+y.length===0)for(let b=0;b<d.length;++b)d[b]=n(s[b%s.length],r[b%r.length]);else for(let b=0;b<d.length;++b){const x=Gc(b,a,c),S=x.slice(-h);g.forEach(k=>S[k]=0);const w=zr(S,h,f),C=x.slice(-p);y.forEach(k=>C[k]=0);const v=zr(C,p,m);d[b]=n(s[w],r[v])}return[d,i]}}u(Jt,"createSimpleBinaryKernelImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hs(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),c=t.data.get(a.dataId);return c.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},a}u(hs,"complex$2");const ZZ={kernelName:Im,backendName:"cpu",kernelFunc:hs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pf(n,e,t="float32"){if(t==="complex64"){const r=Pf(n,e,"float32"),o=Pf(n,e,"float32");return hs({inputs:{real:r,imag:o},backend:n})}const s=Nn(U(e),t);return n.makeTensorInfo(e,t,s)}u(Pf,"zeros");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}u(Hr,"identity$2");const eee={kernelName:du,backendName:"cpu",kernelFunc:Hr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}u(ca,"real$2");const tee={kernelName:Jm,backendName:"cpu",kernelFunc:ca};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=xa([0],t),[o,i]=Jt((a,c)=>a!==c?1:0)(e,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}u(SA,"castImpl");function ri(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Hr({inputs:{x:r},backend:t});const d=Pf(t,r.shape,r.dtype),h=ri({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),p=hs({inputs:{real:h,imag:d},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),p}if(r.dtype==="complex64"){const d=ca({inputs:{input:r},backend:t}),h=ri({inputs:{x:d},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(d),h}if(!iw(r.dtype,o)){const d=Hr({inputs:{x:r},backend:t});return{dataId:d.dataId,shape:d.shape,dtype:o}}const i=t.data.get(r.dataId).values,[a,c,l]=SA(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,c,l)}u(ri,"cast$2");const nee={kernelName:Jc,backendName:"cpu",kernelFunc:ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,c=o;be([i,a],n);const l=c.data.get(i.dataId).values,d=c.data.get(a.dataId).values,h=i.dtype==="string"?wr(l):l,p=i.dtype==="string"?wr(d):d,f=s||i.dtype,[m,g]=e(i.shape,a.shape,h,p,f);return c.makeTensorInfo(g,f,m)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,c=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const l=ri({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,g=ri({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),y=c.data.get(g.dataId),b=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,S=c.data.get(b.dataId).values,w=c.data.get(x.dataId).values,[C,v,k]=t(i.shape,a.shape,f,m,S,w),$=c.makeTensorInfo(k,"float32",C),T=c.makeTensorInfo(k,"float32",v),E=hs({inputs:{real:$,imag:T},backend:c});return c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo($),c.disposeIntermediateTensorInfo(T),E}else{const l=c.data.get(i.dataId).values,d=c.data.get(a.dataId).values,h=s||i.dtype,[p,f]=e(i.shape,a.shape,l,d,h);return c.makeTensorInfo(f,h,p)}}}u(pn,"binaryKernelFunc$2");function WS(n){return(e,t,s,r,o,i)=>{const a=Ne(e,t),c=U(a),l=a.length,d=we(a),h=ln("float32",c),p=ln("float32",c),f=Zo(e,a),m=Zo(t,a),g=xr(s,r),y=xr(o,i),b=e.length,x=we(e),S=t.length,w=we(t);if(f.length+m.length===0)for(let C=0;C<h.length;C++){const v=C%g.length,k=C%y.length,$=n(g[v*2],g[v*2+1],y[k*2],y[k*2+1]);h[C]=$.real,p[C]=$.imag}else for(let C=0;C<h.length;C++){const v=Gc(C,l,d),k=v.slice(-b);f.forEach(O=>k[O]=0);const $=zr(k,b,x),T=v.slice(-S);m.forEach(O=>T[O]=0);const E=zr(T,S,w),R=n(g[$*2],g[$*2+1],y[E*2],y[E*2+1]);h[C]=R.real,p[C]=R.imag}return[h,p,a]}}u(WS,"createComplexBinaryKernelImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CA=Jt((n,e)=>n+e),see=WS((n,e,t,s)=>({real:n+t,imag:e+s})),Nc=pn(ya,CA,see),ree={kernelName:ya,backendName:"cpu",kernelFunc:Nc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,e,t,s,r){const o=U(s),i=Nn(r,t);for(let a=0;a<n.length;a++){const c=n[a];if(c<0)throw new Error("Input x must be non-negative!");c>=r||(o>0?i[c]+=e[a]:i[c]+=1)}return i}u(VS,"bincountImpl");function vA(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=Oe([r,t],e.dtype);for(let a=0;a<r;a++)for(let c=0;c<o;c++){const l=n.get(a,c);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(s?i.set(1,a,l):e.size>0?i.set(i.get(a,l)+e.get(a,c),a,l):i.set(i.get(a,l)+1,a,l))}return i}u(vA,"bincountReduceImpl");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IA=Jt((n,e)=>n&e),oee=pn(Cm,IA),iee={kernelName:Cm,backendName:"cpu",kernelFunc:oee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(n){return(e,t,s)=>{const r=Ht(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}u(Qr,"createSimpleUnaryImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(n,e,t){const s=Qr(e);return bi(n,s,t)}u(yt,"unaryKernelFunc$2");function bi(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;be(i,n);const a=o,c=a.data.get(i.dataId).values;let l;if(i.dtype==="string"){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");l=wr(c)}else l=c;const d=t||i.dtype,h=e(l,d,r);return a.makeTensorInfo(i.shape,d,h)}}u(bi,"unaryKernelFuncFromImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kA=Qr(n=>Math.ceil(n)),aee=bi(Zc,kA),cee={kernelName:Zc,backendName:"cpu",kernelFunc:aee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,e,t,s){const r=Ht(t,U(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const a=U(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?wr(i.vals):i.vals;let c=0;for(let l=0;l<i.shape[0];++l){const d=l*e[1]+o;for(let h=0;h<i.shape[1];++h)r[d+h]=a[c++]}o+=i.shape[1]})}return r}u($A,"concatImpl$2");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NA=Jt((n,e)=>n===e?1:0),TA=pn(Dd,NA,null,"bool"),uee={kernelName:Dd,backendName:"cpu",kernelFunc:TA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EA=Qr(n=>Math.exp(n)),_A=bi(iu,EA,"float32"),lee={kernelName:iu,backendName:"cpu",kernelFunc:_A};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RA=Qr(n=>Math.expm1(n)),dee=bi(au,RA),hee={kernelName:au,backendName:"cpu",kernelFunc:dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AA=Qr(n=>Math.floor(n)),pee=bi(cu,AA),fee={kernelName:cu,backendName:"cpu",kernelFunc:pee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA=Jt((n,e)=>Math.floor(n/e)),mee=pn(uu,DA,null,"int32"),gee={kernelName:uu,backendName:"cpu",kernelFunc:mee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,e,t,s,r,o,i,a,c){const l=Oe([s,o],t);for(let d=0;d<s;d++){const h=[];let p=0;for(let f=0;f<r;f++){const m=n[d*r+f];p+=m*i[f],h.push(m)}if(p<0||p>=c/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<o;f++)l.values[d*o+f]=e.get(...e.indexToLoc(p*o+f))}return l}u(OA,"gatherNdImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e,t){const s=Oe(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],c=i[2],l=e.locToIndex([a,c]);i[2]=e.values[l];const d=n.locToIndex(i);0<=d&&d<n.values.length&&(s.values[r]=n.values[d])}return s}u(FA,"gatherV2Impl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA=Jt((n,e)=>n>e?1:0),yee=pn(Ld,PA,null,"bool"),bee={kernelName:Ld,backendName:"cpu",kernelFunc:yee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA=Jt((n,e)=>n>=e?1:0),xee=pn(lu,LA,null,"bool"),wee={kernelName:lu,backendName:"cpu",kernelFunc:xee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MA=Jt((n,e)=>n<e?1:0),See=pn(zd,MA,null,"bool"),Cee={kernelName:zd,backendName:"cpu",kernelFunc:See};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA=Jt((n,e)=>n<=e?1:0),vee=pn(Bd,zA,null,"bool"),Iee={kernelName:Bd,backendName:"cpu",kernelFunc:vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,e,t){const s=(e-n)/(t-1),r=Nn(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}u(BA,"linSpaceImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA=Qr(n=>Math.log(n)),kee=bi(mu,WA),$ee={kernelName:mu,backendName:"cpu",kernelFunc:kee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,e,t,s){const r=ln(s,U(t));for(let o=0;o<r.length;++o){const i=o*e;let a=n[i];for(let c=0;c<e;++c){const l=n[i+c];(Number.isNaN(l)||l>a)&&(a=l)}r[o]=a}return r}u(VA,"maxImpl$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA=Jt((n,e)=>Math.max(n,e)),Nee=pn(yu,UA),Tee={kernelName:yu,backendName:"cpu",kernelFunc:Nee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA=Jt((n,e)=>Math.min(n,e)),Eee=pn(bu,GA),_ee={kernelName:bu,backendName:"cpu",kernelFunc:Eee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US=Jt((n,e)=>n*e),Ree=WS((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),wy=pn(wu,US,Ree),Aee={kernelName:wu,backendName:"cpu",kernelFunc:wy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,e,t){const s=li(-1,t);return US([],e,s,n,t)}u(HA,"negImpl");function Dee(n){const{inputs:e,backend:t}=n,{x:s}=e;be(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=HA(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}u(Dee,"neg$2");const Oee={kernelName:Qd,backendName:"cpu",kernelFunc:Dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA=Jt((n,e)=>n!==e?1:0),Fee=pn(Jd,jA,null,"bool"),Pee={kernelName:Jd,backendName:"cpu",kernelFunc:Fee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n,e,t,s,r){const o=e.length,i=U(e),a=we(e),c=we(r),l=ln(t,U(r));for(let d=0;d<i;++d){const h=Gc(d,o,a),p=new Array(h.length);for(let m=0;m<p.length;m++)p[m]=h[s[m]];const f=zr(p,o,c);l[f]=n[d]}return l}u(GS,"transposeImpl$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;be(r,"transpose");const i=r.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const c=s.data.get(r.dataId).values,l=GS(c,r.shape,r.dtype,o,a);return{dataId:s.write(l,a,r.dtype),shape:a,dtype:r.dtype}}u(is,"transpose$2");const Lee={kernelName:Ui,backendName:"cpu",kernelFunc:is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e,t,s){const[r,o]=Yt(n,s),i=wn(e,"int32"),a=Nn(U(r),i),c=U(o);for(let l=0;l<a.length;++l){const d=l*c;let h=1;for(let p=0;p<c;++p)h*=t[d+p];a[l]=h}return{outVals:a,outShape:r,outDtype:i}}u(qA,"prodImpl");function Mee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;be(r,"prod");const a=r.shape.length,c=Pe(o,r.shape),l=xt(c,a);let d=c,h=r;const p=[];l!=null&&(h=is({inputs:{x:r},backend:t,attrs:{perm:l}}),p.push(h),d=$t(d.length,a));const f=t.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=qA(h.shape,h.dtype,f,d);let b=g;return i&&(b=qt(g,c)),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(b,y,m)}u(Mee,"prod$2");const zee={kernelName:rh,backendName:"cpu",kernelFunc:Mee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bee(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Gc(r,e.length,we(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}u(Bee,"validateIndices");function Wee(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}u(Wee,"validateSplits");function Vee(n,e,t,s){const r=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);Wee(t,s);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const d=e[l+1];for(let h=1;h<c+1;++h)a[l].push(h*d)}for(let l=0;l<n.length;++l){let d=n[l],h=n[l]+1;for(let p=0;p<t.length;++p){const f=t[p],m=p+e.length-1;if(m>=0){const g=a[m],y=g[g.length-1]-f[d];for(let b=d;b<h;++b)a[m].push(f[b+1]+y)}d=f[d],h=f[h]}h!==d&&(r.push([d,h]),o+=h-d)}return{outSplits:a,valueSlices:r,numValues:o}}u(Vee,"makeSplits");function Uee(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Ht("int32",s);e.push(r),n[t].forEach((o,i)=>r[i]=o)}return e}u(Uee,"getSplits");function fI(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}u(fI,"computeFlatOuterDims");function Gee(n,e,t,s,r,o){const i=fI(e,2)[1],a=fI(o,2)[1];let c=0;for(const l of t)for(let d=l[0];d<l[1];++d){for(let h=0;h<s;++h)r[c*a+h]=n[d*i+h];++c}}u(Gee,"writeValueSlices");function Hee(n,e,t,s,r){const o=e.slice();o[0]=r;const i=Ht(t,U(o)),a=n.length,c=a===0?0:a/e[0];return Gee(n,e,s,c,i,o),[i,o]}u(Hee,"getValues");function KA(n,e,t,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(Bee(o,i,c),s.length===0)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:d,valueSlices:h,numValues:p}=Vee(o,i,n,l),f=Uee(d),m=Hee(t,s,r,h,p);return[f,m[0],m[1]]}u(KA,"raggedGatherImpl");/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI=2147483647;function XA(n,e,t,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,c=r.length===0,l=i.length===0,d=[];a||d.push(e[0]),c||d.push(r[0]),l||d.push(i[0]);for(let y=1;y<d.length;++y)if(d[y]!==d[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=d.length===0?1:d[0],p=Ht("int32",h+1);p[0]=0;for(let y=0;y<h;++y){const b=a?n[0]:n[y],x=c?s[0]:s[y],S=l?o[0]:o[y];if(S===0)throw new Error("Requires delta != 0");let w;if(S>0&&x<b||S<0&&x>b)w=0;else if(w=Math.ceil(Math.abs((x-b)/S)),w>mI)throw new Error(`Requires ((limit - start) / delta) <= ${mI}`);p[y+1]=p[y]+w}const f=p[h],m=Ht(t,f);let g=0;for(let y=0;y<h;++y){const b=p[y+1]-p[y];let x=a?n[0]:n[y];const S=l?o[0]:o[y];for(let w=0;w<b;++w)m[g++]=x,x+=S}return[p,m]}u(XA,"raggedRangeImpl");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zs=fr;class Lf{static{u(this,"RaggedTensorToTensorOp")}constructor(e,t,s,r,o,i,a,c,l,d){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=AE(d),this.raggedRank=DE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===zs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===zs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case zs.VALUE_ROWIDS:return Lf.getMaxWidthValueRowID(t);case zs.ROW_SPLITS:return Lf.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${zs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return yI(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;OE(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=RE(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=t)o.push(i);for(let a=r;a<e;++a)o.push(-1);return N(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const c=e[a+1]-e[a];let l=Math.min(r,c),d=t[a];d===-1&&(l=0);for(let h=0;h<l;++h)i.push(d),d+=s;for(let h=0;h<c-l;++h)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let l=t[c];i.push(l);for(let d=1;d<o;++d){const h=e[d];if(h===c)l>=0&&(++a,a<r?l+=s:l=-1);else{if(a=0,c=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);l=t[h]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case zs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case zs.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${zs[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case zs.FIRST_DIM_SIZE:return e[0];case zs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case zs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${zs[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let c=r.length-2;c>=0;--c)r[c]=r[c+1]*s[c+1];const o=yI(s,!1),i=Ht(this.valuesDType,U(o));if(r[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let l=1;l<=this.raggedRank;++l)c=this.calculateOutputIndex(l-1,c,r[l],s[l]);this.setOutput(this.raggedRank,c,i,o)}return[o,i]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const c=U(a),l=t.length;let d=this.defaultValue;if(d.length!==c&&d.length!==1){const m=this.defaultValueShape;H(()=>{const g=M(d,m);d=ac(g,a).dataSync()})}let h=0,p=0,f=0;for(let m=0;m<=l;++m){let g=m<l?t[m]:-1;if(g===f){++f;continue}if(p<f){const y=o.subarray(h*c),b=i.subarray(p*c),x=(f-p)*c;gI(b,y,x)}if(m>=l){const y=s.length;g=Math.floor(y/c)}if(g>f)if(this.defaultValue.length===1)i.subarray(f*c,g*c).fill(this.defaultValue[0]),f=g;else for(;g>f;){const y=i.slice(f*c);gI(y,d,c),++f}g<0?(h=m+1,p=f):(h=m,p=f,f=p+1)}}}function gI(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}u(gI,"copyArray");function yI(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}u(yI,"makeShape");function YA(n,e,t,s,r,o,i,a,c,l){return new Lf(n,e,t,s,r,o,i,a,c,l).compute()}u(YA,"raggedTensorToTensorImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return Nn(0,s);const a=Math.abs(Math.ceil((e-n)/t)),c=Nn(a,s);e<n&&t===1&&(t=-1),c[0]=n;for(let l=1;l<c.length;l++)c[l]=c[l-1]+t;return c}u(QA,"rangeImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA=Qr(n=>1/Math.sqrt(n)),jee=bi($u,JA),qee={kernelName:$u,backendName:"cpu",kernelFunc:jee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mi(n,e,t,s,r,o,i,a,c,l){const d=[s/r,r],h=n.values,p=e.values;if(s===0)return Oe(t,e.dtype);const f=c instanceof on?c:Oe(d,e.dtype);typeof c=="string"||typeof c=="number"?f.values.fill(c):typeof c=="boolean"&&f.values.fill(+c);for(let m=0;m<o;m++){const g=[];let y=0;for(let b=0;b<i;b++){const x=h[m*i+b];g.push(x),y+=x*a[b]}if(y<0||y>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let b=0;b<r;b++)l?f.values[y*r+b]+=p[m*r+b]:f.values[y*r+b]=e.rank===0?p[0]:p[m*r+b]}return f}u(Mi,"scatterImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kee=Qr(n=>1/(1+Math.exp(-n))),ZA=yt(Ru,n=>1/(1+Math.exp(-n))),Xee={kernelName:Ru,backendName:"cpu",kernelFunc:ZA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n,e,t,s,r){const o=pS(s,e,t),i=U(t),a=we(s);if(o){const h=fS(e,a);return r==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const c=r==="string"?wr(n):n,l=Oe(s,r,c),d=Oe(t,r);for(let h=0;h<d.size;++h){const p=d.indexToLoc(h),f=p.map((m,g)=>m+e[g]);d.set(l.get(...f),...p)}return r==="string"?ZE(d.values):d.values}u(eD,"sliceImpl");function ua(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;be(r,"slice");const[a,c]=Ih(r,o,i);Vg(r,a,c);const l=t.data.get(r.dataId).values,d=eD(l,a,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,d)}u(ua,"slice$2");const Yee={kernelName:lh,backendName:"cpu",kernelFunc:ua};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e,t,s,r,o,i){const a=e[0],c=o[0],l=new Array(c),d=new Array(a),h=e[1];if(c===0){if(a!==0)throw new Error(WE(a));const y=Ht(t,0),b=Ht(r,0);return[y,[0,h],b,l,d]}let p=!0,f=0;const m=new Array(c).fill(0);for(let y=0;y<a;++y){const b=n[y*h];if(b<0)throw new Error(VE(y,b));if(b>=c)throw new Error(UE(y,b,c));++m[b],p=p&&b>=f,f=b}let g=!0;for(let y=0;y<c;++y){const b=m[y]===0;l[y]=b,g=g&&!b,m[y]=Math.max(m[y],1),y>0&&(m[y]+=m[y-1])}if(g&&p){const y=n,b=s;for(let x=0;x<a;++x)d[x]=x;return[y,[a,h],b,l,d]}else{const y=m[c-1],b=Ht(t,y*h),x=Ht(r,y),S=new Array(c).fill(0);for(let w=0;w<a;++w){const C=n[w*h],v=S[C],k=(C===0?0:m[C-1])+v;S[C]++;for(let $=0;$<h;++$)b[k*h+$]=n[w*h+$];x[k]=s[w],d[w]=k}for(let w=0;w<c;++w)if(S[w]===0){const v=w===0?0:m[w-1];b[v*h+0]=w;for(let k=1;k<h;++k)b[v*h+k]=0;x[v]=i}return[b,[y,h],x,l,d]}}u(tD,"sparseFillEmptyRowsImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,e,t,s,r){const o=U(s),i=e[0],a=r.length,c=[];let l=1,d=-1;for(let y=0;y<a;++y){const b=r[y];if(b===-1){if(d!==-1)throw new Error(GE(d,y));d=y,c.push(1)}else{if(b<0)throw new Error(HE(y,b));l*=b,c.push(b)}}if(d!==-1){if(l<=0)throw new Error(jE());const y=Math.trunc(o/l);if(l*y!==o)throw new Error(qE(s,c));c[d]=y}if(U(c)!==o)throw new Error(KE(s,c));const p=s.length,f=[];if(p>0){f[p-1]=1;for(let y=p-2;y>=0;--y)f[y]=f[y+1]*s[y+1]}const m=[];if(a>0){m[a-1]=1;for(let y=a-2;y>=0;--y)m[y]=m[y+1]*c[y+1]}const g=Ht(t,i*a);for(let y=0;y<i;++y){let b=0;for(let x=0;x<p;++x)b+=n[y*p+x]*f[x];for(let x=0;x<a;++x)g[y*a+x]=Math.trunc(b/m[x]),b%=m[x]}return[g,[i,a],c]}u(nD,"sparseReshapeImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n,e,t,s,r,o=!1,i=0){const a=s.length,c=[e[0],n.length/e[0]],l=c[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(Ex());const p=e.slice();p[0]=h;const f=p.reduce((S,w)=>S*w,1),m=Ht(t,f);if(a===0)return h>0&&m.fill(i),[m,p];if(h<=0)throw new Error(Ex());let g=0,y=1,b=0,x=r[g];for(;;){let S=0;if(y<a){if(S=r[y],x===S){++y;continue}if(x>=S)throw new Error(XE())}if(x<0||x>=h)throw new Error(YE(x,h));x>b&&m.fill(i,b*l,x*l);for(let w=g;w<y;++w){const C=s[w];if(C<0||C>=c[0])throw new Error(QE(w,s[w],c[0]));for(let v=0;v<l;v++)m[x*l+v]+=n[C*l+v]}if(o)for(let w=0;w<l;w++)m[x*l+w]/=y-g;if(g=y,++y,b=x+1,x=S,y>a)break}return b<h&&m.fill(i,b*l,h*l),[m,p]}u(HS,"sparseSegmentReductionImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qee=Qr(n=>Math.sqrt(n)),Jee=yt(Du,n=>Math.sqrt(n)),Zee={kernelName:Du,backendName:"cpu",kernelFunc:Jee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sD=Jt((n,e)=>{const t=n-e;return t*t}),ete=pn(Ou,sD),tte={kernelName:Ou,backendName:"cpu",kernelFunc:ete};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD=Qr((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),nte=bi(cg,rD),ste={kernelName:cg,backendName:"cpu",kernelFunc:nte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e,t,s){const r=Oe(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let c=0;c<a.length;c++)a[c]=i[c]*t[c]+s[c];r.set(e.get(...a),...i)}return r}u(oD,"stridedSliceImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rte{static{u(this,"StringNGramsOp")}constructor(e,t,s,r,o,i){this.separator=lo(e),this.nGramWidths=t,this.leftPad=lo(s),this.rightPad=lo(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,i){for(let a=0;a<o;++a){const c=this.getPadWidth(i),l=Math.max(0,c-a),d=Math.max(0,c-(o-(a+1))),h=i-(l+d),p=t+(l>0?0:a-c);let f=0;f+=l*this.leftPad.length;for(let x=0;x<h;++x)f+=e[p+x].length;f+=d*this.rightPad.length;const m=l+d+h-1;f+=m*this.separator.length,s[r+a]=new Uint8Array(f);const g=s[r+a];let y=0;const b=u(x=>x.forEach(S=>g[y++]=S),"appendToNGram");for(let x=0;x<l;++x)b(this.leftPad),b(this.separator);for(let x=0;x<h-1;++x)b(e[p+x]),b(this.separator);if(h>0){b(e[p+h-1]);for(let x=0;x<d;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<d-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let l=1;l<r;++l){let d=t[l]>=c;if(d=d&&t[l]<=s,!d)throw new Error(`Invalid split value ${t[l]}, must be in [${c}, ${s}]`);c=t[l]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const o=r-1,i=Ht("int32",r);if(s===0||r===0){const c=new Array(s);for(let l=0;l<=o;++l)i[l]=0;return[c,i]}i[0]=0;for(let c=1;c<=o;++c){const l=t[c]-t[c-1];let d=0;this.nGramWidths.forEach(h=>{d+=this.getNumNGrams(l,h)}),this.preserveShort&&l>0&&d===0&&(d=1),i[c]=i[c-1]+d}const a=new Array(i[o]);for(let c=0;c<o;++c){const l=t[c];let d=i[c];if(this.nGramWidths.forEach(h=>{const p=t[c+1]-t[c],f=this.getNumNGrams(p,h);this.createNGrams(e,l,a,d,f,h),d+=f}),this.preserveShort&&d===i[c]){const h=t[c+1]-t[c];if(h===0)continue;const p=h+2*this.padWidth;this.createNGrams(e,l,a,d,1,p)}}return[a,i]}}function iD(n,e,t,s,r,o,i,a){return new rte(t,s,r,o,i,a).compute(n,e)}u(iD,"stringNGramsImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ote(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!t||i.length!==0)&&s.push(i),r=o+1}}u(ote,"split");function aD(n,e,t){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let p=0;p<s;++p){const f=r.length;ote(n[p],e,t,r);const m=r.length-f;a[p]=m,o+=m,i=Math.max(i,m)}const c=Ht("int32",o*2),l=new Array(o),d=[s,i];let h=0;for(let p=0;p<s;++p)for(let f=0;f<a[p];++f)c[h*2]=p,c[h*2+1]=f,l[h]=r[h],++h;return[c,l,d]}u(aD,"stringSplitImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e){const t=Ht("int32",n.length);for(let s=0;s<n.length;++s)t[s]=SH(n[s]).modulo(e).getLowBitsUnsigned();return t}u(cD,"stringToHashBucketFastImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uD=Jt((n,e)=>n-e),ite=WS((n,e,t,s)=>({real:n-t,imag:e-s})),jS=pn(Fu,uD,ite),ate={kernelName:Fu,backendName:"cpu",kernelFunc:jS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=Oe(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let c=0;c<i.length;c++)i[c]=o[c]%n.shape[c];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}u(lD,"tileImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fl=u((n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t},"comparePair");function dD(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,c=e-t+1,l=Math.log(a),d=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*d*(a-d)/a)*Math.sign(c-a/2),p=Math.max(t,Math.floor(e-c*d/a+h)),f=Math.min(s,Math.floor(e+(a-c)*d/a+h));dD(n,e,p,f)}const r=n[e];let o=t,i=s;for(qa(n,t,e),fl(n[s],r)>0&&qa(n,t,s);o<i;){for(qa(n,o,i),o++,i--;fl(n[o],r)<0;)o=o+1;for(;fl(n[i],r)>0;)i=i-1}fl(n[t],r)===0?qa(n,t,i):(i=i+1,qa(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}u(dD,"select$3");function hD(n,e,t,s,r){const o=e[e.length-1],[i,a]=[n.length/o,o],c=ln(t,i*s),l=ln("int32",i*s);for(let h=0;h<i;h++){const p=h*a,f=n.subarray(p,p+a);let m=new Array(f.length);f.forEach((x,S)=>m[S]={value:x,index:S}),s<m.length&&(dD(m,s),m=m.slice(0,s)),r&&m.sort(fl);const g=h*s,y=c.subarray(g,g+s),b=l.subarray(g,g+s);for(let x=0;x<s;x++)y[x]=m[x].value,b[x]=m[x].index}const d=e.slice();return d[d.length-1]=s,[Oe(d,t,c),Oe(d,"int32",l)]}u(hD,"topKImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n,e,t,s){const r=Pe(e,t)[0],o=[1,t[0],1];for(let m=0;m<r;m++)o[0]*=t[m];o[1]=t[r];for(let m=r+1;m<t.length;m++)o[2]*=t[m];const i=new Map,a=new Int32Array(t[r]),c=new on(o,s,n),l=[],d=o[0]===1&&o[2]===1;for(let m=0;m<t[r];m++){let g;if(d)g=n[m].toString();else{const b=[];for(let x=0;x<o[0];x++)for(let S=0;S<o[2];S++)b.push(c.get(x,m,S));g=b.join(",")}const y=i.get(g);if(y!=null)a[m]=y;else{const b=i.size;i.set(g,b),a[m]=b,l.push(m)}}const h=o.slice();h[1]=i.size;const p=new on(h,s);l.forEach((m,g)=>{for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)p.set(c.get(y,m,b),y,g,b)});const f=t.slice();return f[r]=h[1],{outputValues:p.values,outputShape:f,indices:a}}u(pD,"uniqueImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fD=Object.freeze({__proto__:null,addImpl:CA,bincountImpl:VS,bincountReduceImpl:vA,bitwiseAndImpl:IA,castImpl:SA,ceilImpl:kA,concatImpl:$A,equalImpl:NA,expImpl:EA,expm1Impl:RA,floorDivImpl:DA,floorImpl:AA,gatherNdImpl:OA,gatherV2Impl:FA,greaterEqualImpl:LA,greaterImpl:PA,lessEqualImpl:zA,lessImpl:MA,linSpaceImpl:BA,logImpl:WA,maxImpl:VA,maximumImpl:UA,minimumImpl:GA,multiplyImpl:US,negImpl:HA,notEqualImpl:jA,prodImpl:qA,raggedGatherImpl:KA,raggedRangeImpl:XA,raggedTensorToTensorImpl:YA,rangeImpl:QA,rsqrtImpl:JA,scatterImpl:Mi,sigmoidImpl:Kee,simpleAbsImpl:wA,sliceImpl:eD,sparseFillEmptyRowsImpl:tD,sparseReshapeImpl:nD,sparseSegmentReductionImpl:HS,sqrtImpl:Qee,squaredDifferenceImpl:sD,staticRegexReplaceImpl:rD,stridedSliceImpl:oD,stringNGramsImpl:iD,stringSplitImpl:aD,stringToHashBucketFastImpl:cD,subImpl:uD,tileImpl:lD,topKImpl:hD,transposeImpl:GS,uniqueImpl:pD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ww("cpu",()=>new xy,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mD=yt(ru,n=>n>=0?n:Math.exp(n)-1),cte={kernelName:ru,backendName:"cpu",kernelFunc:mD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;be([r],"leakyRelu");const i=U(r.shape),a=t.data.get(r.dataId).values,c=ln("float32",i);for(let l=0;l<a.length;l++)c[l]=a[l]<0?o*a[l]:a[l];return t.makeTensorInfo(r.shape,"float32",c)}u(gD,"leakyRelu$2");const ute={kernelName:Md,backendName:"cpu",kernelFunc:gD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lte=Jt((n,e)=>n<0?e*n:n);function yD(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;be([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[a,c]=lte(s.shape,r.shape,o,i,"float32");return t.makeTensorInfo(c,"float32",a)}u(yD,"prelu$2");const dte={kernelName:sh,backendName:"cpu",kernelFunc:yD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bD=yt(vu,n=>Math.max(0,n)),hte={kernelName:vu,backendName:"cpu",kernelFunc:bD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xD=yt(Iu,n=>Math.min(Math.max(0,n),6)),pte={kernelName:Iu,backendName:"cpu",kernelFunc:xD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n,e,t,s,r){if(t==="linear")return Hr({inputs:{x:e},backend:n});if(t==="relu")return bD({inputs:{x:e},backend:n});if(t==="elu")return mD({inputs:{x:e},backend:n});if(t==="relu6")return xD({inputs:{x:e},backend:n});if(t==="prelu")return yD({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return gD({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return ZA({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}u(Mf,"applyActivation");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=U(r.shape),a=ow(o,i),c=U(a);N(i===c,()=>`The new shape (${a}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const l=t.data.get(r.dataId);if(l.complexTensorInfos!=null){const d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag;d.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}u(It,"reshape$2");const fte={kernelName:oh,backendName:"cpu",kernelFunc:It};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;be([r,o],"matMul");const c=r.shape.length,l=o.shape.length,d=i?r.shape[c-2]:r.shape[c-1],h=a?o.shape[l-1]:o.shape[l-2],p=i?r.shape[c-1]:r.shape[c-2],f=a?o.shape[l-2]:o.shape[l-1],m=r.shape.slice(0,-2),g=o.shape.slice(0,-2),y=U(m),b=U(g),S=Ne(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);N(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const w=i?[y,d,p]:[y,p,d],C=a?[b,f,h]:[b,h,f],v=It({inputs:{x:r},backend:t,attrs:{shape:w}}),k=It({inputs:{x:o},backend:t,attrs:{shape:C}}),$=i?v.shape[1]:v.shape[2],T=i?v.shape[2]:v.shape[1],E=a?k.shape[1]:k.shape[2],R=Math.max(y,b),O=t.data.get(v.dataId).values,L=t.data.get(k.dataId).values,z=we(v.shape),W=we(k.shape),[A,G,V]=i?[z[0],1,z[1]]:[z[0],z[1],1],[q,Y,Q]=a?[1,W[1],W[0]]:[W[1],1,W[0]],ne=T*E,X=Oe([R,T,E],v.dtype),Z=X.values,se=t.blockSize;for(let de=0;de<R;de++){const me=de%y,Ie=de%b;for(let Ce=0;Ce<T;Ce+=se){const ke=Math.min(Ce+se,T);for(let Ae=0;Ae<E;Ae+=se){const Be=Math.min(Ae+se,E);for(let ct=0;ct<$;ct+=se){const st=Math.min(ct+se,$);for(let Xe=Ce;Xe<ke;Xe++)for(let rt=Ae;rt<Be;rt++){let mt=0;for(let ft=ct;ft<st;ft++){const Cn=O[me*A+Xe*G+ft*V],$e=L[ft*q+rt*Y+Ie*Q];mt+=Cn*$e}Z[de*ne+(Xe*E+rt)]+=mt}}}}}return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(k),t.makeTensorInfo(S,X.dtype,X.values)}u(wD,"batchMatMul$2");const mte={kernelName:vd,backendName:"cpu",kernelFunc:wD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gte(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:c,transposeB:l,activation:d,leakyreluAlpha:h}=s;let p,f,m;const g=[];p=wD({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:l},backend:t}),i&&(f=Nc({inputs:{a:p,b:i},backend:t}),g.push(p),p=f),d&&(m=Mf(t,p,d,a,h),g.push(p),p=m);for(const b of g)t.disposeIntermediateTensorInfo(b);return p}u(gte,"_fusedMatMul$2");const yte={kernelName:Ll,backendName:"cpu",kernelFunc:gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bte=yt(Hc,n=>Math.acos(n)),xte={kernelName:Hc,backendName:"cpu",kernelFunc:bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wte=yt(jc,n=>Math.acosh(n)),Ste={kernelName:jc,backendName:"cpu",kernelFunc:wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cte(n){const{inputs:e,backend:t}=n,s=e;be(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),o=Oe(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const c=r[a];for(let l=0;l<i.length;l++)i[l]+=c[l]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}u(Cte,"addN$2");const vte={kernelName:bd,backendName:"cpu",kernelFunc:Cte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ite(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;be(r,"all");const a=Pe(o,r.shape);let c=a;const l=xt(c,r.shape.length);let d=r;l!=null&&(d=is({inputs:{x:r},backend:t,attrs:{perm:l}}),c=$t(c.length,r.shape.length)),tn("all",c,d.shape.length);const[h,p]=Yt(d.shape,c),f=U(p),m=Nn(U(h),d.dtype),g=t.data.get(d.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let S=g[x];for(let w=0;w<f;++w){const C=g[x+w];S=S&&C}m[b]=S}l!=null&&t.disposeIntermediateTensorInfo(d);const y=t.makeTensorInfo(h,d.dtype,m);if(i){const b=qt(h,a),x=It({inputs:{x:y},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(y),x}return y}u(Ite,"all$2");const kte={kernelName:ym,backendName:"cpu",kernelFunc:Ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $te(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;be(r,"any");const a=Pe(o,r.shape);let c=a;const l=xt(c,r.shape.length);let d=r;l!=null&&(d=is({inputs:{x:r},backend:t,attrs:{perm:l}}),c=$t(c.length,r.shape.length)),tn("any",c,d.shape.length);const[h,p]=Yt(d.shape,c),f=U(p),m=Nn(U(h),d.dtype),g=t.data.get(d.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let S=g[x];for(let w=0;w<f;++w){const C=g[x+w];S=S||C}m[b]=S}l!=null&&t.disposeIntermediateTensorInfo(d);const y=t.makeTensorInfo(h,d.dtype,m);if(i){const b=qt(h,a),x=It({inputs:{x:y},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(y),x}return y}u($te,"any$2");const Nte={kernelName:bm,backendName:"cpu",kernelFunc:$te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;be(r,"argMax");let i=Pe(o,r.shape);const a=xt(i,r.shape.length);let c=r;const l=[];a!=null&&(c=is({inputs:{x:r},backend:t,attrs:{perm:a}}),l.push(c),i=$t(i.length,c.shape.length)),i=[i[0]],tn("argMax",i,c.shape.length);const[d,h]=Yt(c.shape,i),p=U(d),f=Nn(p,"int32"),m=U(h),g=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*m;let x=g[b],S=0;for(let w=0;w<m;++w){const C=g[b+w];C>x&&(x=C,S=w)}f[y]=S}return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(d,"int32",f)}u(Tte,"argMax$2");const Ete={kernelName:xd,backendName:"cpu",kernelFunc:Tte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _te(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;be(r,"argMin");let i=Pe(o,r.shape);const a=xt(i,r.shape.length);let c=r;const l=[];a!=null&&(c=is({inputs:{x:r},backend:t,attrs:{perm:a}}),l.push(c),i=$t(i.length,c.shape.length)),i=[i[0]],tn("argMin",i,c.shape.length);const[d,h]=Yt(c.shape,i),p=U(d),f=Nn(p,"int32"),m=U(h),g=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*m;let x=g[b],S=0;for(let w=0;w<m;++w){const C=g[b+w];C<x&&(x=C,S=w)}f[y]=S}return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(d,"int32",f)}u(_te,"argMin$2");const Rte={kernelName:wd,backendName:"cpu",kernelFunc:_te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ate=yt(qc,n=>Math.asin(n)),Dte={kernelName:qc,backendName:"cpu",kernelFunc:Ate};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ote=yt(Kc,n=>Math.asinh(n)),Fte={kernelName:Kc,backendName:"cpu",kernelFunc:Ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pte=yt(Xc,n=>Math.atan(n)),Lte={kernelName:Xc,backendName:"cpu",kernelFunc:Pte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mte=Jt((n,e)=>Math.atan2(n,e)),zte=pn(Qc,Mte),Bte={kernelName:Qc,backendName:"cpu",kernelFunc:zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wte=yt(Yc,n=>Math.atanh(n)),Vte={kernelName:Yc,backendName:"cpu",kernelFunc:Wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n,e,t,s,r,o){const i=r.strideHeight,a=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Oe(r.outShape,t),y=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],S=r.outShape[3];for(let w=0;w<r.batchSize;++w){const C=w*b,v=w*s[0];for(let k=0;k<r.inChannels;++k)for(let $=0;$<r.outHeight;++$){const T=$*i-p,E=Math.max(0,T),R=Math.min(r.inHeight,d+T),O=C+$*x;for(let L=0;L<r.outWidth;++L){const z=L*a-f,W=Math.max(0,z),A=Math.min(r.inWidth,h+z);let G=m,V=0,q=0;for(let Q=E;Q<R;Q+=c){const ne=v+Q*s[1];for(let X=W;X<A;X+=l){const Z=ne+X*s[2],se=n[Z+k];o==="max"&&se>G?G=se:o==="avg"&&(V+=se,q++)}if(isNaN(G))break}const Y=O+L*S+k;y[Y]=o==="avg"?V/q:G}}}return g}u(qS,"pool");function SD(n,e,t,s,r=!1,o=!1){const i=Oe(s.outShape,"int32"),a=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,d=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,g=Oe(e,t,n);for(let y=0;y<s.batchSize;++y)for(let b=0;b<s.inChannels;++b)for(let x=0;x<s.outHeight;++x){const S=x*a-f;let w=S;for(;w<0;)w+=l;const C=Math.min(s.inHeight,h+S);for(let v=0;v<s.outWidth;++v){const k=v*c-m;let $=k;for(;$<0;)$+=d;const T=Math.min(s.inWidth,p+k);let E=Number.NEGATIVE_INFINITY,R=-1;for(let O=w;O<C;O+=l){const L=O-S;for(let z=$;z<T;z+=d){const W=z-k,A=g.get(y,O,z,b);A>E&&(E=A,r?R=o?((y*s.inHeight+O)*s.inWidth+z)*s.inChannels+b:(O*s.inWidth+z)*s.inChannels+b:R=L*p+W)}}i.set(R,y,x,v,b)}}return i}u(SD,"maxPoolPositions");function CD(n,e,t,s,r,o){const i=r.strideDepth,a=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,d=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,b=r.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,S=Oe(r.outShape,t),w=S.values,C=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],v=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],$=r.outShape[4];for(let T=0;T<r.batchSize;++T){const E=T*C,R=T*s[0];for(let O=0;O<r.inChannels;++O)for(let L=0;L<r.outDepth;++L){const z=L*i-g;let W=z;for(;W<0;)W+=l;const A=Math.min(r.inDepth,p+z),G=E+L*v;for(let V=0;V<r.outHeight;++V){const q=V*a-y;let Y=q;for(;Y<0;)Y+=d;const Q=Math.min(r.inHeight,f+q),ne=G+V*k;for(let X=0;X<r.outWidth;++X){const Z=X*c-b;let se=Z;for(;se<0;)se+=h;const de=Math.min(r.inWidth,m+Z),me=ne+X*$;let Ie=x,Ce=0,ke=0;for(let Be=W;Be<A;Be+=l){const ct=R+Be*s[1];for(let st=Y;st<Q;st+=d){const Xe=ct+st*s[2];for(let rt=se;rt<de;rt+=h){const mt=Xe+rt*s[3],ft=n[mt+O];if(o==="max"&&ft>Ie?Ie=ft:o==="avg"&&(Ce+=ft,ke++),isNaN(Ie))break}if(isNaN(Ie))break}if(isNaN(Ie))break}const Ae=me+O;w[Ae]=o==="avg"?Ce/Math.max(ke,1):Ie}}}}return S}u(CD,"pool3d");function Ute(n,e){const t=Oe(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let y=0;y<e.inChannels;++y)for(let b=0;b<e.outDepth;++b){const x=b*s-p;let S=x;for(;S<0;)S+=i;const w=Math.min(e.inDepth,l+x);for(let C=0;C<e.outHeight;++C){const v=C*r-f;let k=v;for(;k<0;)k+=a;const $=Math.min(e.inHeight,d+v);for(let T=0;T<e.outWidth;++T){const E=T*o-m;let R=E;for(;R<0;)R+=c;const O=Math.min(e.inWidth,h+E);let L=Number.NEGATIVE_INFINITY,z=-1;for(let W=S;W<w;W+=i){const A=W-x;for(let G=k;G<$;G+=a){const V=G-v;for(let q=R;q<O;q+=c){const Y=q-E,Q=n.get(g,W,G,q,y);Q>=L&&(L=Q,z=A*d*h+V*d+Y)}}}t.set(z,g,b,C,T,y)}}}return t}u(Ute,"maxPool3dPositions");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;be(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=s,l=1;N(hn(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=Fn(r.shape,o,i,l,a,c);let h;if(d.filterWidth===1&&d.filterHeight===1&&Ge(d.inShape,d.outShape))h=Hr({inputs:{x:r},backend:t});else{const p=t.data.get(r.dataId).values,f=we(r.shape),m=qS(p,r.shape,r.dtype,f,d,"avg");h=t.makeTensorInfo(d.outShape,r.dtype,m.values)}return h}u(Gte,"avgPool$2");const Hte={kernelName:Sd,backendName:"cpu",kernelFunc:Gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:c,dataFormat:l}=s;be(r,"avgPool3d");const d=Os(r.shape,o,i,1,a,c,l),h=t.data.get(r.dataId).values,p=CD(h,r.shape,r.dtype,we(r.shape),d,"avg");return t.makeTensorInfo(p.shape,"float32",p.values)}u(jte,"avgPool3D$2");const qte={kernelName:Cd,backendName:"cpu",kernelFunc:jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kte(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:l}=s;be([r,o],"avgPool3DGrad");const d=Os(o.shape,i,a,1,c,l),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,x=d.dilationHeight,S=d.dilationWidth,w=d.effectiveFilterDepth,C=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=w-1-d.padInfo.front,$=v-1-d.padInfo.left,T=C-1-d.padInfo.top,E=Oe(o.shape,"float32"),R=1/(m*g*y),O=t.bufferSync(r);for(let L=0;L<d.batchSize;++L)for(let z=0;z<d.inChannels;++z)for(let W=0;W<d.inDepth;++W)for(let A=0;A<d.inHeight;++A)for(let G=0;G<d.inWidth;++G){const V=W-k,q=A-T,Y=G-$;let Q=0;for(let ne=0;ne<w;ne+=b){const X=(V+ne)/h;if(!(X<0||X>=d.outDepth||Math.floor(X)!==X))for(let Z=0;Z<C;Z+=x){const se=(q+Z)/p;if(!(se<0||se>=d.outHeight||Math.floor(se)!==se))for(let de=0;de<v;de+=S){const me=(Y+de)/f;if(me<0||me>=d.outWidth||Math.floor(me)!==me)continue;const Ie=O.get(L,X,se,me,z);Q+=Ie}}}E.set(Q*R,L,W,A,G,z)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}u(Kte,"avgPool3DGrad$2");const Xte={kernelName:wm,backendName:"cpu",kernelFunc:Kte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yte(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;be([r,o],"avgPoolGrad");const{filterSize:a,strides:c,pad:l}=s,d=Fn(i.shape,a,c,1,l),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,S=x-1-d.padInfo.left,w=b-1-d.padInfo.top,C=Oe(i.shape,"float32"),v=1/(f*m),k=t.data.get(r.dataId).values,$=Oe(r.shape,"float32",k);for(let T=0;T<d.batchSize;++T)for(let E=0;E<d.inChannels;++E)for(let R=0;R<d.inHeight;++R)for(let O=0;O<d.inWidth;++O){const L=R-w,z=O-S;let W=0;for(let A=0;A<b;A+=g){const G=(L+A)/h;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let V=0;V<x;V+=y){const q=(z+V)/p;if(q<0||q>=d.outWidth||Math.floor(q)!==q)continue;const Y=$.get(T,G,q,E);W+=Y}}C.set(W*v,T,R,O,E)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}u(Yte,"avgPoolGrad$2");const Qte={kernelName:xm,backendName:"cpu",kernelFunc:Yte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:c}=e;N(a.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([r,a,c,o,i],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const d=t.data.get(r.dataId).values,h=t.data.get(a.dataId).values,p=t.data.get(c.dataId).values,f=o?t.data.get(o.dataId).values:new Float32Array([1]),m=i?t.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,x=p.length,S=h.length;let w=0,C=0,v=0,k=0;for(let $=0;$<d.length;++$)g[$]=m[w++]+(d[$]-h[C++])*f[v++]/Math.sqrt(p[k++]+l),w>=y&&(w=0),C>=S&&(C=0),v>=b&&(v=0),k>=x&&(k=0);return t.makeTensorInfo(r.shape,r.dtype,g)}u(Jte,"batchNorm$1");const Zte={kernelName:Fd,backendName:"cpu",kernelFunc:Jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ene(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;be([r],"batchToSpaceND");const a=o.reduce((b,x)=>b*x),c=va(r.shape,o,a),l=Ia(c.length,o.length),d=ka(r.shape,o,a),h=Kg(i,o.length),p=Xg(d,i,o.length),f=It({inputs:{x:r},backend:t,attrs:{shape:c}}),m=is({inputs:{x:f},backend:t,attrs:{perm:l}}),g=It({inputs:{x:m},backend:t,attrs:{shape:d}}),y=ua({inputs:{x:g},backend:t,attrs:{begin:h,size:p}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}u(ene,"batchToSpaceND$2");const tne={kernelName:Id,backendName:"cpu",kernelFunc:ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,l=VS(a,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,l)}u(nne,"bincount$2");const sne={kernelName:Sm,backendName:"cpu",kernelFunc:nne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rne(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=Ne(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}u(rne,"broadcastArgs$2");const one={kernelName:vm,backendName:"cpu",kernelFunc:rne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ine=yt(eu,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),ane={kernelName:eu,backendName:"cpu",kernelFunc:ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cne=u(n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(U(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values;for(let l=0;l<a.length;l++){const d=a[l],h=c[l];s[l]=Math.hypot(d,h)}return t.makeOutput(s,e.shape,"float32")},"complexAbs$2"),une={kernelName:kd,backendName:"cpu",kernelFunc:cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tc(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}u(Tc,"imag$2");const lne={kernelName:Vm,backendName:"cpu",kernelFunc:Tc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Pe(r,e[0].shape)[0],i=e.map(g=>g.shape);Hg(i,o);let a=ts(e.map(g=>g.shape),o);if(U(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(g=>U(g.shape)>0);if(c.length===1)return Hr({inputs:{x:c[0]},backend:t});if(c[0].dtype==="complex64"){const g=c.map(w=>ca({inputs:{input:w},backend:t})),y=c.map(w=>Tc({inputs:{input:w},backend:t})),b=Ec({inputs:g,backend:t,attrs:{axis:o}}),x=Ec({inputs:y,backend:t,attrs:{axis:o}}),S=hs({inputs:{real:b,imag:x},backend:t});return g.forEach(w=>t.disposeIntermediateTensorInfo(w)),y.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),S}const l=c.map(g=>{const b=[-1,U(g.shape.slice(o))];return It({inputs:{x:g},backend:t,attrs:{shape:b}})}),d=l.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));a=ts(l.map(g=>g.shape),1);const h=l[0].shape[0]===1,p=$A(d,a,e[0].dtype,h),f=ts(c.map(g=>g.shape),o),m=t.makeTensorInfo(f,e[0].dtype,p);return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}u(Ec,"concat$2");const dne={kernelName:$d,backendName:"cpu",kernelFunc:Ec};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:c,dilations:l,dimRoundingMode:d}=s;be([r,o],"conv2d");const h=vs(c),p=kt(r.shape,o.shape,i,l,a,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,x=p.padInfo.top,S=p.dataFormat==="channelsLast",w=new on(p.outShape,r.dtype),C=we(r.shape),v=we(o.shape),k=C[0],$=S?C[1]:C[2],T=S?C[2]:1,E=S?1:C[1],R=w.strides[0],O=S?w.strides[1]:w.strides[2],L=S?w.strides[2]:1,z=S?1:w.strides[1],W=t.data.get(r.dataId).values,A=t.data.get(o.dataId).values,G=w.values;for(let V=0;V<p.batchSize;++V){const q=V*k,Y=V*R;for(let Q=0;Q<p.outHeight;++Q){const ne=Y+Q*O,X=Q*p.strideHeight-x;for(let Z=0;Z<f;++Z){const se=X+Z*g;if(se<0||se>=p.inHeight)continue;const de=Z*v[0],me=q+se*$;for(let Ie=0;Ie<p.outWidth;++Ie){const Ce=ne+Ie*L,ke=Ie*p.strideWidth-b;for(let Ae=0;Ae<m;++Ae){const Be=ke+Ae*y;if(Be<0||Be>=p.inWidth)continue;const ct=de+Ae*v[1],st=me+Be*T;let Xe=ct;for(let rt=0;rt<p.inChannels;++rt){const mt=W[st+rt*E];for(let ft=0;ft<p.outChannels;++ft)G[Ce+ft*z]+=mt*A[Xe+ft];Xe+=p.outChannels}}}}}}return t.makeTensorInfo(w.shape,w.dtype,G)}u(vD,"conv2D");const hne={kernelName:Nd,backendName:"cpu",kernelFunc:vD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:c,dimRoundingMode:l,filterShape:d}=s;be([r,o],"conv2dBackpropFilter");const h=vs(c),p=kt(r.shape,d,i,1,a,l,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b=p.dataFormat==="channelsLast",x=new on(p.filterShape,"float32"),S=p.padInfo.left,w=p.padInfo.top,C=t.data.get(r.dataId).values,v=t.data.get(o.dataId).values,k=new on(r.shape,r.dtype,C),$=new on(o.shape,o.dtype,v);for(let T=0;T<g;++T){const E=Math.max(0,Math.ceil((w-T)/f)),R=Math.min(p.outHeight,(p.inHeight+w-T)/f);for(let O=0;O<y;++O){const L=Math.max(0,Math.ceil((S-O)/m)),z=Math.min(p.outWidth,(p.inWidth+S-O)/m);for(let W=0;W<p.inChannels;++W)for(let A=0;A<p.outChannels;++A){let G=0;for(let V=0;V<p.batchSize;++V)for(let q=E;q<R;++q){const Y=T+q*f-w;for(let Q=L;Q<z;++Q){const ne=O+Q*m-S;b?G+=k.get(V,Y,ne,W)*$.get(V,q,Q,A):G+=k.get(V,W,Y,ne)*$.get(V,A,q,Q)}}x.set(G,T,O,W,A)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}u(pne,"conv2DBackpropFilter$2");const fne={kernelName:km,backendName:"cpu",kernelFunc:pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:c,dataFormat:l,dimRoundingMode:d}=s;be([r,o],"conv2dBackpropInput");const h=we(o.shape),p=we(r.shape);let f=vs(l);const m=kt(i,o.shape,a,1,c,d,!1,f),g=new on(m.inShape,"float32"),y=g.values,b=t.data.get(r.dataId).values,x=t.data.get(o.dataId).values,[S,w,C]=h,{batchSize:v,filterHeight:k,filterWidth:$,inChannels:T,inHeight:E,inWidth:R,outChannels:O,outHeight:L,outWidth:z,strideHeight:W,strideWidth:A}=m;f=m.dataFormat;const G=k-1-m.padInfo.top,V=$-1-m.padInfo.left,q=f==="channelsLast",Y=g.strides[0],Q=q?g.strides[1]:g.strides[2],ne=q?g.strides[2]:1,X=q?1:g.strides[1],Z=p[0],se=q?p[1]:p[2],de=q?p[2]:1,me=q?1:p[1];for(let Ie=0;Ie<v;++Ie)for(let Ce=0;Ce<T;++Ce)for(let ke=0;ke<E;++ke){const Ae=ke-G,Be=Math.max(0,Math.ceil(Ae/W)),ct=Math.min(L,(k+Ae)/W);for(let st=0;st<R;++st){const Xe=st-V,rt=Math.max(0,Math.ceil(Xe/A)),mt=Math.min(z,($+Xe)/A);let ft=0;for(let $e=Be;$e<ct;++$e){const Vt=$e*W-Ae;for(let Te=rt;Te<mt;++Te){const pt=Te*A-Xe,Me=Z*Ie+se*$e+de*Te,De=S*(k-1-Vt)+w*($-1-pt)+C*Ce;for(let je=0;je<O;++je){const Ut=b[Me+me*je],At=x[De+je];ft+=Ut*At}}}const Cn=Y*Ie+Q*ke+ne*st+X*Ce;y[Cn]=ft}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}u(mne,"conv2DBackpropInput$2");const gne={kernelName:Td,backendName:"cpu",kernelFunc:mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c}=s;be([r,o],"conv3d");const l=$r(r.shape,o.shape,i,c,a),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=l,b=y.front,x=y.left,S=y.top,w=new on(l.outShape,r.dtype),C=t.data.get(r.dataId).values,v=t.data.get(o.dataId).values,k=w.values,$=we(r.shape),T=we(o.shape);for(let E=0;E<l.batchSize;++E){const R=E*$[0],O=E*w.strides[0];for(let L=0;L<l.outDepth;++L){const z=O+L*w.strides[1],W=L*l.strideDepth-b;for(let A=0;A<d;++A){const G=W+A*f;if(G<0||G>=l.inDepth)continue;const V=A*T[0],q=R+G*$[1];for(let Y=0;Y<l.outHeight;++Y){const Q=z+Y*w.strides[2],ne=Y*l.strideHeight-S;for(let X=0;X<h;++X){const Z=ne+X*m;if(Z<0||Z>=l.inHeight)continue;const se=V+X*T[1],de=q+Z*$[2];for(let me=0;me<l.outWidth;++me){const Ie=Q+me*l.outChannels,Ce=me*l.strideWidth-x;for(let ke=0;ke<p;++ke){const Ae=Ce+ke*g;if(Ae<0||Ae>=l.inWidth)continue;const Be=se+ke*T[2],ct=de+Ae*l.inChannels;let st=Be;for(let Xe=0;Xe<l.inChannels;++Xe){const rt=C[ct+Xe];for(let mt=0;mt<l.outChannels;++mt)k[Ie+mt]+=rt*v[st+mt];st+=l.outChannels}}}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}u(yne,"conv3D$2");const bne={kernelName:Ed,backendName:"cpu",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:c}=s;be([r,o],"conv3dBackpropFilterV2");const l=we(r.shape),d=we(o.shape),h=$r(r.shape,c,i,1,a),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,y=h.filterHeight,b=h.filterWidth,x=new on(h.filterShape,"float32"),S=x.values,[w,C,v,k]=x.strides,$=t.data.get(o.dataId).values,[T,E,R,O]=d,L=t.data.get(r.dataId).values,[z,W,A,G]=l,V=h.padInfo.front,q=h.padInfo.left,Y=h.padInfo.top;for(let Q=0;Q<g;++Q){const ne=Math.max(0,Math.ceil((V-Q)/p)),X=Math.min(h.outDepth,(h.inDepth+V-Q)/p),Z=Q*w;for(let se=0;se<y;++se){const de=Math.max(0,Math.ceil((Y-se)/f)),me=Math.min(h.outHeight,(h.inHeight+Y-se)/f),Ie=se*C+Z;for(let Ce=0;Ce<b;++Ce){const ke=Math.max(0,Math.ceil((q-Ce)/m)),Ae=Math.min(h.outWidth,(h.inWidth+q-Ce)/m),Be=Ce*v+Ie;for(let ct=0;ct<h.inChannels;++ct){const st=ct*k+Be;for(let Xe=0;Xe<h.outChannels;++Xe){let rt=0;for(let mt=0;mt<h.batchSize;++mt){const ft=mt*z,Cn=mt*T;for(let $e=ne;$e<X;++$e){const Te=(Q+$e*p-V)*W+ft,pt=$e*E+Cn;for(let Me=de;Me<me;++Me){const je=(se+Me*f-Y)*A+Te,Ut=Me*R+pt;for(let At=ke;At<Ae;++At){const Ls=(Ce+At*m-q)*G+je,nl=At*O+Ut;rt+=L[Ls+ct]*$[nl+Xe]}}}}S[st+Xe]=rt}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}u(xne,"conv3DBackpropFilterV2$2");const wne={kernelName:$m,backendName:"cpu",kernelFunc:xne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:c}=s;be([r],"conv3dBackpropInputV2");const l=we(r.shape),d=we(o.shape),h=$r(c,o.shape,a,1,i),p=new on(h.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,x=t.data.get(r.dataId).values,[S,w,C,v]=l,k=t.data.get(o.dataId).values,[$,T,E,R]=d,{batchSize:O,filterDepth:L,filterHeight:z,filterWidth:W,inChannels:A,inDepth:G,inHeight:V,inWidth:q,outChannels:Y,outDepth:Q,outHeight:ne,outWidth:X,strideDepth:Z,strideHeight:se,strideWidth:de}=h,me=L-1-h.padInfo.front,Ie=z-1-h.padInfo.top,Ce=W-1-h.padInfo.left;for(let ke=0;ke<O;++ke)for(let Ae=0;Ae<A;++Ae)for(let Be=0;Be<G;++Be){const ct=Be-me,st=Math.max(0,Math.ceil(ct/Z)),Xe=Math.min(Q,(L+ct)/Z);for(let rt=0;rt<V;++rt){const mt=rt-Ie,ft=Math.max(0,Math.ceil(mt/se)),Cn=Math.min(ne,(z+mt)/se);for(let $e=0;$e<q;++$e){const Vt=$e-Ce,Te=Math.max(0,Math.ceil(Vt/de)),pt=Math.min(X,(W+Vt)/de);let Me=0;for(let De=st;De<Xe;++De){const je=De*Z-ct;for(let Ut=ft;Ut<Cn;++Ut){const At=Ut*se-mt;for(let fn=Te;fn<pt;++fn){const Ls=fn*de-Vt,nl=S*ke+w*De+C*Ut+v*fn,sF=$*(L-1-je)+T*(z-1-At)+E*(W-1-Ls)+R*Ae;for(let Gh=0;Gh<Y;++Gh){const rF=x[nl+Gh],oF=k[sF+Gh];Me+=rF*oF}}}}f[m*ke+g*Be+y*rt+b*$e+Ae]=Me}}}return t.makeTensorInfo(p.shape,p.dtype,p.values)}u(Sne,"conv3DBackpropInputV2$1");const Cne={kernelName:Nm,backendName:"cpu",kernelFunc:Sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vne=yt(tu,n=>Math.cos(n)),Ine={kernelName:tu,backendName:"cpu",kernelFunc:vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kne=yt(nu,n=>Math.cosh(n)),$ne={kernelName:nu,backendName:"cpu",kernelFunc:kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nne(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:c,extrapolationValue:l}=s,[d,h,p,f]=r.shape,m=o.shape[0],[g,y]=a,b=Oe([m,g,y,f],"float32"),x=t.data.get(o.dataId).values,S=t.data.get(i.dataId).values,w=t.data.get(r.dataId).values,C=we(r.shape),v=we(b.shape);for(let k=0;k<m;k++){const $=k*4,T=x[$],E=x[$+1],R=x[$+2],O=x[$+3],L=S[k];if(L>=d)continue;const z=g>1?(R-T)*(h-1)/(g-1):0,W=y>1?(O-E)*(p-1)/(y-1):0;for(let A=0;A<g;A++){const G=g>1?T*(h-1)+A*z:.5*(T+R)*(h-1);if(G<0||G>h-1){for(let V=0;V<y;V++)for(let q=0;q<f;q++){const Y=q+V*v[2]+A*v[1]+k*v[0];b.values[Y]=l}continue}if(c==="bilinear"){const V=Math.floor(G),q=Math.ceil(G),Y=G-V;for(let Q=0;Q<y;Q++){const ne=y>1?E*(p-1)+Q*W:.5*(E+O)*(p-1);if(ne<0||ne>p-1){for(let de=0;de<f;de++){const me=de+Q*v[2]+A*v[1]+k*v[0];b.values[me]=l}continue}const X=Math.floor(ne),Z=Math.ceil(ne),se=ne-X;for(let de=0;de<f;de++){let me=de+X*C[2]+V*C[1]+L*C[0];const Ie=w[me];me=de+Z*C[2]+V*C[1]+L*C[0];const Ce=w[me];me=de+X*C[2]+q*C[1]+L*C[0];const ke=w[me];me=de+Z*C[2]+q*C[1]+L*C[0];const Ae=w[me],Be=Ie+(Ce-Ie)*se,ct=ke+(Ae-ke)*se;me=de+Q*v[2]+A*v[1]+k*v[0],b.values[me]=Be+(ct-Be)*Y}}}else for(let V=0;V<y;++V){const q=y>1?E*(p-1)+V*W:.5*(E+O)*(p-1);if(q<0||q>p-1){for(let ne=0;ne<f;ne++){const X=ne+V*v[2]+A*v[1]+k*v[0];b.values[X]=l}continue}const Y=Math.round(q),Q=Math.round(G);for(let ne=0;ne<f;ne++){const X=ne+Y*C[2]+Q*C[1]+L*C[0],Z=ne+V*v[2]+A*v[1]+k*v[0];b.values[Z]=w[X]}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}u(Nne,"cropAndResize$2");const Tne={kernelName:Em,backendName:"cpu",kernelFunc:Nne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;be(r,"cumprod");const c=xt([o],r.shape.length);let l=r;c!=null&&(l=is({inputs:{x:r},backend:t,attrs:{perm:c}}));const d=$t(1,r.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const h=wn(l.dtype,"int32"),p=aw(U(l.shape),h),f=t.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=a?(b,x)=>b+m-x-1:(b,x)=>b+x;for(let b=0;b<f.length;b+=m)for(let x=0;x<m;x++){const S=g(b,x);if(x===0)p[S]=i?1:f[S];else{const w=g(b,x-1);p[S]=i?f[w]*p[w]:f[S]*p[w]}}const y=t.makeTensorInfo(l.shape,h,p);if(c!=null){const b=Kr(c),x=is({inputs:{x:y},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(l),x}return y}u(Ene,"cumprod$2");const _ne={kernelName:Tm,backendName:"cpu",kernelFunc:Ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;be(r,"cumsum");const c=xt([o],r.shape.length);let l=r;c!=null&&(l=is({inputs:{x:r},backend:t,attrs:{perm:c}}));const d=$t(1,r.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const h=wn(l.dtype,"int32"),p=Nn(U(l.shape),h),f=t.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=a?(b,x)=>b+m-x-1:(b,x)=>b+x;for(let b=0;b<f.length;b+=m)for(let x=0;x<m;x++){const S=g(b,x);if(x===0)p[S]=i?0:f[S];else{const w=g(b,x-1);p[S]=i?f[w]+p[w]:f[S]+p[w]}}const y=t.makeTensorInfo(l.shape,h,p);if(c!=null){const b=Kr(c),x=is({inputs:{x:y},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(l),x}return y}u(Rne,"cumsum$2");const Ane={kernelName:_d,backendName:"cpu",kernelFunc:Rne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,d=VS(c,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,d)}else if(r.shape.length===2){const c=t.bufferSync(r),l=t.bufferSync(o),d=vA(c,l,i,a);return t.makeTensorInfo(d.shape,o.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}u(Dne,"denseBincount$2");const One={kernelName:_m,backendName:"cpu",kernelFunc:Dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;N(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],c=r.shape[1],l=r.shape[2],d=r.shape[3],h=c*o,p=l*o,f=d/(o*o),m=t.data.get(r.dataId).values,g=new Float32Array(a*h*p*f);let y=0;for(let b=0;b<a;++b)for(let x=0;x<h;++x){const S=Math.floor(x/o),w=x%o;for(let C=0;C<p;++C){const v=Math.floor(C/o),k=C%o,$=(w*o+k)*f;for(let T=0;T<f;++T){const R=T+$+d*(v+l*(S+c*b));g[y++]=m[R]}}}return t.makeTensorInfo([a,h,p,f],r.dtype,g)}u(Fne,"depthToSpace$2");const Pne={kernelName:Rm,backendName:"cpu",kernelFunc:Fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c,dimRoundingMode:l}=s;be([r,o],"depthwiseConv2DNative");const d=we(r.shape),h=we(o.shape);let p=c;p==null&&(p=[1,1]),N(hn(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=kt(r.shape,o.shape,i,p,a,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,S=x.left,w=x.top,C=f.outChannels/f.inChannels,v=new on(f.outShape,r.dtype),k=t.data.get(r.dataId).values,$=t.data.get(o.dataId).values,T=v.values;for(let E=0;E<f.batchSize;++E){const R=E*d[0],O=E*v.strides[0];for(let L=0;L<f.outHeight;++L){const z=O+L*v.strides[1],W=L*f.strideHeight-w;for(let A=0;A<m;++A){const G=W+A*y;if(G<0||G>=f.inHeight)continue;const V=A*h[0],q=R+G*d[1];for(let Y=0;Y<f.outWidth;++Y){const Q=z+Y*v.strides[2],ne=Y*f.strideWidth-S;for(let X=0;X<g;++X){const Z=ne+X*b;if(Z<0||Z>=f.inWidth)continue;const se=V+X*h[1],de=q+Z*f.inChannels;let me=Q,Ie=se;for(let Ce=0;Ce<f.inChannels;++Ce){const ke=k[de+Ce];for(let Ae=0;Ae<C;++Ae)T[me+Ae]+=ke*$[Ie+Ae];me+=C,Ie+=C}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}u(ID,"depthwiseConv2dNative$2");const Lne={kernelName:Rd,backendName:"cpu",kernelFunc:ID};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,filterShape:d}=s;be([r,o],"depthwiseConv2dNativeBackpropFilter");const h=kt(r.shape,d,i,a,c,l,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new on(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,S=h.outChannels/h.inChannels,w=t.data.get(r.dataId).values,C=new on(r.shape,r.dtype,w),v=t.data.get(o.dataId).values,k=new on(o.shape,o.dtype,v);for(let $=0;$<m;++$){const T=Math.max(0,Math.ceil((x-$)/p)),E=Math.min(h.outHeight,(h.inHeight+x-$)/p);for(let R=0;R<g;++R){const O=Math.max(0,Math.ceil((b-R)/f)),L=Math.min(h.outWidth,(h.inWidth+b-R)/f);for(let z=0;z<h.outChannels;++z){const W=Math.trunc(z/S),A=z%S;let G=0;for(let V=0;V<h.batchSize;++V)for(let q=T;q<E;++q){const Y=$+q*p-x;for(let Q=O;Q<L;++Q){const ne=R+Q*f-b;G+=C.get(V,Y,ne,W)*k.get(V,q,Q,z)}}y.set(G,$,R,W,A)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}u(Mne,"depthwiseConv2dNativeBackpropFilter$2");const zne={kernelName:Am,backendName:"cpu",kernelFunc:Mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,inputShape:d}=s;be([r,o],"depthwiseConv2DNativeBackpropInput");const h=we(r.shape),p=we(o.shape),f=kt(d,o.shape,i,a,c,l,!0),m=new on(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,S=t.data.get(r.dataId).values,[w,C,v]=h,k=t.data.get(o.dataId).values,[$,T,E]=p,{batchSize:R,filterHeight:O,filterWidth:L,inChannels:z,inHeight:W,inWidth:A,outChannels:G,outHeight:V,outWidth:q,strideHeight:Y,strideWidth:Q}=f,ne=O-1-f.padInfo.top,X=L-1-f.padInfo.left,Z=G/z;for(let se=0;se<R;++se)for(let de=0;de<z;++de)for(let me=0;me<W;++me){const Ie=me-ne,Ce=Math.max(0,Math.ceil(Ie/Y)),ke=Math.min(V,(O+Ie)/Y);for(let Ae=0;Ae<A;++Ae){const Be=Ae-X,ct=Math.max(0,Math.ceil(Be/Q)),st=Math.min(q,(L+Be)/Q);let Xe=0;for(let rt=Ce;rt<ke;++rt){const mt=rt*Y-Ie;for(let ft=ct;ft<st;++ft){const Cn=ft*Q-Be,$e=w*se+C*rt+v*ft,Vt=$*(O-1-mt)+T*(L-1-Cn)+E*de;for(let Te=0;Te<Z;++Te){const pt=de*Z+Te,Me=S[$e+pt],De=k[Vt+Te];Xe+=Me*De}}}g[y*se+b*me+x*Ae+de]=Xe}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}u(Bne,"depthwiseConv2dNativeBackpropInput$2");const Wne={kernelName:Dm,backendName:"cpu",kernelFunc:Bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vne(n){const{inputs:e,backend:t}=n,{x:s}=e,r=U(s.shape),o=t.data.get(s.dataId).values,i=Oe([r,r],s.dtype),a=i.values;for(let l=0;l<o.length;l++)a[l*r+l]=o[l];const c=[...s.shape,...s.shape];return t.makeTensorInfo(c,i.dtype,i.values)}u(Vne,"diag$2");const Une={kernelName:Om,backendName:"cpu",kernelFunc:Vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gne={kernelName:Ad,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=t,c=e,l=c.data.get(s.dataId).values,d=s.shape.length,h=c.data.get(r.dataId).values,p=r.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:S,strideHeight:w,strideWidth:C,filterHeight:v,filterWidth:k,dilationHeight:$,dilationWidth:T,outShape:E}=pi(s.shape,r.shape,o,i,"NHWC",a),R=U(E),O=E.length,L=Ht(s.dtype,R);for(let W=0;W<f;++W)for(let A=0;A<b;++A){const G=A*w-S.top;for(let V=0;V<x;++V){const q=V*C-S.left;for(let Y=0;Y<y;++Y){let Q=Number.MIN_SAFE_INTEGER;for(let X=0;X<v;++X){const Z=G+X*$;if(Z>=0&&Z<m)for(let se=0;se<k;++se){const de=q+se*T;if(de>=0&&de<g){const me=zr([W,Z,de,Y],d,we(s.shape)),Ie=zr([X,se,Y],p,we(r.shape)),Ce=l[me]+h[Ie];Ce>Q&&(Q=Ce)}}}const ne=zr([W,A,V,Y],O,we(E));L[ne]=Q}}}return{dataId:c.write(xa(L,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hne={kernelName:mf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:c}=t,l=e,d=Zs(s.shape,l.data.get(s.dataId).values),h=Zs(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:S,strideWidth:w,filterHeight:C,filterWidth:v,dilationHeight:k,dilationWidth:$,outShape:T}=pi(s.shape,r.shape,i,a,"NHWC",c);N(o.rank===T.length,()=>`Error in ${mf}, dy must have the same rank as output ${T.length}, but got ${o.rank}`);const E=Zs(T,l.data.get(o.dataId).values),R=yN(r.shape,r.dtype);for(let L=0;L<p;++L)for(let z=0;z<y;++z){const W=z*S-x.top;for(let A=0;A<b;++A){const G=A*w-x.left;for(let V=0;V<g;++V){let q=Number.MIN_SAFE_INTEGER,Y=0,Q=0;for(let ne=0;ne<C;++ne){const X=W+ne*k;if(X>=0&&X<f)for(let Z=0;Z<v;++Z){const se=G+Z*$;if(se>=0&&se<m){const de=d[L][X][se][V]+h[ne][Z][V];de>q&&(q=de,Y=ne,Q=Z)}}}R[Y][Q][V]+=E[L][z][A][V]}}}return{dataId:l.write(xa(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jne={kernelName:ff,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:c}=t,l=e,d=Zs(s.shape,l.data.get(s.dataId).values),h=Zs(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:S,strideWidth:w,filterHeight:C,filterWidth:v,dilationHeight:k,dilationWidth:$,outShape:T}=pi(s.shape,r.shape,i,a,"NHWC",c);N(o.rank===T.length,()=>`Error in ${ff}, dy must have the same rank as output ${T.length}, but got ${o.rank}`);const E=Zs(T,l.data.get(o.dataId).values),R=yN(s.shape,s.dtype);for(let L=0;L<p;++L)for(let z=0;z<y;++z){const W=z*S-x.top;for(let A=0;A<b;++A){const G=A*w-x.left;for(let V=0;V<g;++V){let q=Number.MIN_SAFE_INTEGER,Y=W<0?0:W,Q=G<0?0:G;for(let ne=0;ne<C;++ne){const X=W+ne*k;if(X>=0&&X<f)for(let Z=0;Z<v;++Z){const se=G+Z*$;if(se>=0&&se<m){const de=d[L][X][se][V]+h[ne][Z][V];de>q&&(q=de,Y=X,Q=se)}}}R[L][Y][Q][V]+=E[L][z][A][V]}}}return{dataId:l.write(xa(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qne(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:c}=i||{},l=c?.alpha||1,d=a?.contextType||"2d";if(d!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=o.getContext(d,a?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${d} type.`);const[p,f]=r.shape.slice(0,2),m=r.shape.length===2?1:r.shape[2],g=t.data.get(r.dataId).values,y=r.dtype==="float32"?255:1,b=new Uint8ClampedArray(f*p*4);for(let S=0;S<p*f;++S){const w=[0,0,0,255*l];for(let v=0;v<m;v++){const k=g[S*m+v];if(r.dtype==="float32"){if(k<0||k>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${k}.`)}else if(r.dtype==="int32"&&(k<0||k>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${k}.`);m===1?(w[0]=k*y,w[1]=k*y,w[2]=k*y):w[v]=k*y}const C=S*4;b[C+0]=Math.round(w[0]),b[C+1]=Math.round(w[1]),b[C+2]=Math.round(w[2]),b[C+3]=Math.round(w[3])}o.width=f,o.height=p;const x=new ImageData(b,f,p);return h.putImageData(x,0,0),r}u(qne,"draw$1");const Kne={kernelName:wN,backendName:"cpu",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fh(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;be(r,"sum");let a;r.dtype==="bool"?a=ri({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=Hr({inputs:{x:r},backend:t});const c=a.shape.length,l=Pe(o,a.shape),d=xt(l,c);let h=l,p=a;d!=null&&(p=is({inputs:{x:a},backend:t,attrs:{perm:d}}),h=$t(h.length,c)),tn("sum",h,p.shape.length);const[f,m]=Yt(p.shape,h),g=wn(p.dtype,"int32");let y=Pf(t,f,g);const b=U(m),x=t.data.get(y.dataId).values,S=t.data.get(p.dataId).values;for(let w=0;w<x.length;++w){const C=w*b;let v=0;for(let k=0;k<b;++k)v+=S[C+k];x[w]=v}if(i){const w=qt(y.shape,l),C=y;y=It({inputs:{x:y},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(a),d!=null&&t.disposeIntermediateTensorInfo(p),y}u(Fh,"sum$2");const Xne={kernelName:dh,backendName:"cpu",kernelFunc:Fh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yne(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:c}=ny(r,o.length);ry(i.length,c,o);const{path:l,steps:d}=oy(a,c),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const y of d[g]){const{permutationIndices:b,expandDims:x}=sy(f,c[y]);let S;iy(b)?S=o[y]:(S=is({inputs:{x:o[y]},backend:t,attrs:{perm:b}}),m.push(S));const w=S.shape.slice();for(let C=0;C<x.length;++C)w.splice(x[C],0,1);Ge(S.shape,w)||(S=It({inputs:{x:S},backend:t,attrs:{shape:w}}),m.push(S)),p===null?p=S:(p=wy({inputs:{a:S,b:p},backend:t}),m.push(p))}g<h-1&&(l[g]>=0&&(p=Fh({inputs:{x:p},backend:t,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&t.disposeIntermediateTensorInfo(g);return p}u(Yne,"einsum$2");const Qne={kernelName:Fm,backendName:"cpu",kernelFunc:Yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jne(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;be([s,r],"eluGrad");const o=new Float32Array(U(r.shape)),i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let c=0;c<i.length;++c){const l=i[c];l>=0?o[c]=a[c]:o[c]=a[c]*(l+1)}return t.makeTensorInfo(r.shape,"float32",o)}u(Jne,"eluGrad$2");const Zne={kernelName:Pm,backendName:"cpu",kernelFunc:Jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ese=Yg,tse=Qg,nse=Jg,sse=Zg,rse=ey,ose=ty,ise=yt(ou,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+ese*t);return e*(1-((((ose*s+rse)*s+sse)*s+nse)*s+tse)*s*Math.exp(-t*t))}),ase={kernelName:ou,backendName:"cpu",kernelFunc:ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zf(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let c=o;return o<0&&(N(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+o+1),a.splice(c,0,1),It({inputs:{x:r},backend:t,attrs:{shape:a}})}u(zf,"expandDims$2");const cse={kernelName:Od,backendName:"cpu",kernelFunc:zf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const use=Jt((n,e)=>n/e),KS=pn(su,use),Qx={kernelName:su,backendName:"cpu",kernelFunc:KS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[r,o],d=U(l),h=ln("float32",d),p=ln("float32",d);for(let y=0;y<r;y++){const b=ua({inputs:{x:a},backend:t,attrs:{begin:[y,0],size:[1,o]}}),x=ua({inputs:{x:c},backend:t,attrs:{begin:[y,0],size:[1,o]}}),S=hs({inputs:{real:b,imag:x},backend:t}),{real:w,imag:C}=lse(S,e,t),v=xr(w,C);for(let k=0;k<o;k++){const $=gS(v,k);h[y*o+k]=$.real,p[y*o+k]=$.imag}t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(S)}const f=t.makeTensorInfo(l,"float32",h),m=t.makeTensorInfo(l,"float32",p),g=hs({inputs:{real:f,imag:m},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}u(kD,"fftBatch");function lse(n,e,t){const s=U(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(dse(s)){const a=Jx(o,i,s,e,t),c=[n.shape[0],n.shape[1]];if(e){const l=t.makeTensorInfo(c,"float32",a.real),d=t.makeTensorInfo(c,"float32",a.imag),h=t.makeTensorInfo([],"float32",li(s,"float32")),p=Hr({inputs:{x:h},backend:t}),f=Qx.kernelFunc({inputs:{a:l,b:h},backend:t}),m=Qx.kernelFunc({inputs:{a:d,b:p},backend:t}),g=t.data.get(f.dataId).values,y=t.data.get(m.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),{real:g,imag:y}}return a}else{const a=xr(o,i),c=hse(a,s,e);return FE(c)}}u(lse,"fftImpl$2");function dse(n){return(n&n-1)===0}u(dse,"isExponentOf2");function Jx(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=xr(n,e),i=t/2,a=PE(o),c=a.real,l=a.imag,d=[c.length],h=r.makeTensorInfo(d,"float32",c),p=r.makeTensorInfo(d,"float32",l),f=hs({inputs:{real:h,imag:p},backend:r}),m=LE(o),g=m.real,y=m.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),S=r.makeTensorInfo(b,"float32",y),w=hs({inputs:{real:x,imag:S},backend:r}),C=Jx(c,l,i,s,r),v=C.real,k=C.imag,$=[v.length],T=r.makeTensorInfo($,"float32",v),E=r.makeTensorInfo($,"float32",k),R=hs({inputs:{real:T,imag:E},backend:r}),O=Jx(g,y,i,s,r),L=O.real,z=O.imag,W=[L.length],A=r.makeTensorInfo(W,"float32",L),G=r.makeTensorInfo(W,"float32",z),V=hs({inputs:{real:A,imag:G},backend:r}),q=zE(t,s),Y=[q.real.length],Q=r.makeTensorInfo(Y,"float32",q.real),ne=r.makeTensorInfo(Y,"float32",q.imag),X=hs({inputs:{real:Q,imag:ne},backend:r}),Z=wy({inputs:{a:X,b:V},backend:r}),se=Nc({inputs:{a:R,b:Z},backend:r}),de=jS({inputs:{a:R,b:Z},backend:r}),me=ca({inputs:{input:se},backend:r}),Ie=ca({inputs:{input:de},backend:r}),Ce=Tc({inputs:{input:se},backend:r}),ke=Tc({inputs:{input:de},backend:r}),Ae=Ec({inputs:[me,Ie],backend:r,attrs:{axis:0}}),Be=Ec({inputs:[Ce,ke],backend:r,attrs:{axis:0}}),ct=r.data.get(Ae.dataId).values,st=r.data.get(Be.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(ke),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(Be),{real:ct,imag:st}}u(Jx,"fftRadix2");function hse(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const c=BE(r*a,e,t),l=gS(n,a);o+=l.real*c.real-l.imag*c.imag,i+=l.real*c.imag+l.imag*c.real}t&&(o/=e,i/=e),ME(s,o,i,r)}return s}u(hse,"fourierTransformByMatmul");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pse(n){const{inputs:e,backend:t}=n,{input:s}=e,r=U(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=It({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),c=kD(a,!1,t),l=It({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}u(pse,"fft$2");const fse={kernelName:Lm,backendName:"cpu",kernelFunc:pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||ga(r),a=Ht(i,U(s));return gse(a,r,i),e.makeTensorInfo(s,i,a)}u(XS,"fill$2");const mse={kernelName:Mm,backendName:"cpu",kernelFunc:XS};function gse(n,e,t){n.fill(e)}u(gse,"fillValues");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yse={kernelName:zm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=ln(s.dtype,U(s.shape)),[i,a,c,l]=s.shape,d=r.data.get(s.dataId).values;for(let p=0;p<i;p++){const f=p*c*a*l;for(let m=0;m<a;m++){const g=m*(c*l);for(let y=0;y<c;y++){const b=y*l;for(let x=0;x<l;x++){const S=Math.round(c-y-1),w=f+g+b+x;let C=d[w];if(S>=0&&S<c){const v=S*l,k=f+g+v+x;C=d[k]}o[w]=C}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s;let g=vD({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){const y=g;if(d==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const b=It({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});g=Nc({inputs:{a:g,b},backend:t}),t.disposeIntermediateTensorInfo(b)}else g=Nc({inputs:{a:g,b:i},backend:t});t.disposeIntermediateTensorInfo(y)}if(f){const y=g;if(d==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const b=It({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=Mf(t,g,f,b,m),t.disposeIntermediateTensorInfo(b)}else g=Mf(t,g,f,a,m);t.disposeIntermediateTensorInfo(y)}return g}u(bse,"fusedConv2D");const xse={kernelName:Ml,backendName:"cpu",kernelFunc:bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s;let g=ID({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){const y=g;g=Nc({inputs:{a:g,b:i},backend:t}),t.disposeIntermediateTensorInfo(y)}if(f){const y=g;g=Mf(t,g,f,a,m),t.disposeIntermediateTensorInfo(y)}return g}u(wse,"fusedDepthwiseConv2D$2");const Sse={kernelName:zl,backendName:"cpu",kernelFunc:wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cse(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=U(s.shape),i=r.shape,a=i[i.length-1],[c,l,d,h]=Wg(s,r);if(l===0)return t.makeTensorInfo(c,s.dtype,[]);const p=t.data.get(r.dataId).values,f=t.bufferSync(s),m=OA(p,f,s.dtype,l,a,d,h,s.shape,o);return t.makeTensorInfo(c,s.dtype,m.values)}u(Cse,"gatherNd$2");const vse={kernelName:Bm,backendName:"cpu",kernelFunc:Cse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ise(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;be([r,o],"gatherV2");const c=Pe(i,r.shape)[0],l=t.data.get(o.dataId).values,d=r.shape[c];for(let w=0;w<l.length;++w){const C=l[w];N(C<=d-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${d-1}]`)}let h=a;a==null&&(h=0);const p=U(o.shape),f=cy(r,o,c,h),m=It({inputs:{x:r},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=It({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=t.bufferSync(g),x=t.bufferSync(m),S=FA(x,b,y);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(f.outputShape,S.dtype,S.values)}u(Ise,"gatherV2$2");const kse={kernelName:Pd,backendName:"cpu",kernelFunc:Ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $se(n){const{inputs:e,backend:t}=n,{input:s}=e,r=U(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=It({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),c=kD(a,!0,t),l=It({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}u($se,"ifft$2");const Nse={kernelName:Wm,backendName:"cpu",kernelFunc:$se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tse=yt(hu,n=>Number.isFinite(n)?1:0,"bool"),Ese={kernelName:hu,backendName:"cpu",kernelFunc:Tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _se=yt(pu,n=>Math.abs(n)===1/0?1:0,"bool"),Rse={kernelName:pu,backendName:"cpu",kernelFunc:_se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ase=yt(fu,n=>Number.isNaN(n)?1:0,"bool"),Dse={kernelName:fu,backendName:"cpu",kernelFunc:Ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ose(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=BA(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}u(Ose,"linSpace$2");const Fse={kernelName:Um,backendName:"cpu",kernelFunc:Ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pse=yt(gu,n=>Math.log1p(n)),Lse={kernelName:gu,backendName:"cpu",kernelFunc:Pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mse=Jt((n,e)=>n&&e),zse=pn(Wd,Mse,null,"bool"),Bse={kernelName:Wd,backendName:"cpu",kernelFunc:zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wse=yt(Vd,n=>n?0:1,"bool"),Vse={kernelName:Vd,backendName:"cpu",kernelFunc:Wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Use=Jt((n,e)=>n||e),Gse=pn(Ud,Use,null,"bool"),Hse={kernelName:Ud,backendName:"cpu",kernelFunc:Gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:c}=s;be(r,"LRN");const l=r.shape[3],d=l-1,h=t.data.get(r.dataId).values,p=U(r.shape),f=new Float32Array(p);function m(g){const y=g%l;let b=g-y+Math.max(0,y-o);const x=g-y+Math.min(y+o,d);let S=0;for(;b<=x;b++){const w=h[b];S+=w*w}return S}u(m,"sumAcrossChannels");for(let g=0;g<p;g++){const y=m(g),b=h[g]*Math.pow(i+a*y,-c);f[g]=b}return t.makeTensorInfo(r.shape,r.dtype,f)}u(jse,"lRN");const qse={kernelName:Gd,backendName:"cpu",kernelFunc:jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:c,alpha:l,beta:d}=s;be(i,"LRNGrad");const h=U(i.shape),p=i.shape[3],f=t.data.get(i.dataId).values,m=t.data.get(r.dataId).values,g=t.data.get(o.dataId).values,y=new Float32Array(h),b=h;for(let x=0;x<b;x++){const S=x%p,w=x-S+Math.max(0,S-a),C=x-S+Math.min(p,S+a+1);let v=0;for(let k=w;k<C;k++)v+=Math.pow(m[k],2);v=l*v+c;for(let k=w;k<C;k++){let $=-2*l*d*m[k]*g[x]/v;x===k&&($+=Math.pow(v,-d)),$*=f[x],y[k]+=$}}return t.makeTensorInfo(i.shape,r.dtype,y)}u(Kse,"lRNGrad");const Xse={kernelName:Gm,backendName:"cpu",kernelFunc:Kse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=t;let c=r.shape;const l=c.length,d=Pe(o,c);let h=d;const p=xt(h,l);let f=a.data.get(r.dataId).values;if(p!=null){const w=new Array(l);for(let C=0;C<w.length;C++)w[C]=c[p[C]];f=GS(f,c,r.dtype,p,w),h=$t(h.length,l),c=w}be(r,"max"),tn("max",h,l);const[m,g]=Yt(c,h),y=U(g),b=VA(f,y,m,r.dtype),x=a.write(b,m,r.dtype);let S=m;return i&&(S=qt(m,d)),{dataId:x,shape:S,dtype:r.dtype}}u($D,"max$2");const Yse={kernelName:Hd,backendName:"cpu",kernelFunc:$D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;be(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=s,l=1;N(hn(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=Fn(r.shape,o,i,l,a,c);let h;if(d.filterWidth===1&&d.filterHeight===1&&Ge(d.inShape,d.outShape))h=Hr({inputs:{x:r},backend:t});else{const p=t.data.get(r.dataId).values,f=we(r.shape),m=qS(p,r.shape,r.dtype,f,d,"max");h=t.makeTensorInfo(d.outShape,r.dtype,m.values)}return h}u(Qse,"maxPool$2");const Jse={kernelName:jd,backendName:"cpu",kernelFunc:Qse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:c,dataFormat:l}=s;be(r,"maxPool3d");const d=Os(r.shape,o,i,1,a,c,l),h=t.data.get(r.dataId).values,p=CD(h,r.shape,r.dtype,we(r.shape),d,"max");return t.makeTensorInfo(p.shape,"float32",p.values)}u(Zse,"maxPool3D");const ere={kernelName:qd,backendName:"cpu",kernelFunc:Zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:l}=s;be([r,o],"maxPool3DGrad");const d=Os(o.shape,i,a,1,c,l),h=t.bufferSync(o),p=Ute(h,d),f=d.strideDepth,m=d.strideHeight,g=d.strideWidth,y=d.dilationDepth,b=d.dilationHeight,x=d.dilationWidth,S=d.effectiveFilterDepth,w=d.effectiveFilterHeight,C=d.effectiveFilterWidth,v=S-1-d.padInfo.front,k=C-1-d.padInfo.left,$=w-1-d.padInfo.top,T=Oe(o.shape,"float32"),E=t.bufferSync(r);for(let R=0;R<d.batchSize;++R)for(let O=0;O<d.inChannels;++O)for(let L=0;L<d.inDepth;++L)for(let z=0;z<d.inHeight;++z)for(let W=0;W<d.inWidth;++W){const A=L-v,G=z-$,V=W-k;let q=0;for(let Y=0;Y<S;Y+=y){const Q=(A+Y)/f;if(!(Q<0||Q>=d.outDepth||Math.floor(Q)!==Q))for(let ne=0;ne<w;ne+=b){const X=(G+ne)/m;if(!(X<0||X>=d.outHeight||Math.floor(X)!==X))for(let Z=0;Z<C;Z+=x){const se=(V+Z)/g;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;const de=S*w*C-1-p.get(R,Q,X,se,O),me=Y*w*C+ne*C+Z,Ie=de===me?1:0;if(Ie===0)continue;const Ce=E.get(R,Q,X,se,O);q+=Ce*Ie}}}T.set(q,R,L,z,W,O)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}u(tre,"maxPool3DGrad$2");const nre={kernelName:jm,backendName:"cpu",kernelFunc:tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;be([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=s,p=Fn(a.shape,c,l,1,d,h),f=t.data.get(a.dataId).values,m=Oe(p.outShape,a.dtype,SD(f,a.shape,a.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,x=p.dilationWidth,S=p.effectiveFilterHeight,w=p.effectiveFilterWidth,C=w-1-p.padInfo.left,v=S-1-p.padInfo.top,k=Oe(a.shape,"float32"),$=t.data.get(r.dataId).values,T=Oe(r.shape,"float32",$);for(let E=0;E<p.batchSize;++E)for(let R=0;R<p.inChannels;++R)for(let O=0;O<p.inHeight;++O)for(let L=0;L<p.inWidth;++L){const z=O-v,W=L-C;let A=0;for(let G=0;G<S;G+=b){const V=(z+G)/g;if(!(V<0||V>=p.outHeight||Math.floor(V)!==V))for(let q=0;q<w;q+=x){const Y=(W+q)/y;if(Y<0||Y>=p.outWidth||Math.floor(Y)!==Y)continue;const Q=S*w-1-m.get(E,V,Y,R),ne=G*w+q,X=Q===ne?1:0;if(X===0)continue;const Z=T.get(E,V,Y,R);A+=Z*X}}k.set(A,E,O,L,R)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}u(sre,"maxPoolGrad$2");const rre={kernelName:Hm,backendName:"cpu",kernelFunc:sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ore(n,e,t,s,r){const o=we(e),i=qS(n,e,t,o,r,"max"),a=SD(n,e,t,r,!0,s);return[i.values,a.values]}u(ore,"maxPoolWithArgmaxImpl$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ire={kernelName:qm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,c=t;be(s,"MaxPoolWithArgmax");const l=c.data.get(s.dataId).values,d=Fn(s.shape,r,o,[1,1],i),[h,p]=ore(l,s.shape,s.dtype,a,d),f=c.write(h,d.outShape,s.dtype),m=c.write(p,d.outShape,s.dtype);return[{dataId:f,shape:d.outShape,dtype:s.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function are(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=Pe(o,r.shape),l=Yt(r.shape,a)[1],d=U(l),h=[],p=t.makeTensorInfo([],"float32",new Float32Array([d]));h.push(p);const f=ri({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});h.push(f);const m=KS({inputs:{a:f,b:p},backend:t});h.push(m);const g=Fh({inputs:{x:m},backend:t,attrs:{axis:o,keepDims:i}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}u(are,"mean$1");const cre={kernelName:Kd,backendName:"cpu",kernelFunc:are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ure(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;be(r,"min");const a=Pe(o,r.shape);let c=a;const l=xt(c,r.shape.length);let d=r;l!=null&&(d=is({inputs:{x:r},backend:t,attrs:{perm:l}}),c=$t(c.length,r.shape.length)),tn("min",c,d.shape.length);const[h,p]=Yt(d.shape,c),f=U(p),m=Nn(U(h),d.dtype),g=t.data.get(d.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let S=g[x];for(let w=0;w<f;++w){const C=g[x+w];(Number.isNaN(C)||C<S)&&(S=C)}m[b]=S}l!=null&&t.disposeIntermediateTensorInfo(d);const y=t.makeTensorInfo(h,d.dtype,m);if(i){const b=qt(h,a),x=It({inputs:{x:y},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(y),x}return y}u(ure,"min$2");const lre={kernelName:Xd,backendName:"cpu",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;be(r,"mirrorPad");const a=o.map((S,w)=>S[0]+r.shape[w]+S[1]),c=o.map(S=>S[0]),l=o.map((S,w)=>S[0]+r.shape[w]),d=i==="reflect"?0:1,h=t.data.get(r.dataId).values,p=r.shape.length,f=we(r.shape),m=U(a),g=a.length,y=we(a),b=ln(r.dtype,m);for(let S=0;S<m;S++){let w=Gc(S,g,y);for(let v=0;v<g;v++)w[v]<c[v]?w[v]=c[v]*2-w[v]-d:w[v]>=l[v]&&(w[v]=(l[v]-1)*2-w[v]+d);w=w.map((v,k)=>v-c[k]);const C=zr(w,p,f);b[S]=h[C]}return{dataId:t.write(b,a,r.dtype),shape:a,dtype:r.dtype}}u(dre,"mirrorPad");const hre={kernelName:Yd,backendName:"cpu",kernelFunc:dre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pre=Jt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),fre=pn(xu,pre),mre={kernelName:xu,backendName:"cpu",kernelFunc:fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const c=Pe([a],r.shape),l=$D({inputs:{x:r},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),d=qt(l.shape,c),h=It({inputs:{x:l},backend:t,attrs:{shape:d}}),p=jS({inputs:{a:r,b:h},backend:t}),f=_A({inputs:{x:p},backend:t}),m=Fh({inputs:{x:f},backend:t,attrs:{axis:c,keepDims:!1}}),g=It({inputs:{x:m},backend:t,attrs:{shape:d}}),y=KS({inputs:{a:f,b:g},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}u(ND,"softmax$2");const gre={kernelName:fh,backendName:"cpu",kernelFunc:ND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yre(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;be(r,"multinomial");const c=a?r:ND({inputs:{logits:r},backend:t,attrs:{dim:-1}}),l=c.shape[0],d=c.shape[1],h=t.data.get(c.dataId).values,p=[l,o],f=Nn(U(p),"int32");for(let m=0;m<l;++m){const g=m*d,y=new Float32Array(d-1);y[0]=h[g];for(let S=1;S<y.length;++S)y[S]=y[S-1]+h[g+S];const b=Eg.alea(i.toString()),x=m*o;for(let S=0;S<o;++S){const w=b();f[x+S]=y.length;for(let C=0;C<y.length;C++)if(w<y[C]){f[x+S]=C;break}}}return a||t.disposeIntermediateTensorInfo(c),t.makeTensorInfo(p,"int32",f)}u(yre,"multinomial$2");const bre={kernelName:Km,backendName:"cpu",kernelFunc:yre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xre=zg;function wre(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c}=s;be(r,"NonMaxSuppression");const l=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,{selectedIndices:h}=xre(l,d,i,a,c);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}u(wre,"nonMaxSuppressionV3$2");const Sre={kernelName:Xm,backendName:"cpu",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cre=cS;function vre(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,padToMaxOutputSize:l}=s;be(r,"NonMaxSuppressionPadded");const d=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:p,validOutputs:f}=Cre(d,h,i,a,c,l);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}u(vre,"nonMaxSuppressionV4$1");const Ire={kernelName:uw,backendName:"cpu",kernelFunc:vre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kre=Bg;function $re(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,softNmsSigma:l}=s;be(r,"NonMaxSuppressionWithScore");const d=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,p=i,f=a,m=c,g=l,{selectedIndices:y,selectedScores:b}=kre(d,h,p,f,m,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}u($re,"nonMaxSuppressionV5$2");const Nre={kernelName:Ym,backendName:"cpu",kernelFunc:$re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tre(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:c}=s;be(r,"oneHot");const l=U(r.shape),d=new Float32Array(l*i);d.fill(c);const h=t.data.get(r.dataId).values;for(let p=0;p<l;++p)h[p]>=0&&h[p]<i&&(d[p*i+h[p]]=a);return t.makeTensorInfo([...r.shape,i],o,d)}u(Tre,"oneHot$2");const Ere={kernelName:eh,backendName:"cpu",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ca({inputs:{input:s},backend:t}),o=Bf({inputs:{x:r},backend:t}),i=Tc({inputs:{input:s},backend:t}),a=Bf({inputs:{x:i},backend:t}),c=hs({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return XS({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}u(Bf,"zerosLike$2");const _re={kernelName:yh,backendName:"cpu",kernelFunc:Bf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ca({inputs:{input:s},backend:t}),o=TD({inputs:{x:r},backend:t}),i=Tc({inputs:{input:s},backend:t}),a=Bf({inputs:{x:i},backend:t}),c=hs({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return XS({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}u(TD,"onesLike$2");const Rre={kernelName:Zd,backendName:"cpu",kernelFunc:TD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return zf({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(d=>{cs(o,d.shape,"All tensors passed to stack must have matching shapes"),N(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=e.map(d=>{const h=zf({inputs:{input:d},backend:t,attrs:{dim:r}});return a.push(h),h}),l=Ec({inputs:c,backend:t,attrs:{axis:r}});return a.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}u(ED,"pack$2");const Are={kernelName:th,backendName:"cpu",kernelFunc:ED};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;be(r,"pad");const a=o.map((x,S)=>x[0]+r.shape[S]+x[1]),c=o.map(x=>x[0]),l=t.data.get(r.dataId).values,d=U(r.shape),h=r.shape.length,p=we(r.shape),f=U(a),m=a.length,g=we(a),y=ln(r.dtype,f);i!==0&&y.fill(i);for(let x=0;x<d;x++){const w=Gc(x,h,p).map((v,k)=>v+c[k]),C=zr(w,m,g);y[C]=l[x]}return{dataId:t.write(y,a,r.dtype),shape:a,dtype:r.dtype}}u(Dre,"padV2$2");const _D={kernelName:nh,backendName:"cpu",kernelFunc:Dre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ore=Jt((n,e)=>Math.pow(n,e)),Fre=pn(Su,Ore),Pre={kernelName:Su,backendName:"cpu",kernelFunc:Fre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lre(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,a=r.map(y=>t.data.get(y.dataId).values),c=r.map(y=>y.shape),l=t.data.get(o.dataId).values,d=t.data.get(i.dataId).values,[h,p,f]=KA(a,c,l,o.shape,o.dtype,d,i.shape),m=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}u(Lre,"raggedGather$1");const Mre={kernelName:lw,backendName:"cpu",kernelFunc:Lre};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zre(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[l,d]=XA(i,s.shape,s.dtype,a,r.shape,c,o.shape),h=t.makeTensorInfo([l.length],"int32",l),p=t.makeTensorInfo([d.length],s.dtype,d);return[h,p]}u(zre,"raggedRange$1");const Bre={kernelName:dw,backendName:"cpu",kernelFunc:zre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wre(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:c}=s,l=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,p=a.map(y=>t.data.get(y.dataId).values),f=a.map(y=>y.shape),[m,g]=YA(l,r.shape,d,o.shape,o.dtype,h,i.shape,p,f,c);return t.makeTensorInfo(m,o.dtype,g)}u(Wre,"raggedTensorToTensor$1");const Vre={kernelName:hw,backendName:"cpu",kernelFunc:Wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ure(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,a=QA(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}u(Ure,"range$2");const Gre={kernelName:Qm,backendName:"cpu",kernelFunc:Ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hre=yt(Cu,n=>1/n),jre={kernelName:Cu,backendName:"cpu",kernelFunc:Hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qre(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;be(r,"resizeBilinear");const c=we(r.shape),[l,d]=a,[h,p,f,m]=r.shape,g=t.data.get(r.dataId).values,y=new Float32Array(U([h,l,d,m])),b=[o&&l>1?p-1:p,o&&d>1?f-1:f],x=[o&&l>1?l-1:l,o&&d>1?d-1:d];let S=0;const w=b[0]/x[0],C=b[1]/x[1];for(let v=0;v<h;v++)for(let k=0;k<l;k++){let $;i?$=w*(k+.5)-.5:$=w*k;const T=Math.max(0,Math.floor($)),E=$-T,R=Math.min(p-1,Math.ceil($)),O=v*c[0]+T*c[1],L=v*c[0]+R*c[1];for(let z=0;z<d;z++){let W;i?W=C*(z+.5)-.5:W=C*z;const A=Math.max(0,Math.floor(W)),G=W-A,V=Math.min(f-1,Math.ceil(W)),q=O+A*c[2],Y=L+A*c[2],Q=O+V*c[2],ne=L+V*c[2];for(let X=0;X<m;X++){const Z=g[q+X],se=g[Y+X],de=g[Q+X],me=g[ne+X],Ie=Z+(de-Z)*G,Ce=se+(me-se)*G,ke=Ie+(Ce-Ie)*E;y[S++]=ke}}}return t.makeTensorInfo([h,l,d,m],"float32",y)}u(qre,"resizeBilinear$2");const Kre={kernelName:ah,backendName:"cpu",kernelFunc:qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xre(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;be([o,r],"resizeBilinearGrad");const a=we(r.shape),[c,l,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(c*l*d*h),g=[i&&p>1?l-1:l,i&&f>1?d-1:d],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],S=t.data.get(o.dataId).values;let w=0;for(let C=0;C<c;C++){const v=C*a[0];for(let k=0;k<p;k++){const $=k*b,T=Math.floor($),E=Math.min(Math.ceil($),l-1),R=v+T*a[1],O=v+E*a[1],L=$-T,z=1-L;for(let W=0;W<f;W++){const A=W*x,G=Math.floor(A),V=Math.min(Math.ceil(A),d-1),q=A-G,Y=1-q,Q=R+G*a[2],ne=R+V*a[2],X=O+G*a[2],Z=O+V*a[2],se=z*Y,de=z*q,me=L*Y,Ie=L*q;for(let Ce=0;Ce<h;Ce++){const ke=S[w++];m[Q+Ce]+=ke*se,m[ne+Ce]+=ke*de,m[X+Ce]+=ke*me,m[Z+Ce]+=ke*Ie}}}}return t.makeTensorInfo([c,d,l,h],"float32",m)}u(Xre,"resizeBilinearGrad$2");const Yre={kernelName:eg,backendName:"cpu",kernelFunc:Xre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qre(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;be(r,"resizeNearestNeighbor");const c=we(r.shape),[l,d]=a,[h,p,f,m]=r.shape,g=t.data.get(r.dataId).values,y=new Float32Array(h*l*d*m),b=[o&&l>1?p-1:p,o&&d>1?f-1:f],x=[o&&l>1?l-1:l,o&&d>1?d-1:d],S=b[0]/x[0],w=b[1]/x[1];let C=0;for(let v=0;v<h;v++){const k=v*c[0];for(let $=0;$<l;$++){const T=i?S*($+.5):S*$;let E=Math.min(p-1,o?Math.round(T):Math.floor(T));i&&(E=Math.max(0,E));const R=k+E*c[1];for(let O=0;O<d;O++){const L=i?w*(O+.5):w*O;let z=Math.min(f-1,o?Math.round(L):Math.floor(L));i&&(z=Math.max(0,z));const W=R+z*c[2];for(let A=0;A<m;A++){const G=g[W+A];y[C++]=G}}}}return t.makeTensorInfo([h,l,d,m],r.dtype,y)}u(Qre,"resizeNearestNeighbor$2");const Jre={kernelName:ih,backendName:"cpu",kernelFunc:Qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zre(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;be([o,r],"resizeNearestNeighborGrad");const a=we(r.shape),c=we(o.shape),[l,d,h,p]=r.shape,[,f,m]=o.shape,g=new Float32Array(l*d*h*p),y=t.data.get(o.dataId).values,b=[i&&f>1?d-1:d,i&&m>1?h-1:h],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],S=b[0]/x[0],w=b[1]/x[1],C=1/S,v=1/w,k=Math.ceil(C)*2+2,$=Math.ceil(v)*2+2;for(let T=0;T<l;T++){const E=T*a[0];for(let R=0;R<d;R++){const O=E+R*a[1],L=Math.floor(R*C),z=Math.floor(L-k/2);for(let W=0;W<h;W++){const A=O+W*a[2],G=Math.floor(W*v),V=Math.floor(G-$/2);for(let q=0;q<p;q++){let Y=0;for(let Q=0;Q<k;Q++){const ne=Q+z;if(ne<0||ne>=f)continue;const X=E+ne*c[1],Z=ne*S,se=Math.min(d-1,i?Math.round(Z):Math.floor(Z));if(R===se)for(let de=0;de<$;de++){const me=de+V;if(me<0||me>=m)continue;const Ie=X+me*c[2],Ce=me*w,ke=Math.min(h-1,i?Math.round(Ce):Math.floor(Ce));W===ke&&(Y+=y[Ie+q])}}g[A+q]=Y}}}}return t.makeTensorInfo(r.shape,r.dtype,g)}u(Zre,"resizeNearestNeighborGrad$2");const eoe={kernelName:Zm,backendName:"cpu",kernelFunc:Zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function toe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;be(r,"reverse");const i=r.shape.length,a=Pe(o,r.shape);if(i===0)return Hr({inputs:{x:r},backend:t});const c=new on(r.shape,r.dtype),l=t.bufferSync(r);for(let d=0;d<c.size;d++){const h=c.indexToLoc(d),p=h.slice();a.forEach(f=>p[f]=r.shape[f]-1-p[f]),c.set(l.get(...p),...h)}return t.makeTensorInfo(c.shape,c.dtype,c.values)}u(toe,"reverse$2");const noe={kernelName:ch,backendName:"cpu",kernelFunc:toe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const soe={kernelName:pg,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,c=ln(s.dtype,U(s.shape)),[l,d,h,p]=s.shape,[f,m]=qg(i,d,h),g=255,y=Math.sin(r),b=Math.cos(r),x=a.data.get(s.dataId).values;for(let w=0;w<l;w++){const C=w*h*d*p;for(let v=0;v<d;v++){const k=v*(h*p);for(let $=0;$<h;$++){const T=$*p;for(let E=0;E<p;E++){const R=[l,v,$,E],O=R[2],L=R[1];let z=(O-f)*b-(L-m)*y,W=(O-f)*y+(L-m)*b;z=Math.round(z+f),W=Math.round(W+m);let A=o;if(typeof o!="number"&&(E===3?A=g:A=o[E]),z>=0&&z<h&&W>=0&&W<d){const V=W*(h*p),q=z*p,Y=C+V+q+E;A=x[Y]}const G=C+k+T+E;c[G]=A}}}}return{dataId:a.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roe=yt(ku,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),ooe={kernelName:ku,backendName:"cpu",kernelFunc:roe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ioe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Yr(o,r,i),p=!0,f=t.bufferSync(r),m=t.bufferSync(o),g=Mi(f,m,i,h,l,c,a,d,0,p);return t.makeTensorInfo(i,g.dtype,g.values)}u(ioe,"scatterNd$2");const aoe={kernelName:tg,backendName:"cpu",kernelFunc:ioe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function coe(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}u(coe,"lowerBound");function uoe(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}u(uoe,"upperBound");function loe(n,e,t,s,r,o){const i=Ht("int32",t*r);for(let a=0;a<t;++a){const c=n.slice(a*s,(a+1)*s),l=a*r;for(let d=0;d<r;++d)i[l+d]=o==="left"?coe(c,e[d+l]):uoe(c,e[d+l])}return i}u(loe,"searchSortedImpl");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function doe(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,l=loe(a,c,r.shape[0],r.shape[1],o.shape[1],i);return t.makeTensorInfo(o.shape,"int32",l)}u(doe,"searchSorted$2");const hoe={kernelName:sg,backendName:"cpu",kernelFunc:doe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function poe(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;be([s,r,o],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,d=wn(r.dtype,o.dtype),h=Nn(U(r.shape),d);let p=0;const f=i===0||i>1||r.shape.length===1?1:U(r.shape.slice(1));for(let m=0;m<a.length;m++)for(let g=0;g<f;g++)a[m]===1?h[p++]=c[m]:h[p++]=l[m];return t.makeTensorInfo(r.shape,d,h)}u(poe,"select$2");const foe={kernelName:uh,backendName:"cpu",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const moe=kh,goe=$h,yoe=yt(Nu,n=>n>=0?goe*n:moe*(Math.exp(n)-1)),boe={kernelName:Nu,backendName:"cpu",kernelFunc:yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xoe=yt(_u,n=>n<0?-1:n>0?1:0),woe={kernelName:_u,backendName:"cpu",kernelFunc:xoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Soe=yt(Tu,n=>Math.sin(n)),Coe={kernelName:Tu,backendName:"cpu",kernelFunc:Soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const voe=yt(Eu,n=>Math.sinh(n)),Ioe={kernelName:Eu,backendName:"cpu",kernelFunc:voe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const koe=11920928955078125e-23,bI=Math.log(koe)+2,$oe=yt(Au,n=>{const e=n>-bI,t=n<bI,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),Noe={kernelName:Au,backendName:"cpu",kernelFunc:$oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Toe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;be([r],"spaceToBatchND");const a=U(o),c=[[0,0]];c.push(...i);for(let v=1+o.length;v<r.shape.length;++v)c.push([0,0]);const l=_D.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),d=va(l.shape,o,a,!1),h=Ia(d.length,o.length,!1),p=ka(l.shape,o,a,!1),g=It({inputs:{x:l},backend:t,attrs:{shape:d}}),x=is({inputs:{x:g},backend:t,attrs:{perm:h}}),C=It({inputs:{x},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),C}u(Toe,"spaceToBatchND$2");const Eoe={kernelName:hh,backendName:"cpu",kernelFunc:Toe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _oe(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,d=t.data.get(i.dataId).values[0],[h,p,f,m,g]=tD(a,s.shape,s.dtype,c,r.dtype,l,d);return[t.makeTensorInfo(p,s.dtype,h),t.makeTensorInfo([p[0]],r.dtype,f),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}u(_oe,"sparseFillEmptyRows$1");const Roe={kernelName:pw,backendName:"cpu",kernelFunc:_oe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aoe(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,c=Array.from(t.data.get(o.dataId).values),[l,d,h]=nD(a,s.shape,s.dtype,i,c);return[t.makeTensorInfo(d,s.dtype,l),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}u(Aoe,"sparseReshape$1");const Doe={kernelName:fw,backendName:"cpu",kernelFunc:Aoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[l,d]=HS(i,s.shape,s.dtype,a,c,!0);return t.makeTensorInfo(d,s.dtype,l)}u(Ooe,"sparseSegmentMean$2");const Foe={kernelName:rg,backendName:"cpu",kernelFunc:Ooe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Poe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[l,d]=HS(i,s.shape,s.dtype,a,c);return t.makeTensorInfo(d,s.dtype,l)}u(Poe,"sparseSegmentSum$2");const Loe={kernelName:og,backendName:"cpu",kernelFunc:Poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Moe(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=Yr(o,r,a),f=!1,m=t.bufferSync(r);let g;switch(o.dtype){case"bool":{const y=t.bufferSync(o),b=!!t.data.get(i.dataId).values[0];g=Mi(m,y,a,p,d,l,c,h,b,f);break}case"float32":{const y=t.bufferSync(o),b=t.data.get(i.dataId).values[0];g=Mi(m,y,a,p,d,l,c,h,b,f);break}case"int32":{const y=t.bufferSync(o),b=t.data.get(i.dataId).values[0];g=Mi(m,y,a,p,d,l,c,h,b,f);break}case"string":{const y=t.bufferSync(o),b=yr(t.data.get(i.dataId).values[0]);g=Mi(m,y,a,p,d,l,c,h,b,f);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(a,g.dtype,g.values)}u(Moe,"sparseToDense$2");const zoe={kernelName:ig,backendName:"cpu",kernelFunc:Moe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Boe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Pe(i,r.shape)[0],c=ay(r,o,a),l=new Array(r.shape.length).fill(0),d=r.shape.slice();return c.map(h=>{const p=[...d];p[a]=h;const f=ua({inputs:{x:r},backend:t,attrs:{begin:l,size:p}});return l[a]+=h,f})}u(Boe,"splitV$2");const Woe={kernelName:ph,backendName:"cpu",kernelFunc:Boe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Voe={kernelName:ag,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;be(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const c=r[a];o[a]=c*c}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uoe=yt(zu,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),Goe={kernelName:zu,backendName:"cpu",kernelFunc:Uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=s;be(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:S,strides:w}=Gg(r.shape,o,i,a,c,l,d,h,p);let C;if(g)C=It({inputs:{x:r},backend:t,attrs:{shape:m}});else if(y||b){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const v=Ug(x,S,w),k=ua({inputs:{x:r},backend:t,attrs:{begin:x,size:v}});C=It({inputs:{x:k},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(k)}else{const v=t.bufferSync(r),k=oD(f,v,w,x);C=t.makeTensorInfo(m,k.dtype,k.values)}return C}u(Hoe,"stridedSlice$2");const joe={kernelName:ug,backendName:"cpu",kernelFunc:Hoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qoe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:c,preserveShortSequences:l}=s,{data:d,dataSplits:h}=e,p=t.data.get(d.dataId).values,f=t.data.get(h.dataId).values,[m,g]=iD(p,f,r,o,i,a,c,l);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",g)]}u(qoe,"stringNGrams$2");const Koe={kernelName:lg,backendName:"cpu",kernelFunc:qoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xoe(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values[0],[l,d,h]=aD(a,c,r),p=d.length;return[t.makeTensorInfo([p,2],"int32",l),t.makeTensorInfo([p],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(h))]}u(Xoe,"stringSplit$1");const Yoe={kernelName:mw,backendName:"cpu",kernelFunc:Xoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qoe(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(o.dataId).values,a=cD(i,r);return t.makeTensorInfo(o.shape,"int32",a)}u(Qoe,"stringToHashBucketFast$1");const Joe={kernelName:gw,backendName:"cpu",kernelFunc:Qoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zoe=yt(Pu,n=>Math.tan(n)),eie={kernelName:Pu,backendName:"cpu",kernelFunc:Zoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tie=yt(Lu,n=>Math.tanh(n)),nie={kernelName:Lu,backendName:"cpu",kernelFunc:tie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sie(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:i,numUpdates:a,sliceSize:c,strides:l,outputSize:d}=Yr(o,r,s.shape),h=!1,p=t.bufferSync(r),f=t.bufferSync(o),m=t.bufferSync(s),g=Mi(p,f,s.shape,d,c,a,i,l,m,h);return t.makeTensorInfo(s.shape,g.dtype,g.values)}u(sie,"tensorScatterUpdate$2");const rie={kernelName:ng,backendName:"cpu",kernelFunc:sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;be(r,"tile");const i=lD(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}u(oie,"tile$2");const iie={kernelName:Mu,backendName:"cpu",kernelFunc:oie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;be(r,"topk");const a=t.data.get(r.dataId).values,[c,l]=hD(a,r.shape,r.dtype,o,i);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}u(aie,"topK$2");const cie={kernelName:dg,backendName:"cpu",kernelFunc:aie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uie(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:c,outputShape:l}=t,[d,h,p,f]=r.shape,[m,g]=l??[h,p],y=[d,m,g,f],b=we(r.shape),x=b[0],S=b[1],w=b[2],C=we(y),v=C[0],k=C[1],$=C[2],T=ln(r.dtype,U(y));T.fill(c);const E=s.data.get(r.dataId).values,R=s.data.get(o.dataId).values;for(let L=0;L<d;++L){const z=o.shape[0]===1?R:R.subarray(L*8,L*8+8);for(let W=0;W<m;++W)for(let A=0;A<g;++A)for(let G=0;G<f;++G){let V;const q=z[6]*A+z[7]*W+1;if(q===0)continue;const Y=(z[0]*A+z[1]*W+z[2])/q,Q=(z[3]*A+z[4]*W+z[5])/q,ne=xI(Y,p,a),X=xI(Q,h,a);switch(i){case"nearest":V=mie(E,h,p,x,S,w,L,X,ne,G,c);break;case"bilinear":V=gie(E,h,p,x,S,w,L,X,ne,G,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const Z=L*v+W*k+A*$+G;T[Z]=V}return s.makeTensorInfo(y,r.dtype,T)}return{dataId:s.write(T,y,r.dtype),shape:r.shape,dtype:r.dtype}}u(uie,"transform$2");const lie={kernelName:hg,backendName:"cpu",kernelFunc:uie};function xI(n,e,t){switch(t){case"reflect":return die(n,e);case"wrap":return hie(n,e);case"nearest":return fie(n,e);case"constant":default:return pie(n)}}u(xI,"mapCoord");function die(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Yi(0,t,e-1)}u(die,"mapCoordReflect");function hie(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Yi(0,t,e-1)}u(hie,"mapCoordWrap");function pie(n,e){return n}u(pie,"mapCoordConstant");function fie(n,e){return Yi(0,n,e-1)}u(fie,"mapCoordNearest");function ml(n,e,t,s,r,o,i,a,c,l,d){const h=i*s+a*r+c*o+l;return 0<=a&&a<e&&0<=c&&c<t?n[h]:d}u(ml,"readWithFillValue");function mie(n,e,t,s,r,o,i,a,c,l,d){const h=Math.round(a),p=Math.round(c);return ml(n,e,t,s,r,o,i,h,p,l,d)}u(mie,"nearestInterpolation");function gie(n,e,t,s,r,o,i,a,c,l,d){const h=Math.floor(a),p=Math.floor(c),f=h+1,m=p+1,g=(m-c)*ml(n,e,t,s,r,o,i,h,p,l,d)+(c-p)*ml(n,e,t,s,r,o,i,h,m,l,d),y=(m-c)*ml(n,e,t,s,r,o,i,f,p,l,d)+(c-p)*ml(n,e,t,s,r,o,i,f,m,l,d);return(f-a)*g+(a-h)*y}u(gie,"bilinearInterpolation");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yie(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;be(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:c,indices:l}=pD(i,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}u(yie,"unique$1");const bie={kernelName:yw,backendName:"cpu",kernelFunc:yie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xie(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],c=new Array(i-1);let l=0;for(let f=0;f<i;f++)f!==o&&(c[l++]=r.shape[f]);const d=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const p=new Array(a);for(let f=0;f<p.length;f++){d[o]=f;const m=ua({inputs:{x:r},backend:t,attrs:{begin:d,size:h}});p[f]=It({inputs:{x:m},backend:t,attrs:{shape:c}}),t.disposeIntermediateTensorInfo(m)}return p}u(xie,"unpack$2");const wie={kernelName:mh,backendName:"cpu",kernelFunc:xie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;be(r,"unsortedSegmentSum");const a=r.shape.length,c=o.shape.length,l=[],d=[],h=a-c;let p=o;for(let m=0;m<h;++m){const g=zf({inputs:{input:p},backend:t,attrs:{dim:m+1}});p=g,d.push(g)}for(let m=0;m<i;++m){const g=li(m,"int32"),y=t.makeTensorInfo([],"int32",g),b=TA({inputs:{a:y,b:p},backend:t}),x=ri({inputs:{x:b},backend:t,attrs:{dtype:"float32"}}),S=wy({inputs:{a:x,b:r},backend:t}),w=Fh({inputs:{x:S},backend:t,attrs:{axis:0,keepDims:!1}});l.push(w),d.push(y),d.push(b),d.push(x),d.push(S),d.push(w)}const f=ED({inputs:l,backend:t,attrs:{axis:0}});return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}u(Sie,"unsortedSegmentSum$2");const Cie={kernelName:gh,backendName:"cpu",kernelFunc:Sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vie=[yte,JZ,xte,Ste,ree,vte,kte,Nte,Ete,Rte,Dte,Fte,Lte,Bte,Vte,Hte,qte,Xte,Qte,mte,Zte,tne,sne,iee,one,nee,cee,ane,ZZ,une,dne,hne,fne,gne,bne,wne,Cne,Ine,$ne,Tne,_ne,Ane,One,Pne,Lne,zne,Wne,Une,Gne,Hne,jne,Kne,Qne,cte,Zne,uee,ase,lee,cse,hee,fse,mse,yse,fee,gee,xse,Sse,vse,kse,bee,wee,eee,Nse,lne,Ese,Rse,Dse,ute,Cee,Iee,Fse,$ee,Lse,Bse,Vse,Hse,qse,Xse,Yse,Tee,Jse,ere,nre,rre,ire,cre,lre,_ee,hre,mre,bre,Aee,Oee,Sre,Ire,Nre,Pee,Ere,Rre,Are,_D,Pre,dte,zee,Mre,Bre,Vre,Gre,tee,Qx,jre,hte,pte,fte,Kre,Yre,Jre,eoe,noe,soe,ooe,qee,aoe,hoe,foe,boe,Xee,woe,Coe,Ioe,Yee,gre,Noe,Eoe,Roe,Doe,Foe,Loe,zoe,Woe,Zee,Voe,tte,ste,Goe,joe,Koe,Yoe,Joe,ate,Xne,eie,nie,rie,iie,cie,lie,Lee,bie,wie,Cie,_re];for(const n of vie)bw(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ri={},fp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Iie(n,e){Ri[n]=e}u(Iie,"setWebGLContext");function vr(n,e){if(!(n in Ri)||e!=null){const s=$ie(n,e);if(s!==null)Ri[n]=s;else return null}const t=Ri[n];return t==null||t.isContextLost()?(delete Ri[n],vr(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ri[n])}u(vr,"getWebGLContext");function kie(n){if(!j().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}u(kie,"createCanvas");function $ie(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??kie(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Ri[n]},!1),j().getBool("SOFTWARE_WEBGL_ENABLED")&&(fp.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",fp)||t.getContext("experimental-webgl",fp):t.getContext("webgl2",fp)}u($ie,"getWebGLRenderingContext");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ql;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Ql||(Ql={}));var Es;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Es||(Es={}));var kn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(kn||(kn={}));function Ph(n,e){return[e,n]}u(Ph,"getUnpackedMatrixTextureShapeWidthHeight");function Nie(n,e){return n*e}u(Nie,"getUnpackedArraySizeFromMatrixSize");function mp(n){const e=U(n),t=Math.ceil(e/4);return ix(t)}u(mp,"getDenseTexShape");function ju(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}u(ju,"getPackedMatrixTextureShapeWidthHeight");function Tie(n,e){const[t,s]=ju(n,e);return t*s*4}u(Tie,"getPackedRGBAArraySizeFromMatrixShape");function YS(n,e){const t=n;let s,r,o,i,a,c,l,d,h,p;return j().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,l=4,d=1,h=t.HALF_FLOAT,p=t.FLOAT,c=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,l=4,d=4,h=e!=null?e.HALF_FLOAT_OES:null,p=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}u(YS,"getTextureConfig");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(n,e){const t=e();return j().getBool("DEBUG")&&Eie(n),t}u(he,"callAndCheck");function Eie(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Die(n,e))}u(Eie,"checkWebGLError");const _ie=596e-10,Rie=65504;function Aie(n){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||_ie<Math.abs(n)&&Math.abs(n)<Rie)}u(Aie,"canBeRepresented");function Die(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}u(Die,"getWebGLErrorMessage");function gp(n,e){return $o(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}u(gp,"getExtensionOrThrow");function Oie(n,e){const t=$o(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(he(n,()=>n.shaderSource(t,e)),he(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw n.getShaderInfoLog(t),new Error("Failed to compile vertex shader.");return t}u(Oie,"createVertexShader$1");function Fie(n,e){const t=$o(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(he(n,()=>n.shaderSource(t,e)),he(n,()=>n.compileShader(t)),j().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw RD(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}u(Fie,"createFragmentShader");const Pie=/ERROR: [0-9]+:([0-9]+):/g;function RD(n,e){const t=Pie.exec(e);if(t==null){`${e}`;return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((h,p)=>rc((p+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const c=i.slice(0,s-1),l=i.slice(s-1,s),d=i.slice(s);c.join(`
`),e.split(`
`)[0],`${rc(l[0],a)}`,d.join(`
`)}u(RD,"logShaderSourceAndInfoLog");function Lie(n){return $o(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}u(Lie,"createProgram");function Mie(n,e){if(he(n,()=>n.linkProgram(e)),!j().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw n.getProgramInfoLog(e),new Error("Failed to link vertex and fragment shaders.")}u(Mie,"linkProgram");function lb(n,e){if(he(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw n.getProgramInfoLog(e),new Error("Shader program validation failed.")}u(lb,"validateProgram");function zie(n,e){const t=$o(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return he(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),he(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}u(zie,"createStaticVertexBuffer");function Bie(n,e){const t=$o(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return he(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),he(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}u(Bie,"createStaticIndexBuffer");function Wie(n){return $o(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}u(Wie,"createTexture");function Vie(n,e){const t=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}u(Vie,"validateTextureSize");function Uie(n){return $o(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}u(Uie,"createFramebuffer");function wI(n,e,t,s,r,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(he(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),he(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),he(n,()=>n.enableVertexAttribArray(a)),!0)}u(wI,"bindVertexBufferToProgramAttribute");function Gie(n,e,t){Xie(n,t),he(n,()=>n.activeTexture(n.TEXTURE0+t)),he(n,()=>n.bindTexture(n.TEXTURE_2D,e))}u(Gie,"bindTextureUnit");function Hie(n,e,t){return $o(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}u(Hie,"getProgramUniformLocationOrThrow");function jie(n,e,t){return n.getUniformLocation(e,t)}u(jie,"getProgramUniformLocation");function qie(n,e,t,s){he(n,()=>Gie(n,e,s)),he(n,()=>n.uniform1i(t,s))}u(qie,"bindTextureToProgramUniformSampler");function db(n,e,t){he(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),he(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}u(db,"bindColorTextureToFramebuffer");function SI(n,e){he(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),he(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}u(SI,"unbindColorTextureFromFramebuffer");function yp(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Kie(n,e))}u(yp,"validateFramebuffer");function Kie(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}u(Kie,"getFramebufferErrorMessage");function $o(n,e,t){const s=he(n,()=>e());if(s==null)throw new Error(t);return s}u($o,"throwIfNull");function Xie(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}u(Xie,"validateTextureUnit");function _c(n,e=2){return U(n.slice(0,n.length-e))}u(_c,"getBatchDim");function Rc(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}u(Rc,"getRowsCols");function bp(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[_c(n),...Rc(n)]),e}u(bp,"getShapeAs3D");function Yie(n,e=!1){let t=j().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=j().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&j().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,c)=>c>=n.length-2?rw(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=ui(n).newShape);let r=U(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=_c(n);let c=2,l=2;n.length&&([c,l]=Rc(n)),r=a*(c/2)*(l/2),o=ix(r).map(d=>d*2)}else o=ix(r);return o}u(Yie,"getTextureShapeFromLogicalShape");function xp(n){return n%2===0}u(xp,"isEven");function Wf(n,e){if(n=n.slice(-2),e=e.slice(-2),Ge(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||xp(t)&&xp(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&xp(n[0])&&xp(e[0])}u(Wf,"isReshapeFree");let hb,pb;function Qie(n){if(hb==null){const e=vr(n);hb=e.getParameter(e.MAX_TEXTURE_SIZE)}return hb}u(Qie,"getWebGLMaxTextureSize");function Jie(n){if(pb==null){const e=vr(n);pb=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,pb)}u(Jie,"getMaxTexturesInShader");function Zie(n){if(n===0)return 0;let e;const t=vr(n);return Ys(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Ys(t,"EXT_disjoint_timer_query")?e=1:e=0,e}u(Zie,"getWebGLDisjointQueryTimerVersion");function Ys(n,e){return n.getExtension(e)!=null}u(Ys,"hasExtension");function CI(n){try{if(vr(n)!=null)return!0}catch(e){return!1}return!1}u(CI,"isWebGLVersionEnabled");function eae(n){if(n===0)return!1;const e=vr(n);if(n===1){if(!Ys(e,"OES_texture_float"))return!1}else if(!Ys(e,"EXT_color_buffer_float"))return!1;return Zx(e)}u(eae,"isCapableOfRenderingToFloatTexture");function tae(n){if(n===0)return!1;const e=vr(n);if(n===1){if(!Ys(e,"OES_texture_float")||!Ys(e,"WEBGL_color_buffer_float"))return!1}else{if(Ys(e,"EXT_color_buffer_float"))return Zx(e);const s="EXT_color_buffer_half_float";if(Ys(e,s)){const r=e.getExtension(s);return nae(e,r)}return!1}return Zx(e)}u(tae,"isDownloadFloatTextureEnabled");function Zx(n){const e=YS(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}u(Zx,"createFloatTextureAndBindToFramebuffer");function nae(n,e){const t=YS(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}u(nae,"createHalfFloatTextureAndBindToFramebuffer");function sae(n){return n!==2?!1:vr(n).fenceSync!=null}u(sae,"isWebGLFenceEnabled");function Lh(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&N(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}u(Lh,"assertNotComplex$1");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xe=j();xe.registerFlag("HAS_WEBGL",()=>xe.getNumber("WEBGL_VERSION")>0);xe.registerFlag("WEBGL_VERSION",()=>CI(2)?2:CI(1)?1:0);xe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);xe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>xe.get("WEBGL_VERSION")===2);xe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);xe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);xe.registerFlag("WEBGL_PACK",()=>xe.getBool("HAS_WEBGL"));xe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_CLIP",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_REDUCE",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_LAZILY_UNPACK",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_CONV_IM2COL",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Qie(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Jie(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=xe.getNumber("WEBGL_VERSION");return n===0?0:Zie(n)});xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>xe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!LN());xe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>eae(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>xe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:xe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));xe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>tae(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>sae(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>xe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);xe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});xe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>LN()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});xe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);xe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);xe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);xe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);xe.registerFlag("WEBGL_EXP_CONV",()=>!1);xe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>xe.getBool("IS_TEST"));xe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);xe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);xe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);xe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(){let n,e,t,s,r,o,i,a,c,l;return j().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=j().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:c,defineRound:l}}u(jn,"getGlslDifferences");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ta(n,e,t="index"){const s=we(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}u(Ta,"getLogicalCoordinatesFromFlatIndex");function Sy(n,e,t="index"){const s=we(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}u(Sy,"getOutputLogicalCoordinatesFromFlatIndexByUniform");function rae(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}u(rae,"symbolicallyComputeStrides$1");function oae(n,e,t="index"){const s=n.map((o,i)=>i),r=rae(s,e);return r.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${r[i]}`,c=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${c};`}).join("")}u(oae,"getLogicalCoordinatesFromFlatIndexByUniform");function QS(n){const e=we(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}u(QS,"getFlatIndexFrom3D");function JS(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}u(JS,"getFlatIndexFrom3DOutput");const AD=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:DD}=CY;function iae(n,e,t){const s=[];if(n.forEach(f=>{const m=U(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:g}=ZS(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(f=>aae(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=jn(),c=lae(a);let l,d,h=pae(a);return e.isPacked?(l=cae(e.logicalShape,i,t.enableShapeUniforms),d=hae(a)):(l=uae(e.logicalShape,i,t.enableShapeUniforms),d=dae(a)),t.packedInputs&&(h+=yae),[h,c,d,r,l,o,t.userCode].join(`
`)}u(iae,"makeShader$1");function qu(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return Eae(n,e);case 1:return Rae(n,e);case 2:return Dae(n,e);case 3:return Fae(n,e);case 4:return Lae(n,e);case 5:return Mae(n);case 6:return zae(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}u(qu,"getSamplerFromInInfo");function OD(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return Tae(n);case 1:return _ae(n,e);case 2:return Aae(n,e);case 3:return Oae(n,e);default:return Pae(n,e)}}u(OD,"getPackedSamplerFromInInfo");function aae(n,e,t=!1,s){let r="";t?r+=OD(n,s):r+=qu(n,s);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?r+=Bae(n,e):r+=Wae(n,e)),r}u(aae,"getInputSamplingSnippet");function cae(n,e,t){switch(n.length){case 0:return FD();case 1:return bae(n,e,t);case 2:return $ae(n,e,t);case 3:return wae(n,e,t);default:return Cae(n,e,t)}}u(cae,"getPackedOutputSamplingSnippet");function uae(n,e,t){switch(n.length){case 0:return FD();case 1:return xae(n,e,t);case 2:return Nae(n,e,t);case 3:return Sae(n,e,t);case 4:return vae(n,e,t);case 5:return Iae(n,e);case 6:return kae(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}u(uae,"getOutputSamplingSnippet");function lae(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}u(lae,"getFloatTextureSampleSnippet");function dae(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}u(dae,"getFloatTextureSetRSnippet");function hae(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}u(hae,"getFloatTextureSetRGBASnippet");function pae(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${fae}
    ${mae}
    ${gae}
  `}u(pae,"getShaderPrefix");const fae=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,mae=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gae=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yae=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function FD(){return`
    int getOutputCoords() {
      return 0;
    }
  `}u(FD,"getOutputScalarCoords");function bae(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}u(bae,"getOutputPacked1DCoords");function xae(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}u(xae,"getOutput1DCoords");function wae(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}u(wae,"getOutputPacked3DCoords");function Sae(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Sy(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Ta(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}u(Sae,"getOutput3DCoords");function Cae(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",c="b, r, c";for(let l=2;l<n.length-1;l++)i*=n[n.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,c=`b${l}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${c});
    }
  `}u(Cae,"getOutputPackedNDCoords");function vae(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Sy(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Ta(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}u(vae,"getOutput4DCoords");function Iae(n,e){const t=Ta(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}u(Iae,"getOutput5DCoords");function kae(n,e){const t=Ta(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}u(kae,"getOutput6DCoords");function $ae(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ge(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}u($ae,"getOutputPacked2DCoords");function Nae(n,e,t){return Ge(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}u(Nae,"getOutput2DCoords");function Ea(n){return`offset${n}`}u(Ea,"getFlatOffsetUniformName");function Tae(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=jn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}u(Tae,"getPackedSamplerScalar");function Eae(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Ea(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${c}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}u(Eae,"getSamplerScalar");function _ae(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=jn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}u(_ae,"getPackedSampler1D");function Rae(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Ku(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Ea(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}u(Rae,"getSampler1D");function Aae(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],c=jn();if(o!=null&&Ge(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${l[0]}, ${l[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}u(Aae,"getPackedSampler2D");function Dae(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Ge(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const p=o[0],f=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=ui(t),c=i;if(c.length<t.length){const p=Xu(n,c),f=["row","col"];return`
      ${qu(p,e)}
      float ${r}(int row, int col) {
        return ${r}(${Yu(f,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ku(n)}
      }
    `;const l=o[0],d=o[1],h=Ea(s);return d===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${d}, index);
    return sampleTexture(${s}, uv);
  }
`}u(Dae,"getSampler2D");function Oae(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const p=t.slice(1),f=[1,2],m=Xu(n,p),g=["b","row","col"];return`
        ${OD(m,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Yu(g,f)});
        }
      `}const a=jn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const c=i[0],l=i[1],d=Math.ceil(t[2]/2),h=d*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${h}, ${d}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}u(Oae,"getPackedSampler3D");function Fae(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:c}=ui(t),l=a;if(l.length<t.length){const g=Xu(n,l),y=["row","col","depth"];return`
        ${qu(g,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Yu(y,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${Ku(n)}
      }
    `;const d=n.shapeInfo.texShape,h=d[0],p=d[1],f=n.shapeInfo.flatOffset;if(p===o&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===i&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const m=Ea(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}u(Fae,"getSampler3D");function Pae(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=jn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=c[0],d=c[1],h=Math.ceil(o[i-1]/2);let p=h*Math.ceil(o[i-2]/2),f="int b, int row, int col",m=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<i-1;g++)f=`int b${g}, `+f,p*=o[i-g-1],m=`b${g} * ${p} + `+m;return`
    vec4 ${s}(${f}) {
      int index = ${m};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${l});
      return ${r.texture2D}(${t}, uv);
    }
  `}u(Pae,"getPackedSamplerND");function Lae(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:c,keptDims:l}=ui(t);if(c.length<t.length){const x=Xu(n,c),S=["row","col","depth","depth2"];return`
      ${qu(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Yu(S,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${Ku(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1],m=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(f===a&&d==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===o&&d==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;const b=Ea(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${p}, ${f}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}u(Lae,"getSampler4D");function Mae(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:c,keptDims:l}=ui(e);if(c.length<e.length){const g=Xu(n,c),y=["row","col","depth","depth2","depth3"];return`
      ${qu(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Yu(y,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${Ku(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===a&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===r&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Ea(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}u(Mae,"getSampler5D");function zae(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=ui(e);if(r.length<e.length){const y=Xu(n,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${qu(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Yu(b,o)});
      }
    `}const i=e[5],a=e[4]*i,c=e[3]*a,l=e[2]*c,d=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${l}, ${c}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Ku(n)}
      }
    `;const h=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${c}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Ea(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${l} + depth * ${c} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}u(zae,"getSampler6D");function Ku(n){const e=n.name,t=U(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}u(Ku,"getUniformSampler");function Bae(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=DD(n.shapeInfo.logicalShape,e.logicalShape),c=bt(i),l=i-o;let d;const h=["x","y","z","w","u","v"];o===0?d="":i<2&&a.length>=1?d="coords = 0;":d=a.map(x=>`coords.${h[x+l]} = 0;`).join(`
`);let p="";i<2&&o>0?p="coords":p=n.shapeInfo.logicalShape.map((x,S)=>`coords.${h[S+l]}`).join(", ");let f="return outputValue;";const g=U(n.shapeInfo.logicalShape)===1,b=U(e.logicalShape)===1;if(o===1&&!g&&!b)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!b)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const x=o-2,S=o-1;a.indexOf(x)>-1&&a.indexOf(S)>-1?f="return vec4(outputValue.x);":a.indexOf(x)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(S)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${s}(${p});
      ${f}
    }
  `}u(Bae,"getPackedSamplerAtOutputCoords");function Wae(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===c&&n.shapeInfo.flatOffset==null&&Ge(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=bt(c),d=DD(n.shapeInfo.logicalShape,e.logicalShape),h=c-a;let p;const f=["x","y","z","w","u","v"];a===0?p="":c<2&&d.length>=1?p="coords = 0;":p=d.map(g=>`coords.${f[g+h]} = 0;`).join(`
`);let m="";return c<2&&a>0?m="coords":m=n.shapeInfo.logicalShape.map((g,y)=>`coords.${f[y+h]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${p}
      return get${s}(${m});
    }
  `}u(Wae,"getSamplerAtOutputCoords");function bt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}u(bt,"getCoordsDataType$1");function ZS(n,e,t){const{newShape:s,keptDims:r}=ui(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):s,c=!n&&o>1&&!Ge(e,t)&&s.length<o||i;return{useSqueezeShape:c,uniformShape:c?a:e,keptDims:r}}u(ZS,"getUniformInfoFromShape");function Xu(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}u(Xu,"squeezeInputInfo");function Yu(n,e){return e.map(t=>n[t]).join(", ")}u(Yu,"getSqueezedParams");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vae(n,e,t,s){const r=t.map((d,h)=>{const p={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(p.flatOffset=d.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:p}}),o=r.map(d=>d.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=iae(r,i,e),c=Fie(n.gl,a),l=n.createProgram(c);return j().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:a,webGLProgram:l,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(l),Object.assign({program:e,fragmentShader:c,source:a,webGLProgram:l,inShapeInfos:o,outShapeInfo:i},PD(n,e,l)))}u(Vae,"compileProgram$1");function PD(n,e,t){const s=[],r=[];let o,i,a,c=null,l=null;l=n.getUniformLocation(t,"NAN",!1),j().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(t,"INFINITY",!1));const d=!1;for(const h of e.variableNames){const p={name:h,uniform:n.getUniformLocation(t,h,d),offset:n.getUniformLocation(t,`offset${h}`,d)};e.enableShapeUniforms&&(p.shape=n.getUniformLocation(t,`${h}Shape`,d),p.texShape=n.getUniformLocation(t,`${h}TexShape`,d)),s.push(p)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",d),a=n.getUniformLocation(t,"outShapeStrides",d),i=n.getUniformLocation(t,"outTexShape",d)),e.customUniforms)for(const h of e.customUniforms)r.push(n.getUniformLocation(t,h.name,d));return{variablesLocations:s,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}u(PD,"getUniformLocations");function vI(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!Ge(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,c=o.isUniform?null:o.texData.texShape;if(!Ge(a,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${c} must match`)})}u(vI,"validateBinaryAndProgram");function Uae(n,e,t,s,r){e.program.enableShapeUniforms||(vI(e.inShapeInfos,t),vI([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),j().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<t.length;++c){const l=t[c],{uniform:d,offset:h,shape:p,texShape:f}=e.variablesLocations[c];if(p){const{uniformShape:m}=ZS(e.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(p,new Int32Array(m));break;case 2:n.gl.uniform2iv(p,new Int32Array(m));break;case 3:n.gl.uniform3iv(p,new Int32Array(m));break;case 4:n.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(U(l.shape)<2)n.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(d,m)}continue}l.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,d,c)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const c=we(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let c=0;c<e.program.customUniforms.length;++c){const l=e.program.customUniforms[c],d=e.customUniformLocations[c],h=r[c];if(l.type==="float")n.gl.uniform1fv(d,h);else if(l.type==="vec2")n.gl.uniform2fv(d,h);else if(l.type==="vec3")n.gl.uniform3fv(d,h);else if(l.type==="vec4")n.gl.uniform4fv(d,h);else if(l.type==="int")n.gl.uniform1iv(d,h);else if(l.type==="ivec2")n.gl.uniform2iv(d,h);else if(l.type==="ivec3")n.gl.uniform3iv(d,h);else if(l.type==="ivec4")n.gl.uniform4iv(d,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}n.executeProgram()}u(Uae,"runProgram");function Gae(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const c=i.texData.texShape,{useSqueezeShape:l,uniformShape:d,keptDims:h}=ZS(n.packedInputs,i.shape,c);let p="",f="",m="";if(d.length===1&&n.packedInputs){const C=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];p=`${C[0]>1}_${C[1]>1}`}else if(d.length===2&&!n.packedInputs)f=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!n.packedInputs){const C=we(d);m=`${C[0]===c[1]}_${C[C.length-1]===c[1]}`}const g=i.shape.length,y=d.length===2&&Ge(i.shape,c),b=U(i.shape)===1,x=Zo(i.shape,t.shape),S=!n.packedInputs&&g===t.shape.length&&Ge(c,t.texData.texShape),w=n.packedInputs||d.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${g}_${S}_${l?h:""}_${d.length}_${b}_${x}_${y}_${p}_${f}_${m}_${w}_${a}`}else{const c=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${c}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${j().getNumber("WEBGL_VERSION")}`,o}u(Gae,"makeShaderKey$1");function Ln(n){return j().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}u(Ln,"useShapeUniforms");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hae{static{u(this,"DecodeMatrixProgram")}constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ql.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=jn();this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Sy(["r","c","d"],e):Ta(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jae{static{u(this,"DecodeMatrixPackedProgram")}constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ql.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=jn();this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Sy(["r","c","d"],e):Ta(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qae{static{u(this,"EncodeFloatProgram")}constructor(e){this.variableNames=["A"],this.outTexUsage=Es.DOWNLOAD;const t=jn();this.outputShape=e,this.userCode=`
      ${AD}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kae{static{u(this,"EncodeFloatPackedProgram")}constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Es.DOWNLOAD;const t=jn();this.outputShape=e,this.userCode=`
      ${AD}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xae={R:0,G:1,B:2,A:3};class II{static{u(this,"EncodeMatrixProgram")}constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=jn();this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const c=s[a];i+=`
          if(offset == ${a}) {
            result = values[${Xae[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?JS():QS(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yae{static{u(this,"EncodeMatrixPackedProgram")}constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=jn();this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const c=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?JS():QS(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qae(n){const e=jn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Oie(n,t)}u(Qae,"createVertexShader");function Jae(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return zie(n,e)}u(Jae,"createVertexBuffer");function Zae(n){const e=new Uint16Array([0,1,2,2,1,3]);return Bie(n,e)}u(Zae,"createIndexBuffer");function Mh(n,e,t,s,r,o){Vie(e,t);const i=Wie(n),a=n.TEXTURE_2D;return he(n,()=>n.bindTexture(a,i)),he(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),he(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),he(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),he(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),j().getNumber("WEBGL_VERSION")===1?he(n,()=>n.texImage2D(a,0,s,e,t,0,r,o,null)):he(n,()=>n.texStorage2D(a,1,s,e,t)),he(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}u(Mh,"createAndConfigureTexture");function LD(n){return n.internalFormatFloat}u(LD,"getInternalFormatForFloat32MatrixTexture");function ece(n,e,t,s){const[r,o]=Ph(e,t);return Mh(n,r,o,LD(s),s.textureFormatFloat,n.FLOAT)}u(ece,"createFloat32MatrixTexture");function MD(n){return n.internalFormatHalfFloat}u(MD,"getInternalFormatForFloat16MatrixTexture");function tce(n,e,t,s){const[r,o]=Ph(e,t);return Mh(n,r,o,MD(s),s.textureFormatFloat,s.textureTypeHalfFloat)}u(tce,"createFloat16MatrixTexture");function zD(n){return n.downloadTextureFormat}u(zD,"getInternalFormatForUnsignedBytesMatrixTexture");function nce(n,e,t,s){const[r,o]=Ph(e,t);return Mh(n,r,o,zD(s),n.RGBA,n.UNSIGNED_BYTE)}u(nce,"createUnsignedBytesMatrixTexture");function BD(n){return n.internalFormatPackedFloat}u(BD,"getInternalFormatForPackedMatrixTexture");function sce(n,e,t,s){const[r,o]=ju(e,t);return Mh(n,r,o,BD(s),n.RGBA,n.FLOAT)}u(sce,"createPackedMatrixTexture");function WD(n){return n.internalFormatPackedHalfFloat}u(WD,"getInternalFormatForFloat16PackedMatrixTexture");function rce(n,e,t,s){const[r,o]=ju(e,t);return Mh(n,r,o,WD(s),n.RGBA,s.textureTypeHalfFloat)}u(rce,"createFloat16PackedMatrixTexture");function oce(n,e,t){return he(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),wI(n,e,"clipSpacePos",t,3,20,0)&&wI(n,e,"uv",t,2,20,12)}u(oce,"bindVertexProgramAttributeStreams");function ice(n,e,t,s,r,o){he(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,c;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,c=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,c=o.internalFormatPackedFloat),i.set(r),j().getNumber("WEBGL_VERSION")===2?he(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):he(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,a,i)),he(n,()=>n.bindTexture(n.TEXTURE_2D,null))}u(ice,"uploadDenseMatrixToTexture");function ace(n,e,t){he(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?j().getNumber("WEBGL_VERSION")===2?he(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):he(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):j().getNumber("WEBGL_VERSION")===2?he(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):he(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),he(n,()=>n.bindTexture(n.TEXTURE_2D,null))}u(ace,"uploadPixelDataToTexture");function cce(n,e,t,s){const r=n.createBuffer();he(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return he(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),he(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),he(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}u(cce,"createBufferFromOutputTexture");function uce(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}u(uce,"downloadFloat32MatrixFromBuffer");function lce(n,e,t,s){const[r,o]=Ph(e,t),i=4,a=new Uint8Array(Nie(e*t,i));return he(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}u(lce,"downloadByteEncodedFloatMatrixFromOutputTexture");function dce(n,e,t,s,r,o,i,a){const c=n,l=new Float32Array(Tie(o,i));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}u(dce,"downloadPackedMatrixFromBuffer");function hce(n,e,t){const s=new Float32Array(e*t*4);return he(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}u(hce,"downloadMatrixFromPackedOutputTexture");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fb{static{u(this,"GPGPUContext")}constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=j().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Iie(t,e)):this.gl=vr(t),e=this.gl,j().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>he(o,()=>o.createVertexArray()),this.bindVertexArray=i=>he(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>he(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>he(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>he(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>he(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>he(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>he(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),j().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=gp(this.gl,o),Ys(this.gl,i))this.textureHalfFloatExtension=gp(this.gl,i);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Ys(this.gl,r))this.colorBufferHalfFloatExtension=gp(this.gl,r);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Ys(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Ys(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Jae(this.gl),this.indexBuffer=Zae(this.gl),this.framebuffer=Uie(this.gl),this.textureConfig=YS(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null,this.outputTexture!=null;const e=this.gl;he(e,()=>e.finish()),he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),he(e,()=>e.deleteFramebuffer(this.framebuffer)),he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),he(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),he(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),ece(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),tce(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),nce(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ace(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),ice(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),rce(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),sce(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(SI(this.gl,this.framebuffer),this.outputTexture=null),he(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>lce(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return dce(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return uce(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=cce(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(j().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=u(()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},"isFencePassed"),t=o}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=u(()=>this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")),"isFencePassed")):s=u(()=>!0,"isFencePassed");return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>hce(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=Qae(t));const s=Lie(t);he(t,()=>t.attachShader(s,this.vertexShader)),he(t,()=>t.attachShader(s,e)),Mie(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&lb(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;he(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),oce(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(he(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&lb(this.gl,this.program),he(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?Hie(this.gl,e,t):jie(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),he(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),qie(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=ju(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&lb(this.gl,this.program),yp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}he(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),he(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=gp(this.gl,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await iv(()=>this.disposed||this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=pce(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in j().platform&&(s=j().platform.setTimeoutCustom.bind(j().platform)),iv(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),db(this.gl,e,this.framebuffer),this.debug&&yp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(db(this.gl,this.outputTexture,this.framebuffer),this.debug&&yp(this.gl)):SI(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;db(r,e,this.framebuffer),this.debug&&yp(r),this.outputTexture=e,he(r,()=>r.viewport(0,0,t,s)),he(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),he(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function pce(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}u(pce,"linearSearchLastTrue");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:fce,bincountImpl:VD,bincountReduceImpl:mce,bitwiseAndImpl:gce,castImpl:yce,ceilImpl:bce,concatImpl:xce,equalImpl:wce,expImpl:Sce,expm1Impl:Cce,floorImpl:vce,gatherNdImpl:Ice,gatherV2Impl:kce,greaterImpl:$ce,greaterEqualImpl:Nce,lessImpl:Tce,lessEqualImpl:Ece,linSpaceImpl:_ce,logImpl:Rce,maxImpl:Ace,maximumImpl:Dce,minimumImpl:Oce,multiplyImpl:Fce,negImpl:Pce,notEqualImpl:Lce,prodImpl:Mce,raggedGatherImpl:zce,raggedRangeImpl:Bce,raggedTensorToTensorImpl:Wce,rangeImpl:Vce,rsqrtImpl:Uce,scatterImpl:Gce,sigmoidImpl:Hce,simpleAbsImpl:UD,sliceImpl:jce,sparseFillEmptyRowsImpl:qce,sparseReshapeImpl:Kce,sparseSegmentReductionImpl:GD,sqrtImpl:Xce,staticRegexReplaceImpl:Yce,stridedSliceImpl:Qce,stringNGramsImpl:Jce,stringSplitImpl:Zce,stringToHashBucketFastImpl:eue,subImpl:tue,tileImpl:nue,topKImpl:sue,transposeImpl:e1,uniqueImpl:rue}=fD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}u(HD,"getVecChannels");function Wn(n,e){return e===1?[n]:HD(n,e)}u(Wn,"getChannels");function oue(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}u(oue,"getSourceCoords$4");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iue{static{u(this,"PackProgram")}constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Ln(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Wn("rc",this.rank),s=bt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jD{static{u(this,"ReshapePackedProgram")}constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${aue(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?JS():QS(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function aue(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?oae(["r","c","d"],"inputShape"):Ta(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}u(aue,"getReshapedInputCoords");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cue=class{static{u(this,"TextureManager")}constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=$I(t,s),o=NI(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=kI(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const c=this.freeTextures[o].pop();return this.usedTextures[o].push(c),c}let a;return r===kn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===kn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===kn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===kn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===kn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=$I(s,r),i=NI(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=kI(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=j().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],d=l&&l.indexOf(e);if(d==null||d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[d]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;`${this.numFreeTextures}${this.numUsedTextures}`,`${e}`;const t=this._numBytesFree/this._numBytesAllocated;`${this._numBytesAllocated}`,`${this._numBytesFree}${Math.round(100*t)}`}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function uue(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}u(uue,"numBytesForInternalFormat");function kI(n,e,t,s,r){const o=lue(e,s);let i;if(r){const[c,l]=ju(n[0],n[1]);i=c*l}else{const[c,l]=Ph(n[0],n[1]);i=c*l}const a=uue(t,o);return i*a}u(kI,"computeBytes");function lue(n,e){switch(n){case kn.PACKED_2X2_FLOAT32:return BD(e);case kn.PACKED_2X2_FLOAT16:return WD(e);case kn.UNPACKED_FLOAT32:return LD(e);case kn.UNPACKED_FLOAT16:return MD(e);case kn.PACKED_4X1_UNSIGNED_BYTE:return zD(e);default:throw new Error(`Unknown physical texture type ${n}`)}}u(lue,"internalFormatForPhysicalTexType");function due(n){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?kn.PACKED_2X2_FLOAT32:kn.UNPACKED_FLOAT32:n?kn.PACKED_2X2_FLOAT16:kn.UNPACKED_FLOAT16}u(due,"getPhysicalTextureForRendering");function $I(n,e){if(n===Es.UPLOAD)return kn.PACKED_2X2_FLOAT32;if(n===Es.RENDER||n==null)return due(e);if(n===Es.DOWNLOAD||n===Es.PIXELS)return kn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}u($I,"getPhysicalFromLogicalTextureType");function NI(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}u(NI,"getKeyFromTextureShape");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mr=class{static{u(this,"UnaryOpProgram")}constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const ar="if (isnan(x)) return x;",hue="return x;",TI="return abs(x);",pue="return (x >= 0.0) ? x : (exp(x) - 1.0);",fue=ar+`
  return (x < 0.0) ? 0.0 : x;
`,mue=ar+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Po="return x;",gue="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yue="return x;",bue=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,xue=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wue=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Sue="return 1.0 / (1.0 + exp(-1.0 * x));";class Bo{static{u(this,"UnaryOpPackedProgram")}constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cue{static{u(this,"UnpackProgram")}constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length);const t=e.length,s=Wn("rc",t),r=bt(t),o=oue(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vue=oS,Iue=1e-7,kue=1e-4,wp={};function $ue(n){return n in wp||(wp[n]={}),wp[n]}u($ue,"getBinaryCache");const Nue=j().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Tue=600;function Eue(){return j().global.screen==null?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*Tue/1024/1024}u(Eue,"numMBBeforeWarning");class Cy extends gm{static{u(this,"MathBackendWebGL")}nextDataId(){return Cy.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof fb)t=e;else{const s=vr(j().getNumber("WEBGL_VERSION"),e);t=new fb(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=vr(j().getNumber("WEBGL_VERSION"));t=new fb(s),this.binaryCache=$ue(j().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new cue(this.gpgpu),this.numMBBeforeWarning=Eue(),this.texData=new sw(this,ks())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,i){const a=this.makeTensorInfo(t,s),c=this.texData.get(a.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[r,o]},c.texShape=[r,o];const l=bp(t),d=new II(l,!1,i),h=this.runWebGLProgram(d,[a],s,[[r,o]]);return h.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Es.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(j().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Es.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:c}=t;if(i!=null){let p;c?p=new Bo(a,Po):p=new Mr(a,Po);const f=this.runWebGLProgram(p,[{dataId:e,shape:a,dtype:r}],r),m=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const l=this.activeTimers!=null;let d;l&&(d=Kn());let h;if(r==="complex64"){const p=this.readSync(o.real.dataId),f=this.readSync(o.imag.dataId);h=xr(p,f)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Kn()-d),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(g=>m.push(g))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:c}=t;if(o!=null){let m;c?m=new Bo(r,Po):m=new Mr(r,Po);const g=this.runWebGLProgram(m,[{dataId:e,shape:r,dtype:i}],i),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(j().getBool("DEBUG")&&!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&j().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,d;if(i!=="complex64"&&j().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(e);const m=this.texData.get(d.dataId);l=this.gpgpu.createBufferFromTexture(m.texture.texture,...mp(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const m=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=m[0],y=m[1];h=xr(g,y)}else if(l==null)h=this.getValuesFromTexture(e);else{const m=U(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(l,m)}if(d!=null&&this.disposeIntermediateTensorInfo(d),l!=null){const m=this.gpgpu.gl;he(m,()=>m.deleteBuffer(l))}const p=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(m=>m(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ks().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:c,texture:l}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;c?f=new Bo(o,Po):f=new Mr(o,Po);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.readToGPU(m,t);return this.disposeIntermediateTensorInfo(m),g}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const d=this.decode(e,t.customTexShape),h=ks().makeTensorFromTensorInfo(d),p=this.texData.get(d.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>yr(r));return Oe(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Aie(s))throw j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=U(t);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),f=this.texData.get(p.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...mp(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(p),m}const i=j().getBool("WEBGL_PACK")&&r===!0,a=i?bp(t):t,c=i?new Kae(a):new qae(a),l=this.runWebGLProgram(c,[{shape:a,dtype:s,dataId:e}],"float32"),d=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=wo(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),i=wo(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(o);a.kernelMs=mN(c),a.getExtraProfileInfo=()=>c.map((l,d)=>({name:i[d],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Kn(),endMs:null}}endTimer(e){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Kn(),e)}async getQueryTime(e){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),c=a&&a.origDataId||e,l=this.dataRefCount.get(c);l>1?this.dataRefCount.set(c,l-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const d=this.texData.get(e);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Nue){return j().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&U(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Ts("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return vue(e.shape,t)}packedUnaryOp(e,t,s){const r=new Bo(e.shape,t),o=this.compileAndRun(r,[e],s);return ks().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=UD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,TI,e.dtype);const t=new Mr(e.shape,TI),s=this.compileAndRun(t,[e]);return ks().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Uc(s[0])){const o=s.map(i=>lo(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new Cue(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new iue(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[_c(e.shape),...Rc(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[_c(t),...Rc(t)],i=new jD(o,s),a=!0,c=[s],l=this.runWebGLProgram(i,[r],e.dtype,c,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(t!=null){const p=U(o),f=t[0]*t[1]*4;N(p<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=bp(o);let c;r?c=new jae(a):c=new Hae(a);const l=!0,d=[t??mp(a)],h=this.runWebGLProgram(c,[{shape:a,dtype:i,dataId:e}],i,d,l,t);return{dtype:i,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(a.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===Ql.DENSE){const b=i??mp(e.outputShape);c.texShape=b.map(x=>x*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),U(a.shape)===0)return c.values=ln(a.dtype,0),a;const l=[],d=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!e.packedInputs&&U(b.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!e.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),l.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!Wf(x.shape,b.shape)){const S=b,w=b.shape;b.shape=x.shape,b=this.packedReshape(b,w),l.push(b),x=this.texData.get(b.dataId),S.shape=w}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:c,isUniform:!1},p=Gae(e,d,h),f=this.getAndSaveBinary(p,()=>Vae(this.gpgpu,e,d,h)),m=this.activeTimers!=null;let g;m&&(g=this.startTimer()),j().get("ENGINE_COMPILE_ONLY")||Uae(this.gpgpu,f,d,h,r),l.forEach(b=>this.disposeIntermediateTensorInfo(b)),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=j().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const b=Kn();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!j().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&o===!1){const b=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),b}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=H(()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=j().getBool("DEBUG");j().set("DEBUG",!1);const t=this.abs(ve(1e-8)).dataSync()[0];if(j().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Iue:kue}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:c}=t;if(i!=null)return;const l=this.activeTimers!=null;let d;l&&(d=Kn());let h=t.texShape;if(h==null&&(h=Yie(s,c),t.texShape=h),o!=null){const p=bp(s);let f,m=h[1],g=h[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(c||!y)&&([m,g]=ju(h[0],h[1])),c?f=new Yae(p,y):f=new II(p,y);const b=y?[g,m]:h,x=this.makeTensorInfo(b,r),S=this.texData.get(x.dataId);y?S.usage=Es.PIXELS:S.usage=Es.UPLOAD,S.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),m,g,o);const w=[[g,m]],v=this.runWebGLProgram(f,[x],r,w,!0),k=this.texData.get(v.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,j().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(x),l&&(this.uploadWaitMs+=Kn()-d)}else{const p=this.acquireTexture(h,a,r,c);t.texture=p}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=_ue(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,`${o}`}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*pf(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await _E(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw this.gpgpu.gl.getProgramInfoLog(e.webGLProgram),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(RD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:c}=PD(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=c}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=e,c=ks().backend;if(!c.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(r,t,s,o,i,a);return ks().makeTensorFromDataId(l,t,s,c)}}Cy.nextDataId=0;function _ue(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}u(_ue,"float32ToTypedArray");/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */MN()&&ww("webgl",()=>new Cy,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let la=class{static{u(this,"BinaryOpProgram")}constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ne(t,s),this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Qu{static{u(this,"BinaryOpPackedProgram")}constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ne(t,s);const o=this.outputShape.length;this.enableShapeUniforms=Ln(o);let i="";if(r)if(o===0||U(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${bt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=Wn("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}u(xs,"identity$1");const Rue={kernelName:du,backendName:"webgl",kernelFunc:xs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),a=xs({inputs:{x:s},backend:t}),c=xs({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:c},o}u(xi,"complex$1");const Aue={kernelName:Im,backendName:"webgl",kernelFunc:xi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qD="return (a < 0.) ? b * a : a;",KD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Due(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",li(o,"float32")),a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qu(KD,r.shape,i.shape):new la(qD,r.shape,i.shape),c=t.runWebGLProgram(a,[r,i],"float32");return t.disposeIntermediateTensorInfo(i),c}u(Due,"leakyRelu$1");const Oue={kernelName:Md,backendName:"webgl",kernelFunc:Due};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD="return (a < 0.) ? b * a : a;",YD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Fue(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qu(YD,s.shape,r.shape):new la(XD,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}u(Fue,"prelu$1");const Pue={kernelName:sh,backendName:"webgl",kernelFunc:Fue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ju="if (isnan(x)) return x;";function it({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,c=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const h=a.texData.get(i.dataId),p=t(h.values,c);return a.makeTensorInfo(i.shape,c,p)}const l=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let d;return l?d=new Bo(i.shape,e):d=new Mr(i.shape,n),a.runWebGLProgram(d,[i],c)}}u(it,"unaryKernelFunc$1");function _n({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:c,b:l}=i,d=a;if(s&&c.dtype==="complex64"){const m=d.texData.get(c.dataId),g=d.texData.get(l.dataId),[y,b]=[[m.complexTensorInfos.real,g.complexTensorInfos.real],[m.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(S=>{const[w,C]=S,v={dataId:w.dataId,dtype:w.dtype,shape:c.shape},k={dataId:C.dataId,dtype:C.dtype,shape:l.shape},$=new la(n,c.shape,l.shape);return d.runWebGLProgram($,[v,k],wn(w.dtype,C.dtype))}),x=xi({inputs:{real:y,imag:b},backend:d});return d.disposeIntermediateTensorInfo(y),d.disposeIntermediateTensorInfo(b),x}const h=o||wn(c.dtype,l.dtype);if((c.dtype==="string"||l.dtype==="string"||d.shouldExecuteOnCPU([c,l]))&&r!=null){const m=d.texData.get(c.dataId).values,g=d.texData.get(l.dataId).values,y=c.dtype==="string"?wr(m):m,b=c.dtype==="string"?wr(g):g,[x,S]=r(c.shape,l.shape,y,b,h),w=d.makeTensorInfo(S,h),C=d.texData.get(w.dataId);return C.values=x,w}const p=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return p?f=new Qu(e,c.shape,l.shape,t):f=new la(n,c.shape,l.shape),d.runWebGLProgram(f,[c,l],h)}}u(_n,"binaryKernelFunc$1");function Jl(n,e=!1){if(n==="linear")return e?yue:hue;if(n==="relu")return e?xue:fue;if(n==="elu")return e?bue:pue;if(n==="relu6")return e?wue:mue;if(n==="prelu")return e?YD:XD;if(n==="leakyrelu")return e?KD:qD;if(n==="sigmoid")return e?Sue:gue;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}u(Jl,"mapActivationToShaderProgram");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QD=class{static{u(this,"MatMulPackedProgram")}constructor(e,t,s,r=!1,o=!1,i=!1,a=null,c=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Ln(this.outputShape.length);const d=r?e[1]:e[2],h=Math.ceil(d/2),p=r?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",m=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";a&&(c?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:y=`vec4 activation(vec4 x) {
          ${a}
        }`,b="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let S="rc.x",w="rc.x";e[0]<t[0]?S=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(w=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${S};
        int batchB = ${w};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${g[0]});
          result += (${m[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let _I=class{static{u(this,"BinaryOpComplexProgram")}constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ne(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI="return a * b;";function n1(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=wn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),c=t.texData.get(r.dataId),l=new _I(EI.REAL,s.shape,r.shape),d=new _I(EI.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:r.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:r.shape}],p=t.runWebGLProgram(l,h,"float32"),f=t.runWebGLProgram(d,h,"float32"),m=xi({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),c=t.texData.get(r.dataId),[l,d]=Fce(s.shape,r.shape,a.values,c.values,o),h=t.makeTensorInfo(d,o),p=t.texData.get(h.dataId);return p.values=l,h}let i;return j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Qu(RI,s.shape,r.shape):i=new la(RI,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}u(n1,"multiply");const Lue={kernelName:wu,backendName:"webgl",kernelFunc:n1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mue(n,e,t){const s=[_c(n.shape),...Rc(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[_c(e),...Rc(e)],i=new jD(o,s),a=!0,c=[s],l=t.runWebGLProgram(i,[r],n.dtype,c,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}u(Mue,"packedReshape");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,a=U(r.shape),c=ow(o,a),l=U(c);N(a===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(r.dataId);return d.isPacked&&!Wf(r.shape,c)&&!(d.texture!==null&&Wf(d.shape,c))?Mue(r,c,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype})}u(ce,"reshape$1");const zue={kernelName:oh,backendName:"webgl",kernelFunc:ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AI{static{u(this,"MeanProgram")}constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,c=s%4;let l="sumValue += dot(values, ones);";if(t!=null){const h=1/t;l=`sumValue += dot(values * ${wc(h)?h.toPrecision(2):h}, ones);`}let d="";o%s>0&&(d=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bue=class{static{u(this,"ReduceProgram")}constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",c="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",c="min"):t==="max"&&(a="-1.0 / 1e-20",c="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const d=Math.floor(s/4)*4,h=s%4;let p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(a="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(a="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let m="";o%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${d};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wue(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=jg(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}u(Wue,"getReductionStages");function Ra(n,e,t,s){const r=Wue(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:c,outSize:l}=r[i];let d,h;t==="mean"?d=i===0?new AI({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:l},a):new AI({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:l}):d=new Bue({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:l},t),h=o,o=s.runWebGLProgram(d,[o],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}u(Ra,"reduce$1");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vue=class{static{u(this,"TransposeProgram")}constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=bt(this.rank),o=Uue(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}};function Uue(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}u(Uue,"getSwitchedCoords$1");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gue{static{u(this,"TransposePackedProgram")}constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let d=0;d<s.length;d++)s[d]=e[t[d]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=bt(this.rank),o=HD("rc",this.rank),i=new Array(this.rank);for(let d=0;d<t.length;d++)i[t[d]]=o[d];const a=`vec2(${i.slice(-2).join()})`,c=`++${o[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${c}) {
        result[1] = ${l};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${c}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vy(n,e,t){const s=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gue(n.shape,e):new Vue(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}u(vy,"transposeImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hue(n,e,t,s){const r=e,o=n.shape.length,i=Pe(r,n.shape);let a=i;const c=xt(a,o),l=c!=null;let d=n;l&&(d=vy(n,c,s),a=$t(a.length,o)),tn("sum",a,o);const[h,p]=Yt(d.shape,a);let f=h;t&&(f=qt(h,i));const m=U(p),y=U(n.shape)/m,b=ce({inputs:{x:d},attrs:{shape:[y,m]},backend:s}),x=mg(n.dtype),S=Ra(b,x,"sum",s),w=ce({inputs:{x:S},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(S),l&&s.disposeIntermediateTensorInfo(d),w}u(Hue,"sumImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iy(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Hue(r,o,i,t)}u(Iy,"sum$1");const jue={kernelName:dh,backendName:"webgl",kernelFunc:Iy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,c=new Array(a);for(let d=0;d<c.length;d++)c[d]=r.shape[o[d]];let l;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,p=e1(h,r.shape,r.dtype,o,c);l=i.makeTensorInfo(c,r.dtype);const f=i.texData.get(l.dataId);f.values=p}else l=vy(r,o,i);return l}u(Gn,"transpose$1");const que={kernelName:Ui,backendName:"webgl",kernelFunc:Gn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD=1e3;function Vf({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:c=null}){const l=n.shape.length,d=e.shape.length,h=t?n.shape[l-2]:n.shape[l-1],p=s?e.shape[d-1]:e.shape[d-2],f=t?n.shape[l-1]:n.shape[l-2],m=s?e.shape[d-2]:e.shape[d-1],g=n.shape.slice(0,-2),y=e.shape.slice(0,-2),b=U(g),x=U(y),w=Ne(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);N(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const C=t?[b,h,f]:[b,f,h],v=s?[x,m,p]:[x,p,m],k=ce({inputs:{x:n},backend:r,attrs:{shape:C}}),$=ce({inputs:{x:e},backend:r,attrs:{shape:v}}),T=[k,$],E=Math.max(b,x),R=t?k.shape[1]:k.shape[2],O=o!=null,L=i!=null,z=c==="leakyrelu",W=c!=null?Jl(c,!0):null,A=O||L||z||W!=null;let G;if((f===1||m===1)&&R>JD&&A===!1){let q=k,Y=$;t&&(q=Gn({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),T.push(q)),s&&(Y=Gn({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),T.push(Y));const Q=m!==1,ne=m===1;let X=q;Q&&(X=ce({inputs:{x:q},backend:r,attrs:{shape:[E,R,1]}}),T.push(X));const Z=m===1?2:1;let se=Y;ne&&(se=ce({inputs:{x:Y},backend:r,attrs:{shape:[E,1,R]}}),T.push(se));const de=n1({inputs:{a:X,b:se},backend:r});G=Iy({inputs:{x:de},backend:r,attrs:{axis:Z,keepDims:!0}}),T.push(de)}else{const q=wn(n.dtype,e.dtype),Y=new QD(C,v,[E,f,m],t,s,O,W,L,z),Q=[k,$];if(o!=null&&Q.push(o),L&&Q.push(i),z){const ne=r.makeTensorInfo([],"float32",li(a,"float32"));Q.push(ne),T.push(ne)}G=r.runWebGLProgram(Y,Q,q)}const V=ce({inputs:{x:G},backend:r,attrs:{shape:w}});T.push(G);for(const q of T)r.disposeIntermediateTensorInfo(q);return V}u(Vf,"batchMatMulImpl$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kue(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:c,transposeB:l,activation:d,leakyreluAlpha:h}=s;return Vf({a:r,b:o,transposeA:c,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:d})}u(Kue,"_fusedMatMul$1");const Xue={kernelName:Ll,backendName:"webgl",kernelFunc:Kue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI="return abs(x);";function Yue(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=UD(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Bo(s.shape,DI):r=new Mr(s.shape,DI),t.runWebGLProgram(r,[s],s.dtype)}u(Yue,"abs$1");const Que={kernelName:yd,backendName:"webgl",kernelFunc:Yue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jue=ar+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Zue=it({opSnippet:Jue}),ele={kernelName:Hc,backendName:"webgl",kernelFunc:Zue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tle=ar+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,nle=it({opSnippet:tle}),sle={kernelName:jc,backendName:"webgl",kernelFunc:nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI="return a + b;",rle=_n({opSnippet:OI,packedOpSnippet:OI,supportsComplex:!0,cpuKernelImpl:fce}),ole={kernelName:ya,backendName:"webgl",kernelFunc:rle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ile{static{u(this,"AddNProgram")}constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ale=class{static{u(this,"AddNPackedProgram")}constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wp(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return xs({inputs:{x:s[0]},backend:t});if(s.length>j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),l=Wp({inputs:s.slice(0,c),backend:t}),d=Wp({inputs:s.slice(c),backend:t});return Wp({inputs:[l,d],backend:t})}const r=s.map(c=>c.dtype).reduce((c,l)=>wn(c,l)),o=s.map(c=>c.shape),a=j().getBool("WEBGL_PACK")?new ale(s[0].shape,o):new ile(s[0].shape,o);return t.runWebGLProgram(a,s,r)}u(Wp,"addN$1");const cle={kernelName:bd,backendName:"webgl",kernelFunc:Wp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ule(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,c=Pe(o,r.shape);let l=c;const d=xt(l,a);let h=r;d!=null&&(h=Gn({inputs:{x:r},backend:t,attrs:{perm:d}}),l=$t(l.length,a)),tn("all",l,a);const[p,f]=Yt(h.shape,l),m=U(f),g=ce({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),y=Ra(g,g.dtype,"all",t);let b;if(i){const x=qt(p,c);b=ce({inputs:{x:y},backend:t,attrs:{shape:x}})}else b=ce({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),d!=null&&t.disposeIntermediateTensorInfo(h),b}u(ule,"all$1");const lle={kernelName:ym,backendName:"webgl",kernelFunc:ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,c=Pe(o,r.shape);let l=c;const d=xt(l,a);let h=r;d!=null&&(h=Gn({inputs:{x:r},backend:t,attrs:{perm:d}}),l=$t(l.length,a)),tn("any",l,a);const[p,f]=Yt(h.shape,l),m=U(f),g=ce({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),y=Ra(g,g.dtype,"any",t);let b;if(i){const x=qt(p,c);b=ce({inputs:{x:y},backend:t,attrs:{shape:x}})}else b=ce({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),d!=null&&t.disposeIntermediateTensorInfo(h),b}u(dle,"any$1");const hle={kernelName:bm,backendName:"webgl",kernelFunc:dle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ple=class{static{u(this,"ArgMinMaxProgram")}constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fle{static{u(this,"ArgMinMaxPackedProgram")}constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,c=a.length,l=bt(c),d=Wn("coords",c);let h,p;if(i===1){p=c+1;const $=bt(p);h=`
        ${$} sourceLocR = ${$}(${d.join()}, 0);
        ++${d[c-1]};
        ${$} sourceLocG = ${$}(${d.join()}, 0);
        ++${d[c-2]};
        ${$} sourceLocA = ${$}(${d.join()}, 0);
        --${d[c-1]};
        ${$} sourceLocB = ${$}(${d.join()}, 0);
        --${d[c-2]};`}else p=c,h=`
        ${l} sourceLocR = coords;
        ++${d[c-1]};
        ${l} sourceLocG = coords;
        ++${d[c-2]};
        ${l} sourceLocA = coords;
        --${d[c-1]};
        ${l} sourceLocB = coords;
        --${d[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,p),m="."+f[p-1],g=f.map($=>"int "+$),y=Wn("sourceLocR",p-1).concat("inIdx.r"),b=Wn("sourceLocG",p-1).concat("inIdx.g"),x=Wn("sourceLocB",p-1).concat("inIdx.b"),S=Wn("sourceLocA",p-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",C=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${S.join()})));`,v=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${S.join()}) : 0.)`,k=r?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${d[c-1]} < ${a[c-1]-1};
        bool hasNextRow = ${d[c-2]} < ${a[c-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=jg(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},c=new ple(a,t,s==null),l=[e];s!=null&&l.push(s);const d=n.runWebGLProgram(c,l,"int32");if(d.shape[1]===1)return d;const h=ZD(n,e,t,d);return n.disposeIntermediateTensorInfo(d),h}u(ZD,"argReduce");function eO(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=jg(o),a=new fle(r,i,t,s==null),c=s==null?[e]:[e,s],l=n.runWebGLProgram(a,c,"int32");if(l.shape.length===e.shape.length){const d=eO(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}return l}u(eO,"argReducePacked");function tO(n,e,t,s){const r=[t];if(tn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let c=e;a&&(c=n.unpackTensor(e),o.push(c));const[l,d]=Yt(c.shape,r),h=U(d),p=ce({inputs:{x:c},backend:n,attrs:{shape:[-1,h]}});o.push(p);const f=ZD(n,p,s);o.push(f);const m=ce({inputs:{x:f},backend:n,attrs:{shape:l}});return o.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}return eO(n,e,s)}u(tO,"argMinMaxReduce");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Pe(o,r.shape);const a=xt(i,r.shape.length);let c=r;const l=[];a!=null&&(c=Gn({inputs:{x:r},backend:t,attrs:{perm:a}}),l.push(c),i=$t(i.length,c.shape.length)),tn("argMax",[i[0]],c.shape.length);const d=tO(t,c,i[0],"max");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}u(mle,"argMax$1");const gle={kernelName:xd,backendName:"webgl",kernelFunc:mle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Pe(o,r.shape);const a=xt(i,r.shape.length);let c=r;const l=[];a!=null&&(c=Gn({inputs:{x:r},backend:t,attrs:{perm:a}}),l.push(c),i=$t(i.length,c.shape.length)),tn("argMin",[i[0]],c.shape.length);const d=tO(t,c,i[0],"min");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}u(yle,"argMin$1");const ble={kernelName:wd,backendName:"webgl",kernelFunc:yle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xle=ar+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,wle=it({opSnippet:xle}),Sle={kernelName:qc,backendName:"webgl",kernelFunc:wle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cle=ar+"return log(x + sqrt(x * x + 1.0));",vle=it({opSnippet:Cle}),Ile={kernelName:Kc,backendName:"webgl",kernelFunc:vle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kle=ar+`
  return atan(x);
`,$le=it({opSnippet:kle}),Nle={kernelName:Xc,backendName:"webgl",kernelFunc:$le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tle=t1+`
  return atan(a, b);
`,Ele=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+_a+`
  return result;
`,_le=_n({opSnippet:Tle,packedOpSnippet:Ele}),Rle={kernelName:Qc,backendName:"webgl",kernelFunc:_le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ale=ar+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Dle=it({opSnippet:Ale}),Ole={kernelName:Yc,backendName:"webgl",kernelFunc:Dle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zl=class{static{u(this,"Pool2DProgram")}constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(g||(x="-1.0 / 1e-20"),s){const $=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${c});
        const ivec2 pads = ivec2(${f}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?y:b:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const S="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / max(count, 1.0)");const C=Math.floor(i/4)*4,v=i%4,k=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${S}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${c});
      const ivec2 pads = ivec2(${f}, ${m});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${C};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${w});
      }
    `}},s1=class{static{u(this,"Pool3DProgram")}constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,f=e.effectiveFilterDepth,m=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=e.padInfo.front,b=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const S=t==="avg";let w="0.0";if(S||(w="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${c}, ${l});
        const ivec3 pads = ivec3(${y}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const k=Math.floor(i/4)*4,$=i%4,T=`
      if (${S}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${c}, ${l});
      const ivec3 pads = ivec3(${y}, ${b}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${k};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${v});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Lh(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=s,l=1;N(hn(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=Fn(r.shape,o,i,l,a,c);if(d.filterWidth===1&&d.filterHeight===1&&Ge(d.inShape,d.outShape))return xs({inputs:{x:r},backend:t});const h=new Zl(d,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}u(Fle,"avgPool$1");const Ple={kernelName:Sd,backendName:"webgl",kernelFunc:Fle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:c,dataFormat:l}=s,d=[1,1,1],h=Os(r.shape,o,i,d,a,c,l),p=new s1(h,"avg",!1);return t.runWebGLProgram(p,[r],"float32")}u(Lle,"avgPool3D$1");const Mle={kernelName:Cd,backendName:"webgl",kernelFunc:Lle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zle=class{static{u(this,"AvgPool2DBackpropProgram")}constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${h});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ble=class{static{u(this,"AvgPool3DBackpropProgram")}constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=h-1-e.padInfo.front,g=p-1-e.padInfo.top,y=f-1-e.padInfo.left,b=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wle(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:c,pad:l,dimRoundingMode:d}=s,h=[1,1,1],p=Os(i.shape,a,c,h,l,d),f=new Ble(p);return t.runWebGLProgram(f,[r],i.dtype)}u(Wle,"avgPool3DGrad$1");const Vle={kernelName:wm,backendName:"webgl",kernelFunc:Wle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ule(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Lh([r,o],"avgPoolGrad");const{filterSize:a,strides:c,pad:l}=s,d=Fn(i.shape,a,c,1,l),h=new zle(d);return t.runWebGLProgram(h,[r],i.dtype)}u(Ule,"avgPoolGrad$1");const Gle={kernelName:xm,backendName:"webgl",kernelFunc:Ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hle(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return Vf({a:r,b:o,transposeA:i,transposeB:a,backend:t})}u(Hle,"batchMatMul$1");const jle={kernelName:vd,backendName:"webgl",kernelFunc:Hle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qle=class{static{u(this,"BatchNormProgram")}constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ne(e,t),Ne(e,s);let a="0.0";r!=null&&(Ne(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let c="1.0";o!=null&&(Ne(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kle{static{u(this,"BatchNormPackedProgram")}constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ne(e,t),Ne(e,s);let a="vec4(0.0)";r!=null&&(Ne(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let c="vec4(1.0)";o!=null&&(Ne(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xle=u(({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;N(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const l=[s,r,o];let d=null;i!=null&&(d=i.shape,l.push(i));let h=null;a!=null&&(h=a.shape,l.push(a));const p=j().getBool("WEBGL_PACK_NORMALIZATION")?new Kle(s.shape,r.shape,o.shape,d,h,c):new qle(s.shape,r.shape,o.shape,d,h,c);return e.runWebGLProgram(p,l,l[0].dtype)},"batchNorm"),Yle={kernelName:Fd,backendName:"webgl",kernelFunc:Xle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qle=class{static{u(this,"SliceProgram")}constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=bt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Jle(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${e0[a]} = start[${a}] + coords.${e0[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}};const e0=["x","y","z","w","u","v"];function Jle(n){if(n===1)return"sourceLoc";if(n<=6)return e0.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}u(Jle,"getCoords$3");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zle{static{u(this,"SlicePackedProgram")}constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=bt(this.rank),s=Wn("coords",this.rank),r=Wn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((d,h)=>`start[${h}]`).join()});`:e.map((d,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ede(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=fS(e,we(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const c=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,c+1),o}u(ede,"shallowSlice");function Zu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,c]=Ih(r,o,i);if(Vg(r,a,c),U(c)===0)return t.makeTensorInfo(c,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.texData.get(r.dataId),p=jce(h.values,a,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,p)}const{isPacked:l}=t.texData.get(r.dataId),d=pS(r.shape,a,c);if(l||!d){const h=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zle(c):new Qle(c),p=[a];return t.runWebGLProgram(h,[r],r.dtype,p)}return t.uploadToGPU(r.dataId),ede(r,a,c,t)}u(Zu,"slice$1");const tde={kernelName:lh,backendName:"webgl",kernelFunc:Zu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nde=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;N(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((x,S)=>x*S),c=va(r.shape,o,a),l=Ia(c.length,o.length),d=ka(r.shape,o,a),h=Kg(i,o.length),p=Xg(d,i,o.length),f=[],m=ce({inputs:{x:r},backend:t,attrs:{shape:c}}),g=Gn({inputs:{x:m},backend:t,attrs:{perm:l}}),y=ce({inputs:{x:g},backend:t,attrs:{shape:d}}),b=Zu({inputs:{x:y},backend:t,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),b},"batchToSpaceND$1"),sde={kernelName:Id,backendName:"webgl",kernelFunc:nde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.readSync(r.dataId),c=t.readSync(o.dataId),l=VD(a,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,l)}u(rde,"bincount$1");const ode={kernelName:Sm,backendName:"webgl",kernelFunc:rde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ide=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,ade=`
  return float(int(a.r) & int(b.r));
`;function cde(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=j().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||i===1){const c=t.texData.get(s.dataId).values,l=t.texData.get(r.dataId).values,[d,h]=gce(s.shape,r.shape,c,l,s.dtype),p=t.makeTensorInfo(h,s.dtype),f=t.texData.get(p.dataId);return f.values=d,p}let a;return o?a=new Qu(ide,s.shape,r.shape,!1):a=new la(ade,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}u(cde,"bitwiseAnd");const ude={kernelName:Cm,backendName:"webgl",kernelFunc:cde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lde(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),a=Ne(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}u(lde,"broadcastArgs$1");const dde={kernelName:vm,backendName:"webgl",kernelFunc:lde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hde="return float(a != b);",nO=_n({opSnippet:hde,cpuKernelImpl:Lce,dtype:"bool"}),pde={kernelName:Jd,backendName:"webgl",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zh(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return xs({inputs:{x:r.complexTensorInfos.real},backend:t})}u(zh,"real$1");const fde={kernelName:Jm,backendName:"webgl",kernelFunc:zh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mde="return float(int(x));";function gde(n,e){const t=new Mr(n.shape,mde),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}u(gde,"int$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t0(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return xs({inputs:{x:r},backend:t});const i=Zt(r.shape),a=t0({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=xi({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),c}if(r.dtype==="complex64"){const i=zh({inputs:{input:r},backend:t}),a=t0({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!iw(r.dtype,o)){const i=xs({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId).values,[a,c,l]=yce(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,c,l)}if(o==="int32")return gde(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",ln("bool",1)),c=nO({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}u(t0,"cast$1");const yde={kernelName:Jc,backendName:"webgl",kernelFunc:t0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI="return ceil(x);",bde=it({opSnippet:FI,packedOpSnippet:FI,cpuKernelImpl:bce}),xde={kernelName:Zc,backendName:"webgl",kernelFunc:bde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wde=class{static{u(this,"ClipProgram")}constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sde{static{u(this,"ClipPackedProgram")}constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;j().getBool("WEBGL_PACK_CLIP")?a=new Sde(r.shape):a=new wde(r.shape);const c=[[o],[i]];return t.runWebGLProgram(a,[r],r.dtype,c)}u(Cde,"clipByValue$1");const vde={kernelName:eu,backendName:"webgl",kernelFunc:Cde};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ide=class{static{u(this,"ComplexAbsProgram")}constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PI(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}u(PI,"makeComplexComponentTensorInfo$1");function kde(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new Ide(s.shape),i=[PI(s,r.complexTensorInfos.real),PI(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}u(kde,"complexAbs$1");const $de={kernelName:kd,backendName:"webgl",kernelFunc:kde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nde=class{static{u(this,"ConcatProgram")}constructor(e){this.outputShape=[],this.outputShape=ts(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tde{static{u(this,"ConcatPackedProgram")}constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ts(e,t);const s=this.outputShape,r=s.length,o=bt(r),i=Wn("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((g,y)=>`T${y}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let g=1;g<c.length;g++)c[g]=c[g-1]+e[g][t];const l=a[t],d=a.slice(-2),h=a.join();let p=`if (${l} < ${c[0]}) {
        return getChannel(
            getT0(${h}), vec2(${d.join()}));
        }`;for(let g=1;g<c.length;g++){const y=c[g-1];p+=`
        if (${l} < ${c[g]}  && ${l} >= ${c[g-1]}) {
          return getChannel(
            getT${g}(${Sp(a,l,y)}),
            vec2(${Sp(d,l,y)}));
        }`}const f=c.length,m=c[c.length-1];p+=`
        return getChannel(
          getT${f}(${Sp(a,l,m)}),
          vec2(${Sp(d,l,m)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${p}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Sp(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}u(Sp,"shiftedChannels");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ky(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return xs({inputs:{x:r.complexTensorInfos.imag},backend:t})}u(ky,"imag$1");const Ede={kernelName:Vm,backendName:"webgl",kernelFunc:ky};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gl(n,e,t){const s=n[0].dtype;if(s==="complex64"){const f=n.map(x=>zh({inputs:{input:x},backend:t})),m=n.map(x=>ky({inputs:{input:x},backend:t})),g=gl(f,e,t),y=gl(m,e,t),b=xi({inputs:{real:g,imag:y},backend:t});return f.forEach(x=>t.disposeIntermediateTensorInfo(x)),m.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),b}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(w=>{const v=[-1,U(w.shape.slice(e))];return ce({inputs:{x:w},backend:t,attrs:{shape:v}})}),m=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),g=ts(f.map(w=>w.shape),1),y=f[0].shape[0]===1,b=xce(m,g,s,y),x=ts(n.map(w=>w.shape),e),S=t.makeTensorInfo(x,s,b);return f.forEach(w=>t.disposeIntermediateTensorInfo(w)),S}const o=n.filter(f=>U(f.shape)>0),i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const f=i?new Mr(n[0].shape,Po):new Bo(n[0].shape,Po);return t.runWebGLProgram(f,n,s)}const a=j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const f=[];for(let g=0;g<o.length;g+=a){const y=o.slice(g,g+a);f.push(gl(y,e,t))}const m=gl(f,e,t);for(const g of f)t.disposeIntermediateTensorInfo(g);return m}if(i){const f=new Tde(o.map(m=>m.shape),e);return t.runWebGLProgram(f,o,s)}const{tensors2D:c,outShape:l}=_de(o,e,t),d=new Nde(c.map(f=>f.shape)),h=t.runWebGLProgram(d,c,s);c.forEach(f=>t.disposeIntermediateTensorInfo(f));const p=ce({inputs:{x:h},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(h),p}u(gl,"concatImpl$1");function _de(n,e,t){const s=ts(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ce({inputs:{x:o},attrs:{shape:[-1,U(o.shape.slice(e))]},backend:t})),outShape:s}}u(_de,"computeTensors2D$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Pe(r,e[0].shape)[0],i=e.map(l=>l.shape);Hg(i,o);const a=ts(e.map(l=>l.shape),o);if(U(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(l=>U(l.shape)>0);return c.length===1?xs({inputs:{x:c[0]},backend:t}):gl(c,o,t)}u(sO,"concat$1");const Rde={kernelName:$d,backendName:"webgl",kernelFunc:sO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rO{static{u(this,"Conv2DProgram")}constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,y=e.dataFormat==="channelsLast",b=y?1:2,x=y?2:3,S=y?3:1;let w="",C="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,C="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${c}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${S}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${C}
        setOutput(result);
      }
    `}}class Ade{static{u(this,"Conv3DProgram")}constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,f=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oO{static{u(this,"Conv2DPackedProgram")}constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)p+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;p+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<d;y++)p+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const b=y*2;if(p+=`
           xC = xCCorner + ${b*c};
           `,a===1){if(b<d&&(i%2===1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,c===1&&b>0?p+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<d)){const x=i%2===0?rw(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,c>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:p+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?p+=`
                     xC${b+1} = xTexelC${b};
                     `:p+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<d&&(i%2===1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<d&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<d&&(p+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<d&&(p+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<d&&(p+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dde{static{u(this,"Im2ColPackedProgram")}constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ln(this.outputShape.length);const{dataFormat:s}=t,r=jn(),o=s==="channelsLast",i=o?1:2,a=o?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let d=0;d<=1;d++)for(let h=0;h<=1;h++)l+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${d};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}u(Uf,"getShapeForBatchMatMul$1");function iO({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const c=n.shape,l=s.texData.get(n.dataId),d=t.inChannels,h=c[0]*c[1]*c[2],p=t.outChannels,f=t.dataFormat==="channelsLast",m=!1,g=!1;let y;const b=[];if(o!=null){const w=Uf(o.shape,f);w!=null&&(o=ce({inputs:{x:o},backend:s,attrs:{shape:w}}),b.push(o))}if(r!=null){const w=Uf(r.shape,f);w!=null&&(r=ce({inputs:{x:r},backend:s,attrs:{shape:w}}),b.push(r))}if(!((h===1||p===1)&&d>JD)&&l.isPacked&&f&&l.texture!=null&&c[2]%2!==0&&Ge(l.shape.slice(-3),c.slice(-3))){const w=c[0]*c[1]*(c[2]+1),C={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},v=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,N(Wf(l.shape,C.shape),()=>`packed reshape ${l.shape} to ${C.shape} isn't free`);const k=ce({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(k);const $=Vf({a:C,b:k,backend:s,transposeA:m,transposeB:g,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),T=s.texData.get($.dataId);N(T.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=v,T.shape=t.outShape,y=xs({inputs:{x:$},backend:s}),y.shape=t.outShape,b.push($)}else{const w=t.outHeight*t.outWidth,C=ce({inputs:{x:n},backend:s,attrs:{shape:f?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),v=ce({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),k=Vf({a:f?C:v,b:f?v:C,transposeA:!f,transposeB:g,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});y=ce({inputs:{x:k},backend:s,attrs:{shape:t.outShape}}),b.push(C),b.push(v),b.push(k)}for(const w of b)s.disposeIntermediateTensorInfo(w);return y}u(iO,"conv2dByMatMul$1");function aO({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=t,m=f==="channelsLast",g=c*l*d,y=p*h,b=[t.batchSize,g,y],x=!0,S=!1,w=[];if(o!=null){const V=Uf(o.shape,m);V!=null&&(o=ce({inputs:{x:o},backend:s,attrs:{shape:V}}),w.push(o))}if(r!=null){const V=Uf(r.shape,m);V!=null&&(r=ce({inputs:{x:r},backend:s,attrs:{shape:V}}),w.push(r))}const C=ce({inputs:{x:e},backend:s,attrs:{shape:[1,g,U(e.shape)/g]}});w.push(C);const v=new Dde(b,t),k=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],$=s.runWebGLProgram(v,[n],"float32",k),T=ce({inputs:{x:$},backend:s,attrs:{shape:b}});w.push($),w.push(T);const E=r!=null,R=o!=null,O=a==="leakyrelu",L=a?Jl(a,!0):null,z=new QD(m?T.shape:C.shape,m?C.shape:T.shape,m?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],x,S,E,L,R,O),W=m?[T,C]:[C,T];if(r&&W.push(r),R&&W.push(o),O){const V=s.makeTensorInfo([],"float32",li(i,"float32"));W.push(V),w.push(V)}const A=s.runWebGLProgram(z,W,"float32"),G=ce({inputs:{x:A},backend:s,attrs:{shape:t.outShape}});w.push(A);for(const V of w)s.disposeIntermediateTensorInfo(V);return G}u(aO,"conv2dWithIm2Row");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ode(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:c,dilations:l,dimRoundingMode:d}=s,h=vs(c),p=kt(r.shape,o.shape,i,l,a,d,!1,h);let f;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))f=iO({x:r,filter:o,convInfo:p,backend:t});else if(p.strideWidth<=2&&h==="channelsLast"&&j().getBool("WEBGL_EXP_CONV")){const g=new oO(p),y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=t.runWebGLProgram(g,[r,o],"float32",y)}else if(j().getBool("WEBGL_CONV_IM2COL"))f=aO({x:r,filter:o,convInfo:p,backend:t});else{const g=new rO(p);f=t.runWebGLProgram(g,[r,o],"float32")}const m=ce({inputs:{x:f},backend:t,attrs:{shape:p.outShape}});return t.disposeIntermediateTensorInfo(f),m}u(Ode,"conv2d$1");const Fde={kernelName:Nd,backendName:"webgl",kernelFunc:Ode};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pde=class{static{u(this,"Conv2DDerFilterProgram")}constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Lde=class{static{u(this,"Conv2DDerInputProgram")}constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,c=s-1-e.padInfo.left,l=i?1:2,d=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Mde=class{static{u(this,"Conv3DDerFilterProgram")}constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zde=class{static{u(this,"Conv3DDerInputProgram")}constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,c=t-1-e.padInfo.front,l=s-1-e.padInfo.top,d=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${l}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:c,dimRoundingMode:l,filterShape:d}=s,h=vs(c),p=kt(r.shape,d,i,1,a,l,!1,h),f=new Pde(p);return t.runWebGLProgram(f,[r,o],"float32")}u(Bde,"conv2DBackpropFilter$1");const Wde={kernelName:km,backendName:"webgl",kernelFunc:Bde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vde{static{u(this,"Conv2DDerInputPackedProgram")}constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Ln(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ude(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:c,dataFormat:l,dimRoundingMode:d}=s,h=vs(l),p=kt(i,o.shape,a,1,c,d,!1,h);if(j().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[p.strideHeight,p.strideWidth]],m=new Vde(p);return t.runWebGLProgram(m,[r,o],"float32",f)}else{const f=new Lde(p);return t.runWebGLProgram(f,[r,o],"float32")}}u(Ude,"conv2DBackpropInput$1");const Gde={kernelName:Td,backendName:"webgl",kernelFunc:Ude};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c}=s,l=$r(r.shape,o.shape,i,c,a),d=new Ade(l);return t.runWebGLProgram(d,[r,o],"float32")}u(Hde,"conv3D$1");const jde={kernelName:Ed,backendName:"webgl",kernelFunc:Hde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:c}=s,l=$r(r.shape,c,i,1,a),d=new Mde(l);return t.runWebGLProgram(d,[r,o],"float32")}u(qde,"conv3DBackpropFilterV2$1");const Kde={kernelName:$m,backendName:"webgl",kernelFunc:qde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xde(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:c}=s,l=$r(c,o.shape,a,1,i),d=new zde(l);return t.runWebGLProgram(d,[r,o],"float32")}u(Xde,"conv3DBackpropInput");const Yde={kernelName:Nm,backendName:"webgl",kernelFunc:Xde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qde=Ju+`
  return cos(x);
`,Jde=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${_a}
  return result;
`,Zde=it({opSnippet:Qde,packedOpSnippet:Jde}),ehe={kernelName:tu,backendName:"webgl",kernelFunc:Zde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const the=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,nhe=it({opSnippet:the}),she={kernelName:nu,backendName:"webgl",kernelFunc:nhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rhe=class{static{u(this,"CropAndResizeProgram")}constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,c,l]=e,[d]=t,[h,p]=s;this.outputShape=[d,h,p,l];const f=r==="bilinear"?1:0,[m,g]=[`${a-1}.0`,`${c-1}.0`],[y,b,x]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[S,w,C]=p>1?[`${(c-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${S});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ohe=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:c,extrapolationValue:l}=s,d=new rhe(r.shape,o.shape,a,c,l);return t.runWebGLProgram(d,[r,o,i],"float32")},"cropAndResize$1"),ihe={kernelName:Em,backendName:"webgl",kernelFunc:ohe};var ed;(function(n){n.Prod="*",n.Sum="+"})(ed||(ed={}));let LI=class{static{u(this,"CumProgram")}constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===ed.Prod?"1.0":"0.0",a=s?i:`getX(${MI(o,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let l="",d="";s?(l=r?`end != ${c-1}`:"end != 0",d=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${c}`:"end >= pow2",d=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${bt(o)} coords = getOutputCoords();
        int end = ${zI(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${d};
          ${zI(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${MI(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function MI(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}u(MI,"getCoords$2");function zI(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}u(zI,"getFinalCoord$1");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n,e,t,s,r,o){const i=e.shape.length,a=xt([s],i);let c=e;a!=null&&(c=Gn({inputs:{x:e},backend:t,attrs:{perm:a}}));const l=$t(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const d=c.shape[l];let h=xs({inputs:{x:c},backend:t});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){const f=new LI(n,c.shape,!1,o),m=[[p]],g=h;h=t.runWebGLProgram(f,[h],h.dtype,m),t.disposeIntermediateTensorInfo(g)}if(r){const p=new LI(n,c.shape,r,o),f=h;h=t.runWebGLProgram(p,[h],h.dtype),t.disposeIntermediateTensorInfo(f)}if(a!=null){const p=Kr(a),f=Gn({inputs:{x:h},backend:t,attrs:{perm:p}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(c),f}return h}u(cO,"cumImpl$1");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ahe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return cO(ed.Prod,r,t,o,i,a)}u(ahe,"cumprod$1");const che={kernelName:Tm,backendName:"webgl",kernelFunc:ahe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return cO(ed.Sum,r,t,o,i,a)}u(uhe,"cumsum$1");const lhe={kernelName:_d,backendName:"webgl",kernelFunc:uhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const c=t.readSync(r.dataId),l=t.readSync(o.dataId),d=VD(c,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,d)}else if(r.shape.length===2){const c=t.bufferSync(r),l=t.bufferSync(o),d=mce(c,l,i,a);return t.makeTensorInfo(d.shape,o.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}u(dhe,"denseBincount$1");const hhe={kernelName:_m,backendName:"webgl",kernelFunc:dhe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let phe=class{static{u(this,"DepthToSpaceProgram")}constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],c=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],d=i==="NHWC"?r.shape[3]:r.shape[1],h=c*o,p=l*o,f=d/(o*o),m=i==="NHWC"?[a,h,p,f]:[a,f,h,p],g=new phe(m,o,i);return t.runWebGLProgram(g,[r],r.dtype)}u(fhe,"depthToSpace$1");const mhe={kernelName:Rm,backendName:"webgl",kernelFunc:fhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uO=class{static{u(this,"DepthwiseConv2DProgram")}constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,c=e.outChannels/e.inChannels;let l="",d="";s&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:l=`
          float activation(float x) {
            ${s}
          }
        `,d="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${d}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lO{static{u(this,"DepthwiseConvPacked2DProgram")}constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<h;b++)f+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;f+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let b=0;b<h;b++)f+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(p+1)/2;b++){const x=b*2;if(f+=`
          xC = xCCorner + ${x*l};
          `,c===1){if(x<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,l===1&&x>0?f+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const S=a%2===0?rw(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${S};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,l>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:f+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):S===1?f+=`
                    xC${x+1} = xTexelC${x};
                    `:f+=`
                    xCOffset = xC + ${S};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(f+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(f+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let m="",g="";s&&(r?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:m=`vec4 activation(vec4 x) {
          ${s}
        }`,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ghe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c,dimRoundingMode:l}=s;let d=c;d==null&&(d=[1,1]),N(hn(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const h=kt(r.shape,o.shape,i,d,a,l,!0);let p;j().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?p=new lO(h):p=new uO(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(p,[r,o],"float32",f)}u(ghe,"depthwiseConv2dNative$1");const yhe={kernelName:Rd,backendName:"webgl",kernelFunc:ghe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bhe=class{static{u(this,"DepthwiseConv2DDerFilterProgram")}constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xhe=class{static{u(this,"DepthwiseConv2DDerInputProgram")}constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function whe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,filterShape:d}=s,h=kt(r.shape,d,i,a,c,l,!0),p=new bhe(h);return t.runWebGLProgram(p,[r,o],"float32")}u(whe,"depthwiseConv2dNativeBackpropFilter$1");const She={kernelName:Am,backendName:"webgl",kernelFunc:whe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Che(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,inputShape:d}=s,h=kt(d,o.shape,i,a,c,l,!0),p=new xhe(h);return t.runWebGLProgram(p,[r,o],"float32")}u(Che,"depthwiseConv2dNativeBackpropInput$1");const vhe={kernelName:Dm,backendName:"webgl",kernelFunc:Che};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ihe=class{static{u(this,"DiagProgram")}constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function khe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=U(s.shape),i=ce({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new Ihe(o),c=t.runWebGLProgram(a,[i],i.dtype),l=ce({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),l}u(khe,"diag$1");const $he={kernelName:Om,backendName:"webgl",kernelFunc:khe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nhe=class{static{u(this,"Dilation2DProgram")}constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:c,dilationHeight:l,dilationWidth:d}=e,{top:h,left:p}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function The(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c}=s,l=pi(r.shape,o.shape,i,a,"NHWC",c);let d;const h=new Nhe(l);d=t.runWebGLProgram(h,[r,o],"float32");const p=ce({inputs:{x:d},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(d),p}u(The,"dilation2D$1");const Ehe={kernelName:Ad,backendName:"webgl",kernelFunc:The};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _he(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:c}=ny(r,o.length);ry(i.length,c,o);const{path:l,steps:d}=oy(a,c),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const y of d[g]){const{permutationIndices:b,expandDims:x}=sy(f,c[y]);let S;iy(b)?S=o[y]:(S=Gn({inputs:{x:o[y]},backend:t,attrs:{perm:b}}),m.push(S));const w=S.shape.slice();for(let C=0;C<x.length;++C)w.splice(x[C],0,1);Ge(S.shape,w)||(S=ce({inputs:{x:S},backend:t,attrs:{shape:w}}),m.push(S)),p===null?p=S:(p=n1({inputs:{a:S,b:p},backend:t}),m.push(p))}g<h-1&&(l[g]>=0&&(p=Iy({inputs:{x:p},backend:t,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&t.disposeIntermediateTensorInfo(g);return p}u(_he,"einsum$1");const Rhe={kernelName:Fm,backendName:"webgl",kernelFunc:_he};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ahe="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dhe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ohe=it({opSnippet:Ahe,packedOpSnippet:Dhe}),Fhe={kernelName:ru,backendName:"webgl",kernelFunc:Ohe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Phe="return (b >= 0.0) ? a : a * (b + 1.0);",Lhe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Mhe=u(n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qu(Lhe,s.shape,r.shape):new la(Phe,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},"eluGrad$1"),zhe={kernelName:Pm,backendName:"webgl",kernelFunc:Mhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bhe=`
  return vec4(equal(a, b));
`,Whe="return float(a == b);",Vhe=_n({opSnippet:Whe,packedOpSnippet:Bhe,dtype:"bool",cpuKernelImpl:wce}),Uhe={kernelName:Dd,backendName:"webgl",kernelFunc:Vhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ghe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Yg};
  float a1 = ${Qg};
  float a2 = ${Jg};
  float a3 = ${Zg};
  float a4 = ${ey};
  float a5 = ${ty};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Hhe=it({opSnippet:Ghe}),jhe={kernelName:ou,backendName:"webgl",kernelFunc:Hhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qhe=Ju+`
  return exp(x);
`,Khe=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dO=it({opSnippet:qhe,packedOpSnippet:Khe,cpuKernelImpl:Sce,dtype:"float32"}),Xhe={kernelName:iu,backendName:"webgl",kernelFunc:dO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let c=r;return r<0&&(N(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+r+1),a.splice(c,0,1),ce({inputs:{x:o},backend:s,attrs:{shape:a}})}u(n0,"expandDims$1");const Yhe={kernelName:Od,backendName:"webgl",kernelFunc:n0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI="return exp(x) - 1.0;",Qhe=it({opSnippet:BI,packedOpSnippet:BI,cpuKernelImpl:Cce}),Jhe={kernelName:au,backendName:"webgl",kernelFunc:Qhe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let WI=class{static{u(this,"FFTProgram")}constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n,e,t){const s=t.texData.get(n.dataId),r=U(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=ce({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),c=a.shape,l=new WI("real",c,e),d=new WI("imag",c,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],p=t.runWebGLProgram(l,h,"float32"),f=t.runWebGLProgram(d,h,"float32"),m=xi({inputs:{real:p,imag:f},backend:t});t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f);const g=ce({inputs:{x:m},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(m),g}u(hO,"fftImpl$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zhe(n){const{inputs:e,backend:t}=n,{input:s}=e;return hO(s,!1,t)}u(Zhe,"fft$1");const epe={kernelName:Lm,backendName:"webgl",kernelFunc:Zhe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tpe=class{static{u(this,"FillProgram")}constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||ga(r),o==="string"){const i=Ht(o,U(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new tpe(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}u(Bh,"fill$1");const npe={kernelName:Mm,backendName:"webgl",kernelFunc:Bh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let spe=class{static{u(this,"FlipLeftRightProgram")}constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rpe={kernelName:zm,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new spe(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VI="return floor(x);",ope=it({opSnippet:VI,packedOpSnippet:VI,cpuKernelImpl:vce}),ipe={kernelName:cu,backendName:"webgl",kernelFunc:ope};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ape=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,cpe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,upe=_n({opSnippet:ape,packedOpSnippet:cpe,dtype:"int32"}),lpe={kernelName:uu,backendName:"webgl",kernelFunc:upe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dpe=class{static{u(this,"FromPixelsProgram")}constructor(e){this.variableNames=["A"];const t=jn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hpe{static{u(this,"FromPixelsPackedProgram")}constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=jn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ppe={kernelName:gf,backendName:"webgl",kernelFunc:fpe};let Ma,mb=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function fpe(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[c,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[l,c],h=[l,c,o];if(a||i){const g=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ma==null||g!==mb)&&(mb=g,Ma=document.createElement("canvas").getContext("2d",{willReadFrequently:mb})),Ma.canvas.width=c,Ma.canvas.height=l,Ma.drawImage(r,0,0,c,l),r=Ma.canvas}const p=t.makeTensorInfo(d,"int32");t.texData.get(p.dataId).usage=Es.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(p.dataId),r);const f=j().getBool("WEBGL_PACK")?new hpe(h):new dpe(h),m=t.runWebGLProgram(f,[p],"int32");return t.disposeData(p.dataId),m}u(fpe,"fromPixels$1");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s,g=vs(d),y=kt(r.shape,o.shape,c,h,l,p,!1,g);let b;const x=[],S=i!=null,w=a!=null,C=f==="leakyrelu",v=u(()=>{const $=[r,o],T=u((E,R)=>{if(R==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const O=ce({inputs:{x:E},backend:t,attrs:{shape:[E.shape[0],1,1]}});return x.push(O),O}return E},"alignInputWithDataFormat");if(S&&$.push(T(i,d)),w&&$.push(T(a,d)),C){const E=t.makeTensorInfo([],"float32",li(m,"float32"));$.push(E),x.push(E)}return $},"prepareInputs");if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=iO({x:r,filter:o,convInfo:y,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:m});else if(y.strideWidth<=2&&g==="channelsLast"&&j().getBool("WEBGL_EXP_CONV")){const $=f?Jl(f,!0):null,T=new oO(y,S,$,w,C),E=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],R=v();b=t.runWebGLProgram(T,R,"float32",E)}else if(j().getBool("WEBGL_CONV_IM2COL"))b=aO({x:r,filter:o,convInfo:y,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:m});else{const $=f?Jl(f,!1):null,T=new rO(y,S,$,w,C),E=v();b=t.runWebGLProgram(T,E,"float32")}const k=ce({inputs:{x:b},backend:t,attrs:{shape:y.outShape}});return x.push(b),x.forEach($=>t.disposeIntermediateTensorInfo($)),k}u(mpe,"fusedConv2d$1");const gpe={kernelName:Ml,backendName:"webgl",kernelFunc:mpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ype(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=[];let g=d;g==null&&(g=[1,1]),N(hn(c,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`);const y=kt(r.shape,o.shape,c,g,l,h,!0),b=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=p?Jl(p,b):null,S=[r,o],w=i!=null,C=a!=null,v=p==="leakyrelu";if(w&&S.push(i),C&&S.push(a),v){const E=t.makeTensorInfo([],"float32",li(f,"float32"));S.push(E),m.push(E)}let k;b?k=new lO(y,w,x,C,v):k=new uO(y,w,x,C,v);const $=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=t.runWebGLProgram(k,S,"float32",$);return m.forEach(E=>t.disposeIntermediateTensorInfo(E)),T}u(ype,"fusedDepthwiseConv2D$1");const bpe={kernelName:zl,backendName:"webgl",kernelFunc:ype};let xpe=class{static{u(this,"GatherNDProgram")}constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=bt(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wpe(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=U(s.shape),[c,l,d,h]=Wg(s,r),p=ce({inputs:{x:r},backend:t,attrs:{shape:[l,i]}}),f=ce({inputs:{x:s},backend:t,attrs:{shape:[U(s.shape)/d,d]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const b=t.readSync(r.dataId),x=t.bufferSync(s),S=Ice(b,x,s.dtype,l,i,d,h,s.shape,a);return t.makeTensorInfo(c,s.dtype,S.values)}const m=new xpe(i,h,[l,d],s.shape),g=t.runWebGLProgram(m,[f,p],f.dtype),y=ce({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}u(wpe,"gatherNd$1");const Spe={kernelName:Bm,backendName:"webgl",kernelFunc:wpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cpe=class{static{u(this,"GatherProgram")}constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=bt(this.rank),r=vpe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function vpe(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}u(vpe,"getSourceCoords$3");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,c=Pe(i,r.shape)[0];if(j().get("DEBUG")){const x=t.readSync(o.dataId),S=r.shape[c];for(let w=0;w<x.length;++w){const C=x[w];N(C<=S-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${S-1}]`)}}const l=cy(r,o,c,a),d=U(o.shape),h=[],p=ce({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=ce({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const x=t.bufferSync(f),S=t.bufferSync(p),w=kce(S,x,m);return h.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.makeTensorInfo(l.outputShape,w.dtype,w.values)}const g=new Cpe(p.shape,m),y=t.runWebGLProgram(g,[p,f],p.dtype);h.push(y);const b=ce({inputs:{x:y},backend:t,attrs:{shape:l.outputShape}});return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),b}u(pO,"gatherV2$1");const Ipe={kernelName:Pd,backendName:"webgl",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kpe="return float(a > b);",$pe=`
  return vec4(greaterThan(a, b));
`,Npe=_n({opSnippet:kpe,packedOpSnippet:$pe,cpuKernelImpl:$ce,dtype:"bool"}),Tpe={kernelName:Ld,backendName:"webgl",kernelFunc:Npe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Epe="return float(a >= b);",_pe=`
  return vec4(greaterThanEqual(a, b));
`,Rpe=_n({opSnippet:Epe,packedOpSnippet:_pe,dtype:"bool",cpuKernelImpl:Nce}),Ape={kernelName:lu,backendName:"webgl",kernelFunc:Rpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dpe(n){const{inputs:e,backend:t}=n,{input:s}=e;return hO(s,!0,t)}u(Dpe,"ifft$1");const Ope={kernelName:Wm,backendName:"webgl",kernelFunc:Dpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fpe="return float(!isnan(x) && !isinf(x));",Ppe=it({opSnippet:Fpe,dtype:"bool"}),Lpe={kernelName:hu,backendName:"webgl",kernelFunc:Ppe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mpe="return float(isinf(x));",zpe=it({opSnippet:Mpe,dtype:"bool"}),Bpe={kernelName:pu,backendName:"webgl",kernelFunc:zpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wpe="return float(isnan(x));",Vpe=it({opSnippet:Wpe,dtype:"bool"}),Upe={kernelName:fu,backendName:"webgl",kernelFunc:Vpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gpe="return float(a < b);",Hpe=`
  return vec4(lessThan(a, b));
`,jpe=_n({opSnippet:Gpe,packedOpSnippet:Hpe,cpuKernelImpl:Tce,dtype:"bool"}),qpe={kernelName:zd,backendName:"webgl",kernelFunc:jpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kpe="return float(a <= b);",Xpe=`
  return vec4(lessThanEqual(a, b));
`,Ype=_n({opSnippet:Kpe,packedOpSnippet:Xpe,cpuKernelImpl:Ece,dtype:"bool"}),Qpe={kernelName:Bd,backendName:"webgl",kernelFunc:Ype};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jpe(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=_ce(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}u(Jpe,"linSpace$1");const Zpe={kernelName:Um,backendName:"webgl",kernelFunc:Jpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const efe=Ju+`
  return x < 0.0 ? 0./0. : log(x);
`,tfe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,nfe=it({opSnippet:efe,packedOpSnippet:tfe,cpuKernelImpl:Rce}),sfe={kernelName:mu,backendName:"webgl",kernelFunc:nfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rfe=Ju+`
  return log(1.0 + x);
`,ofe=it({opSnippet:rfe}),ife={kernelName:gu,backendName:"webgl",kernelFunc:ofe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const afe="return float(a >= 1.0 && b >= 1.0);",cfe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,ufe=_n({opSnippet:afe,packedOpSnippet:cfe,dtype:"bool"}),lfe={kernelName:Wd,backendName:"webgl",kernelFunc:ufe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dfe="return float(!(x >= 1.0));",hfe=it({opSnippet:dfe}),pfe={kernelName:Vd,backendName:"webgl",kernelFunc:hfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ffe="return float(a >= 1.0 || b >= 1.0);",mfe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,gfe=_n({opSnippet:ffe,packedOpSnippet:mfe,dtype:"bool"}),yfe={kernelName:Ud,backendName:"webgl",kernelFunc:gfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bfe=class{static{u(this,"LRNProgram")}constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${l})`:o===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xfe{static{u(this,"LRNPackedProgram")}constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${l})`:o===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wfe=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:c}=s,l=j().getBool("WEBGL_PACK_NORMALIZATION")?new xfe(r.shape,o,i,a,c):new bfe(r.shape,o,i,a,c);return t.runWebGLProgram(l,[r],r.dtype)},"lrn$1"),Sfe={kernelName:Gd,backendName:"webgl",kernelFunc:wfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cfe=class{static{u(this,"LRNGradProgram")}constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vfe=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:c,alpha:l,beta:d}=s,h=new Cfe(r.shape,a,c,l,d);return t.runWebGLProgram(h,[r,o,i],r.dtype)},"lrnGrad$1"),Ife={kernelName:Gm,backendName:"webgl",kernelFunc:vfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kfe(n,e,t,s){const r=U(e),i=U(n.shape)/r,a=ce({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),c=Ra(a,n.dtype,"max",s),l=ce({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(c),l}u(kfe,"maxImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,c=Pe(o,r.shape);let l=c;const d=xt(l,a),h=d!=null,p=t.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const S=t.texData.get(f.dataId).values,w=new Array(a);for(let k=0;k<w.length;k++)w[k]=r.shape[d[k]];const C=e1(S,r.shape,r.dtype,d,w);f=t.makeTensorInfo(w,r.dtype);const v=t.texData.get(f.dataId);v.values=C}else f=vy(r,d,t);l=$t(l.length,a)}tn("max",l,a);const[m,g]=Yt(f.shape,l);let y=m;i&&(y=qt(m,c));let b;if(p){const S=t.texData.get(f.dataId).values,w=Ace(S,U(g),y,r.dtype);b=t.makeTensorInfo(y,r.dtype);const C=t.texData.get(b.dataId);C.values=w}else b=kfe(f,g,y,t);return h&&t.disposeIntermediateTensorInfo(f),b}u(fO,"max$1");const $fe={kernelName:Hd,backendName:"webgl",kernelFunc:fO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nfe=t1+`
  return max(a, b);
`,Tfe=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+_a+`
  return result;
`,Efe=_n({opSnippet:Nfe,packedOpSnippet:Tfe,cpuKernelImpl:Dce}),_fe={kernelName:yu,backendName:"webgl",kernelFunc:Efe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Lh(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=s,l=1;N(hn(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=Fn(r.shape,o,i,l,a,c);if(d.filterWidth===1&&d.filterHeight===1&&Ge(d.inShape,d.outShape))return xs({inputs:{x:r},backend:t});const h=new Zl(d,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}u(Rfe,"maxPool$1");const Afe={kernelName:jd,backendName:"webgl",kernelFunc:Rfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:c,dimRoundingMode:l}=s,d=[1,1,1],h=Os(r.shape,o,i,d,a,l,c),p=new s1(h,"max",!1);return t.runWebGLProgram(p,[r],r.dtype)}u(Dfe,"maxPool3d$1");const Ofe={kernelName:qd,backendName:"webgl",kernelFunc:Dfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ffe=class{static{u(this,"MaxPool2DBackpropProgram")}constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,c=i-1-e.padInfo.left,l=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Pfe=class{static{u(this,"MaxPool3DBackpropProgram")}constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,p=l-1-e.padInfo.top,f=d-1-e.padInfo.left,m=c*l*d-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${p}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lfe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:c,pad:l,dimRoundingMode:d}=s,h=[1,1,1],p=Os(i.shape,a,c,h,l,d),f=new s1(p,"max",!0),m=t.runWebGLProgram(f,[i],i.dtype),g=new Pfe(p),y=t.runWebGLProgram(g,[r,m],i.dtype);return t.disposeIntermediateTensorInfo(m),y}u(Lfe,"maxPool3DGrad$1");const Mfe={kernelName:jm,backendName:"webgl",kernelFunc:Lfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zfe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Lh([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=s,p=Fn(a.shape,c,l,1,d,h),f=!0,m=new Zl(p,"max",f),g=t.runWebGLProgram(m,[a],a.dtype),y=new Ffe(p),b=t.runWebGLProgram(y,[r,g],a.dtype);return t.disposeIntermediateTensorInfo(g),b}u(zfe,"maxPoolGrad$1");const Bfe={kernelName:Hm,backendName:"webgl",kernelFunc:zfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wfe(n,e,t,s){let r=new Zl(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Zl(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}u(Wfe,"maxPoolWithArgmaxImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vfe={kernelName:qm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,c=t;N(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];N(hn(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const d=Fn(s.shape,r,o,l,i),[h,p]=Wfe(s,a,d,c);return[h,p]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ufe(n,e,t,s){const r=U(e),i=U(n.shape)/r,a=ce({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),c=Ra(a,"float32","mean",s),l=ce({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(c),l}u(Ufe,"meanImpl");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gfe={kernelName:Kd,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,a=s.shape.length,c=Pe(o,s.shape);let l=c;const d=xt(l,a),h=d!=null,p=i.shouldExecuteOnCPU([s]),f=[];let m=s;if(h){if(p){const w=i.texData.get(m.dataId).values,C=new Array(a);for(let $=0;$<C.length;$++)C[$]=s.shape[d[$]];const v=e1(w,s.shape,s.dtype,d,C);m=i.makeTensorInfo(C,s.dtype);const k=i.texData.get(m.dataId);k.values=v}else m=vy(s,d,i);f.push(m),l=$t(l.length,a)}tn("sum",l,a);const[g,y]=Yt(m.shape,l);let b=g;r&&(b=qt(g,c));const x=Ufe(m,y,b,i);for(const S of f)i.disposeIntermediateTensorInfo(S);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,c=Pe(o,r.shape);let l=c;const d=xt(l,a);let h=r;d!=null&&(h=Gn({inputs:{x:r},backend:t,attrs:{perm:d}}),l=$t(l.length,r.shape.length)),tn("min",l,a);const[p,f]=Yt(h.shape,l),m=U(f),g=ce({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),y=Ra(g,g.dtype,"min",t);let b;if(i){const x=qt(p,c);b=ce({inputs:{x:y},backend:t,attrs:{shape:x}})}else b=ce({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),d!=null&&t.disposeIntermediateTensorInfo(h),b}u(Hfe,"min$1");const jfe={kernelName:Xd,backendName:"webgl",kernelFunc:Hfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qfe=t1+`
  return min(a, b);
`,Kfe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+_a+`
  return result;
`,Xfe=_n({opSnippet:qfe,packedOpSnippet:Kfe,cpuKernelImpl:Oce}),Yfe={kernelName:bu,backendName:"webgl",kernelFunc:Xfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qfe=class{static{u(this,"MirrorPadProgram")}constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);const r=e.length,o=bt(r),i=t.map(d=>d[0]).join(","),a=t.map((d,h)=>d[0]+e[h]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jfe{static{u(this,"MirrorPadPackedProgram")}constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=bt(r),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),c=Wn("rc",r),l=Wn("source",r),d=`${c[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${l.slice(-2).join()})`,p=s==="reflect"?0:1;let f="";if(r===1){const m=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${c[r-1]} += 1;
        if(${d}) {
          ${m}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{const m=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${c[r-1]} += 1;
        if(${d}) {
          ${m}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${c[r-2]} += 1;
        if(${c[r-2]} < ${this.outputShape[r-2]}) {
          ${m}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${c[r-1]} += 1;
          if(${d}) {
            ${m}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zfe=u(({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jfe(s.shape,r,o):new Qfe(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},"mirrorPadKernelFunc"),eme={kernelName:Yd,backendName:"webgl",kernelFunc:Zfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tme=`if (b == 0.0) return NAN;
  return mod(a, b);`,nme=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+_a+`
  return result;
`,sme=_n({opSnippet:tme,packedOpSnippet:nme}),rme={kernelName:xu,backendName:"webgl",kernelFunc:sme};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ome=class{static{u(this,"MultinomialProgram")}constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ime=`
if (a == b) {
  return 1.0;
};
return a / b;`,ame=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,mO=_n({opSnippet:ime,packedOpSnippet:ame,checkOutOfBounds:!0}),cme={kernelName:su,backendName:"webgl",kernelFunc:mO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI="return a - b;",gO=_n({opSnippet:UI,packedOpSnippet:UI,supportsComplex:!0,cpuKernelImpl:tue}),ume={kernelName:Fu,backendName:"webgl",kernelFunc:gO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=Pe([o],r.shape),a=fO({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),c=qt(a.shape,i),l=ce({inputs:{x:a},backend:t,attrs:{shape:c}}),d=gO({inputs:{a:r,b:l},backend:t}),h=dO({inputs:{x:d},backend:t}),p=Iy({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),f=ce({inputs:{x:p},backend:t,attrs:{shape:c}}),m=mO({inputs:{a:h,b:f},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}u(yO,"softmax$1");const lme={kernelName:fh,backendName:"webgl",kernelFunc:yO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dme(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,c=a?r:yO({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),l=c.shape[0],d=c.shape[1],h=new ome(l,d,o),p=[[i]],f=t.runWebGLProgram(h,[c],"int32",p);return a||t.disposeIntermediateTensorInfo(c),f}u(dme,"multinomial$1");const hme={kernelName:Km,backendName:"webgl",kernelFunc:dme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pme=ar+`
  return -x;
`,fme=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function mme(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,a]=Pce(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let r;return j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Bo(s.shape,fme):r=new Mr(s.shape,pme),t.runWebGLProgram(r,[s],s.dtype)}u(mme,"neg$1");const gme={kernelName:Qd,backendName:"webgl",kernelFunc:mme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yme=zg;function bme(n){Ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c}=s,l=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:h}=yme(l,d,i,a,c);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}u(bme,"nonMaxSuppressionV3$1");const xme={kernelName:Xm,backendName:"webgl",kernelFunc:bme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wme=cS;function Sme(n){Ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,padToMaxOutputSize:l}=s,d=t.readSync(r.dataId),h=t.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=wme(d,h,i,a,c,l);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}u(Sme,"nonMaxSuppressionV4");const Cme={kernelName:uw,backendName:"webgl",kernelFunc:Sme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vme=Bg;function Ime(n){Ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,softNmsSigma:l}=s,d=t.readSync(r.dataId),h=t.readSync(o.dataId),p=i,f=a,m=c,g=l,{selectedIndices:y,selectedScores:b}=vme(d,h,p,f,m,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}u(Ime,"nonMaxSuppressionV5$1");const kme={kernelName:Ym,backendName:"webgl",kernelFunc:Ime};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $me=class{static{u(this,"OneHotProgram")}constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nme=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:c}=s,l=U(r.shape),d=new $me(l,i,a,c),h=ce({inputs:{x:r},backend:t,attrs:{shape:[l]}}),p=t.runWebGLProgram(d,[h],o);t.disposeIntermediateTensorInfo(h);const f=[...r.shape,i],m=ce({inputs:{x:p},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(p),m},"oneHot$1"),Tme={kernelName:eh,backendName:"webgl",kernelFunc:Nme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=zh({inputs:{input:s},backend:t}),o=Gf({inputs:{x:r},backend:t}),i=ky({inputs:{input:s},backend:t}),a=Gf({inputs:{x:i},backend:t}),c=xi({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return Bh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}u(Gf,"zerosLike$1");const Eme={kernelName:yh,backendName:"webgl",kernelFunc:Gf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=zh({inputs:{input:s},backend:t}),o=bO({inputs:{x:r},backend:t}),i=ky({inputs:{input:s},backend:t}),a=Gf({inputs:{x:i},backend:t}),c=xi({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return Bh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}u(bO,"onesLike$1");const _me={kernelName:Zd,backendName:"webgl",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rme(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return n0({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(d=>{cs(o,d.shape,"All tensors passed to stack must have matching shapes"),N(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=e.map(d=>{const h=n0({inputs:{input:d},backend:t,attrs:{dim:r}});return a.push(h),h}),l=sO({inputs:c,backend:t,attrs:{axis:r}});return a.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}u(Rme,"pack$1");const Ame={kernelName:th,backendName:"webgl",kernelFunc:Rme};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dme=class{static{u(this,"PadProgram")}constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const r=e.length,o=bt(r),i=t.map(l=>l[0]).join(","),a=t.map((l,d)=>l[0]+e[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ome{static{u(this,"PadPackedProgram")}constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,y)=>g[0]+e[y]+g[1]);const r=e.length,o=bt(r),i=t.map(g=>g[0]).join(","),a=t.map((g,y)=>g[0]+e[y]).join(","),c=Wn("rc",r),l=Wn("source",r),d=`${c[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${o} rc = outputLoc;`,`${c[r-1]} += 1;
       if(${d}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${c[r-2]} += 1;
       if(${c[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${c[r-1]} += 1;
         if(${d}) {`],f=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let g=0,y=r===1?2:4;g<y;g++)m+=`
        ${p[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${g}] = getChannel(getX(${l.join()}), ${h});
        }
      `;m+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xO=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(U(r.shape)===0){const l=o.map((d,h)=>d[0]+r.shape[h]+d[1]);return Bh({backend:t,attrs:{shape:l,value:i,dtype:r.dtype}})}const a=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ome(r.shape,o,i):new Dme(r.shape,o,i),c=[[i]];return t.runWebGLProgram(a,[r],r.dtype,c)},"padV2$1"),Fme={kernelName:nh,backendName:"webgl",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pme=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Lme=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+_a+`
  return result;
`,Mme=_n({opSnippet:Pme,packedOpSnippet:Lme}),zme={kernelName:Su,backendName:"webgl",kernelFunc:Mme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,c=[],l=Pe(o,r.shape);let d=l;const h=xt(d,a);let p=r;h!=null&&(p=Gn({inputs:{x:r},backend:t,attrs:{perm:h}}),d=$t(d.length,a),c.push(p)),tn("prod",d,a);let f;if(t.shouldExecuteOnCPU([p])){const m=t.texData.get(p.dataId).values,{outVals:g,outShape:y,outDtype:b}=Mce(p.shape,p.dtype,m,d);f=t.makeTensorInfo(y,b,g)}else{const[m,g]=Yt(p.shape,d),y=U(g),b=ce({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}}),x=mg(r.dtype),S=Ra(b,x,"prod",t);f=ce({inputs:{x:S},backend:t,attrs:{shape:m}}),c.push(b),c.push(S)}if(i){c.push(f);const m=qt(f.shape,l);f=ce({inputs:{x:f},backend:t,attrs:{shape:m}})}return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}u(Bme,"prod$1");const Wme={kernelName:rh,backendName:"webgl",kernelFunc:Bme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vme(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,c=r.map(b=>t.readSync(b.dataId)),l=r.map(b=>b.shape),d=t.readSync(o.dataId),h=t.readSync(i.dataId),[p,f,m]=zce(c,l,d,o.shape,o.dtype,h,i.shape,a),g=p.map(b=>t.makeTensorInfo([b.length],"int32",b)),y=t.makeTensorInfo(m,o.dtype,f);return g.concat([y])}u(Vme,"raggedGather");const Ume={kernelName:lw,backendName:"webgl",kernelFunc:Vme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gme(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),c=t.readSync(o.dataId),[l,d]=Bce(i,s.shape,s.dtype,a,r.shape,c,o.shape),h=t.makeTensorInfo([l.length],"int32",l),p=t.makeTensorInfo([d.length],s.dtype,d);return[h,p]}u(Gme,"raggedRange");const Hme={kernelName:dw,backendName:"webgl",kernelFunc:Gme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jme(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:c}=s,l=t.readSync(r.dataId),d=t.readSync(o.dataId),h=t.readSync(i.dataId),p=a.map(y=>t.readSync(y.dataId)),f=a.map(y=>y.shape),[m,g]=Wce(l,r.shape,d,o.shape,o.dtype,h,i.shape,p,f,c);return t.makeTensorInfo(m,o.dtype,g)}u(jme,"raggedTensorToTensor");const qme={kernelName:hw,backendName:"webgl",kernelFunc:jme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO=u(n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=Vce(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},"range$1"),Kme={kernelName:Qm,backendName:"webgl",kernelFunc:wO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xme="return 1.0 / x;",Yme=it({opSnippet:Xme}),Qme={kernelName:Cu,backendName:"webgl",kernelFunc:Yme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jme=ar+`
  return (x < 0.0) ? 0.0 : x;
`,Zme=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ege=it({opSnippet:Jme,packedOpSnippet:Zme}),tge={kernelName:vu,backendName:"webgl",kernelFunc:ege};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nge=ar+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,sge=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rge=it({opSnippet:nge,packedOpSnippet:sge}),oge={kernelName:Iu,backendName:"webgl",kernelFunc:rge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ige=class{static{u(this,"ResizeBilinearProgram")}constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?a-1:a,r&&s>1?c-1:c],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let p;o?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/h[0]},
          ${d[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class age{static{u(this,"ResizeBilinearPackedProgram")}constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?a-1:a,r&&s>1?c-1:c],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let p;o?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/h[0]},
          ${d[1]/h[1]},
          ${d[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cge(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[c,l]=a,d=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new age(r.shape,c,l,o,i):new ige(r.shape,c,l,o,i);return t.runWebGLProgram(d,[r],"float32")}u(cge,"resizeBilinear$1");const uge={kernelName:ah,backendName:"webgl",kernelFunc:cge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lge=class{static{u(this,"ResizeBilinearBackpropProgram")}constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,c=[s&&i>1?r-1:r,s&&a>1?o-1:o],l=[s&&i>1?i-1:i,s&&a>1?a-1:a],d=c[0]/l[0],h=c[1]/l[1],p=1/d,f=1/h,m=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dge(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new lge(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}u(dge,"resizeBilinearGrad$1");const hge={kernelName:eg,backendName:"webgl",kernelFunc:dge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pge=class{static{u(this,"ResizeNearestNeighborProgram")}constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?a-1:a,r&&s>1?c-1:c],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],p=r?"0.5":"0.0";let f;o?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/h[0]},
          ${d[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fge{static{u(this,"ResizeNearestNeighborPackedProgram")}constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?a-1:a,r&&s>1?c-1:c],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],p=r?"0.5":"0.0";let f;o?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/h[0]},
          ${d[1]/h[1]},
          ${d[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mge(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[c,l]=a,d=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fge(r.shape,c,l,o,i):new pge(r.shape,c,l,o,i);return t.runWebGLProgram(d,[r],r.dtype)}u(mge,"resizeNearestNeighbor$1");const gge={kernelName:ih,backendName:"webgl",kernelFunc:mge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yge=class{static{u(this,"ResizeNearestNeigborBackpropProgram")}constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,c=[s&&i>1?r-1:r,s&&a>1?o-1:o],l=[s&&i>1?i-1:i,s&&a>1?a-1:a],d=c[0]/l[0],h=c[1]/l[1],p=1/d,f=1/h,m=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bge(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new yge(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}u(bge,"resizeNearestNeighborGrad$1");const xge={kernelName:Zm,backendName:"webgl",kernelFunc:bge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wge=class{static{u(this,"ReverseProgram")}constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=u(a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,"getInCoord"),o=e.map((a,c)=>r(c)).join(","),i=bt(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sge{static{u(this,"ReversePackedProgram")}constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Wn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=bt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(r.slice())};
          if(${o}){
            result.g = ${l(r.slice())};
          }
          if(${i}) {
            result.b = ${d(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(m){return p(m)}u(c,"getR");function l(m){return m[s-1]="("+m[s-1]+" + 1)",p(m)}u(l,"getG");function d(m){return m[s-2]="("+m[s-2]+" + 1)",p(m)}u(d,"getB");function h(m){return m[s-1]="("+m[s-1]+" + 1)",m[s-2]="("+m[s-2]+" + 1)",p(m)}u(h,"getA");function p(m){const g=e.map((x,S)=>f(S,m)),y=g.join(","),b=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}u(p,"getChannel");function f(m,g){return t.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${g[m]} - 1`:`${g[m]}`}u(f,"getInCoord")}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,a=Pe(o,r.shape);if(i===0)return xs({inputs:{x:r},backend:t});const c=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sge(r.shape,a):new wge(r.shape,a);return t.runWebGLProgram(c,[r],r.dtype)}u(Cge,"reverse$1");const vge={kernelName:ch,backendName:"webgl",kernelFunc:Cge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ige=class{static{u(this,"RotateProgram")}constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kge={kernelName:pg,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,c=new Ige(s.shape,o),[l,d]=qg(i,s.shape[1],s.shape[2]),h=[[l,d,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(c,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ge=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Nge=it({opSnippet:$ge}),Tge={kernelName:ku,backendName:"webgl",kernelFunc:Nge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ege="return inversesqrt(x);",_ge=it({opSnippet:Ege,cpuKernelImpl:Uce}),Rge={kernelName:$u,backendName:"webgl",kernelFunc:_ge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r1=class{static{u(this,"ScatterProgram")}constructor(e,t,s,r,o,i,a=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=bt(o.length),d=bt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const p=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let g="";c&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,b=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${d} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Age{static{u(this,"ScatterPackedProgram")}constructor(e,t,s,r,o,i,a=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=bt(o.length),d=bt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const p=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let g="";c&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,b=t>1?"strides[j]":"strides",x=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${d} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${m};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dge(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Yr(o,r,i),p=[h/l,l];if(h===0)return t.makeTensorInfo(i,r.dtype);const f=ce({inputs:{x:r},backend:t,attrs:{shape:[c,a]}}),m=ce({inputs:{x:o},backend:t,attrs:{shape:[c,l]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;j().getBool("WEBGL_PACK")?y=new Age(c,a,f.shape.length,m.shape.length,d,p):y=new r1(c,a,f.shape.length,m.shape.length,d,p);const b=t.runWebGLProgram(y,[m,f,g],m.dtype),x=ce({inputs:{x:b},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(g),x}u(Dge,"scatterNd$1");const Oge={kernelName:tg,backendName:"webgl",kernelFunc:Dge};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fge=class{static{u(this,"SearchSortedProgram")}constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=j().getNumber("WEBGL_VERSION")===2?o:i,c=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pge(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new Fge(r.shape[0],r.shape[1],o.shape[1],i),c=[[r.shape[1]]];return t.runWebGLProgram(a,[r,o],"int32",c)}u(Pge,"searchSorted$1");const Lge={kernelName:sg,backendName:"webgl",kernelFunc:Pge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mge=class{static{u(this,"SelectProgram")}constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let d=0;d<t.length;d++)l.push(`${a[d]}`),d<e&&c.push(`${a[d]}`);r=c.join(),o=l.join()}const i=bt(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zge(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new Mge(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],wn(r.dtype,o.dtype))}u(zge,"select$1");const Bge={kernelName:uh,backendName:"webgl",kernelFunc:zge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wge=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${kh};
  float scale = ${$h};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Vge=it({opSnippet:Wge}),Uge={kernelName:Nu,backendName:"webgl",kernelFunc:Vge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gge=Ju+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Hge=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,jge=it({opSnippet:Gge,packedOpSnippet:Hge,cpuKernelImpl:Hce}),qge={kernelName:Ru,backendName:"webgl",kernelFunc:jge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kge=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Xge=it({opSnippet:Kge}),Yge={kernelName:_u,backendName:"webgl",kernelFunc:Xge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qge=Ju+`
  return sin(x);
`,Jge=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${_a}
  return result;
`,Zge=it({opSnippet:Qge,packedOpSnippet:Jge}),eye={kernelName:Tu,backendName:"webgl",kernelFunc:Zge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tye=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,nye=it({opSnippet:tye}),sye={kernelName:Eu,backendName:"webgl",kernelFunc:nye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rye=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,oye=it({opSnippet:rye}),iye={kernelName:Au,backendName:"webgl",kernelFunc:oye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aye=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;N(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((b,x)=>b*x),c=[[0,0]];c.push(...i);for(let b=1+o.length;b<r.shape.length;++b)c.push([0,0]);const l=[],d=xO({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),h=va(d.shape,o,a,!1),p=Ia(h.length,o.length,!1),f=ka(d.shape,o,a,!1),m=ce({inputs:{x:d},backend:t,attrs:{shape:h}}),g=Gn({inputs:{x:m},backend:t,attrs:{perm:p}}),y=ce({inputs:{x:g},backend:t,attrs:{shape:f}});return l.push(d),l.push(m),l.push(g),l.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},"spaceToBatchND$1"),cye={kernelName:hh,backendName:"webgl",kernelFunc:aye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uye(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),c=t.readSync(r.dataId),l=t.readSync(o.dataId),d=t.readSync(i.dataId)[0],[h,p,f,m,g]=qce(a,s.shape,s.dtype,c,r.dtype,l,d);return[t.makeTensorInfo(p,s.dtype,h),t.makeTensorInfo([p[0]],r.dtype,f),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}u(uye,"sparseFillEmptyRows");const lye={kernelName:pw,backendName:"webgl",kernelFunc:uye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dye(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),c=Array.from(t.readSync(o.dataId)),[l,d,h]=Kce(a,s.shape,s.dtype,i,c);return[t.makeTensorInfo(d,s.dtype,l),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}u(dye,"sparseReshape");const hye={kernelName:fw,backendName:"webgl",kernelFunc:dye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pye(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),c=t.readSync(o.dataId),[l,d]=GD(i,s.shape,s.dtype,a,c,!0);return t.makeTensorInfo(d,s.dtype,l)}u(pye,"sparseSegmentMean$1");const fye={kernelName:rg,backendName:"webgl",kernelFunc:pye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mye(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),c=t.readSync(o.dataId),[l,d]=GD(i,s.shape,s.dtype,a,c);return t.makeTensorInfo(d,s.dtype,l)}u(mye,"sparseSegmentSum$1");const gye={kernelName:og,backendName:"webgl",kernelFunc:mye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yye(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=Yr(o,r,a),f=!1;if(o.dtype==="string"){const b=t.bufferSync(r),x=t.bufferSync(o),S=yr(t.readSync(i.dataId)[0]),w=Gce(b,x,a,p,d,l,c,h,S,f);return t.makeTensorInfo(a,w.dtype,w.values)}const m=new r1(l,c,r.shape.length,o.shape.length,h,[p,1],f),g=t.runWebGLProgram(m,[o,r,i],o.dtype),y=ce({inputs:{x:g},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(g),y}u(yye,"sparseToDense$1");const bye={kernelName:ig,backendName:"webgl",kernelFunc:yye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Pe(i,r.shape)[0],c=ay(r,o,a),l=r.shape.length,d=new Array(l).fill(0),h=r.shape.slice();return c.map(p=>{const f=[...h];f[a]=p;const m=Zu({inputs:{x:r},backend:t,attrs:{begin:d,size:f}});return d[a]+=p,m})}u(xye,"splitV$1");const wye={kernelName:ph,backendName:"webgl",kernelFunc:xye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI="return sqrt(x);",Sye=it({opSnippet:GI,packedOpSnippet:GI,cpuKernelImpl:Xce}),Cye={kernelName:Du,backendName:"webgl",kernelFunc:Sye};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vye="return x * x;",Iye=it({opSnippet:vye}),kye={kernelName:ag,backendName:"webgl",kernelFunc:Iye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI="return (a - b) * (a - b);",$ye=_n({opSnippet:HI,packedOpSnippet:HI}),Nye={kernelName:Ou,backendName:"webgl",kernelFunc:$ye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),i=wr(o),a=Yce(i,"string",s);return t.makeTensorInfo(r.shape,"string",a)}u(Tye,"staticRegexReplace");const Eye={kernelName:cg,backendName:"webgl",kernelFunc:Tye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ye({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=ar+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Mr(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}u(_ye,"step$1");const Rye={kernelName:zu,backendName:"webgl",kernelFunc:_ye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Aye=class{static{u(this,"StridedSliceProgram")}constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=bt(s.length),i=bt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let c=0;a=s.map((l,d)=>(c++,s.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${c-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=s,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:S,strides:w}=Gg(r.shape,o,i,a,c,l,d,h,p);let C;if(g)C=ce({inputs:{x:r},backend:t,attrs:{shape:m}});else if(y||b){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=Ug(x,S,w),$=Zu({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});C=ce({inputs:{x:$},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo($)}else if(t.shouldExecuteOnCPU([r])){const $=t.readSync(r.dataId),T=Oe(r.shape,r.dtype,$),E=Qce(f,T,w,x);C=t.makeTensorInfo(m,r.dtype,E.values)}else{const $=new Aye(x,w,f);C=t.runWebGLProgram($,[r],r.dtype)}const v=ce({inputs:{x:C},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(C),v}u(Dye,"stridedSlice$1");const Oye={kernelName:ug,backendName:"webgl",kernelFunc:Dye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fye(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:c,preserveShortSequences:l}=s,{data:d,dataSplits:h}=e,p=t.readSync(d.dataId),f=t.readSync(h.dataId),[m,g]=Jce(p,f,r,o,i,a,c,l);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",g)]}u(Fye,"stringNGrams$1");const Pye={kernelName:lg,backendName:"webgl",kernelFunc:Fye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lye(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),c=t.readSync(i.dataId)[0],[l,d,h]=Zce(a,c,r),p=d.length;return[t.makeTensorInfo([p,2],"int32",l),t.makeTensorInfo([p],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(h))]}u(Lye,"stringSplit");const Mye={kernelName:mw,backendName:"webgl",kernelFunc:Lye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zye(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=eue(i,r);return t.makeTensorInfo(o.shape,"int32",a)}u(zye,"stringToHashBucketFast");const Bye={kernelName:gw,backendName:"webgl",kernelFunc:zye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wye="return tan(x);",Vye=it({opSnippet:Wye}),Uye={kernelName:Pu,backendName:"webgl",kernelFunc:Vye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gye=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Hye=it({opSnippet:Gye}),jye={kernelName:Lu,backendName:"webgl",kernelFunc:Hye};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qye(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Yr(i,o,r.shape),p=[h/l,l];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const f=ce({inputs:{x:o},backend:t,attrs:{shape:[c,a]}}),m=ce({inputs:{x:i},backend:t,attrs:{shape:[c,l]}}),g=ce({inputs:{x:r},backend:t,attrs:{shape:p}}),y=new r1(c,a,f.shape.length,m.shape.length,d,p,!1,!0),b=t.runWebGLProgram(y,[m,f,g],g.dtype),x=ce({inputs:{x:b},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),x}u(qye,"tensorScatterUpdate$1");const Kye={kernelName:ng,backendName:"webgl",kernelFunc:qye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xye=class{static{u(this,"TileProgram")}constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=bt(this.rank),o=Yye(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function Yye(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}u(Yye,"getSourceCoords$2");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const c=t.readSync(r.dataId),l=r.dtype==="string"?c.map(p=>yr(p)):c,d=Oe(r.shape,r.dtype,l),h=nue(d,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new Xye(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}u(SO,"tile$1");const Qye={kernelName:Mu,backendName:"webgl",kernelFunc:SO};let Jye=class{static{u(this,"SwapProgram")}constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Zye=class{static{u(this,"MergeProgram")}constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vi(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}u(vi,"disposeIntermediateTensorInfoOrNull$1");function jI(n){let e=1;for(;e<n;)e*=2;return e}u(jI,"roundUpToPow2$1");function ebe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=j().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=j().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,d=l[l.length-1];if(t.shouldExecuteOnCPU([r])||d<a||o>c){const E=t.readSync(r.dataId),[R,O]=sue(E,l,r.dtype,o,i);return[t.makeTensorInfo(R.shape,R.dtype,R.values),t.makeTensorInfo(O.shape,O.dtype,O.values)]}if(o===0)return l[l.length-1]=0,[t.makeTensorInfo(l,r.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(d===1)return[r,Bh({attrs:{shape:l,dtype:"int32",value:0},backend:t})];const h=t.texData.get(r.dataId),p=h!==null&&h.isPacked,f=p?t.unpackTensor(r):r,g=U(l)/d,y=ce({inputs:{x:f},attrs:{shape:[g,d]},backend:t});p&&vi(t,f);const b=jI(o),x=jI(d);let S=null;const w=u(()=>S===null?[y,y]:[y,S],"getInputs"),C=u((E,R,O)=>{const L=w(),z=new Jye(O),A=[[d],[S===null?1:0],[Number.NEGATIVE_INFINITY],[E],[R]],G=S;S=t.runWebGLProgram(z,L,"int32",A),vi(t,G)},"runSwap");for(let E=1;E<b;E*=2){const R=E*2;for(let O=E;O>=1;O/=2)C(R,O,[g,x])}for(let E=x;E>b;E/=2){const R=w(),O=new Zye([g,E/2]),z=[[d],[S===null?1:0],[b]],W=S;S=t.runWebGLProgram(O,R,"int32",z),vi(t,W);const A=b/2,G=A*2;for(let V=A;V>=1;V/=2)C(G,V,S.shape)}let v=S;S=Zu({inputs:{x:S},backend:t,attrs:{begin:0,size:[g,o]}}),vi(t,v);let k=pO({inputs:{x:y,indices:S},backend:t,attrs:{axis:1,batchDims:1}});vi(t,y);const $=l.slice(0,-1);$.push(o),v=S,S=ce({inputs:{x:S},attrs:{shape:$},backend:t}),vi(t,v);const T=k;return k=ce({inputs:{x:k},attrs:{shape:$},backend:t}),vi(t,T),[k,S]}u(ebe,"topK$1");const tbe={kernelName:dg,backendName:"webgl",kernelFunc:ebe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nbe=class{static{u(this,"TransformProgram")}constructor(e,t,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let c;switch(r){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sbe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:c,outputShape:l}=s,[d,h,p,f]=r.shape,[m,g]=l??[h,p],y=[d,m,g,f],b=new nbe(h,p,i,a,c,y);return t.runWebGLProgram(b,[r,o],"float32")}u(sbe,"transform$1");const rbe={kernelName:hg,backendName:"webgl",kernelFunc:sbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function obe(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Lh(o,"unique");const i=s.readSync(o.dataId),{outputValues:a,outputShape:c,indices:l}=rue(i,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}u(obe,"unique");const ibe={kernelName:yw,backendName:"webgl",kernelFunc:obe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,c=r.shape[o],l=new Array(a-1);let d=0;for(let g=0;g<a;g++)g!==o&&(l[d++]=i.shape[g]);const h=[],p=new Array(a).fill(0),f=i.shape.slice();f[o]=1;const m=new Array(c);for(let g=0;g<m.length;g++){p[o]=g;const y=Zu({inputs:{x:i},backend:t,attrs:{begin:p,size:f}}),b=ce({inputs:{x:y},backend:t,attrs:{shape:l}});m[g]=b,h.push(y)}return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}u(abe,"unpack$1");const cbe={kernelName:mh,backendName:"webgl",kernelFunc:abe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ube{static{u(this,"SegmentOpProgram")}constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const c="0.0",l="sumValue",d=Math.floor(s/4)*4,h=s%4,p=`
        sumValue += dot(values, segFilter);
    `;let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let m="";o%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${d};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,c=[];let l=0;const d=xt([l],a);let h=r;d!=null&&(h=Gn({inputs:{x:r},backend:t,attrs:{perm:d}}),c.push(h),l=$t(1,a)[0]);const p=yS(h.shape,l,i),f=U([h.shape[l]]),m=ce({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});c.push(m);const g=mg(r.dtype),y=u((w,C,v,k,$)=>{const T=w.shape[0],E=w.shape[1],R=JE(E,$),O={windowSize:R,inSize:E,batchSize:T,numSegments:$},L=new ube(O,C),z=t.compileAndRun(L,[w,v],k);if(c.push(z),z.shape[1]===$)return z;const W=wO({backend:t,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),A=SO({inputs:{x:W},backend:t,attrs:{reps:[E/R]}});return c.push(W),c.push(A),y(z,C,A,k,$)},"segOpCompute"),b=y(m,"unsortedSegmentSum",o,g,i),x=ce({inputs:{x:b},backend:t,attrs:{shape:p}});let S=x;if(d!=null){c.push(x);const w=Kr(d);S=Gn({inputs:{x:S},backend:t,attrs:{perm:w}})}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),S}u(lbe,"unsortedSegmentSum$1");const dbe={kernelName:gh,backendName:"webgl",kernelFunc:lbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hbe=[Xue,Que,ele,sle,ole,cle,lle,hle,gle,ble,Sle,Ile,Nle,Rle,Ole,Ple,Mle,Vle,Gle,jle,Yle,sde,ode,ude,dde,yde,xde,vde,Aue,$de,Rde,Fde,Wde,Gde,jde,Kde,Yde,ehe,she,ihe,che,lhe,hhe,mhe,yhe,She,vhe,$he,Ehe,Rhe,Fhe,zhe,Uhe,jhe,Xhe,Yhe,Jhe,epe,npe,rpe,ipe,lpe,ppe,gpe,bpe,Spe,Ipe,Tpe,Ape,Rue,Ope,Ede,Lpe,Bpe,Upe,Oue,qpe,Qpe,Zpe,sfe,ife,lfe,pfe,yfe,Sfe,Ife,$fe,_fe,Afe,Ofe,Mfe,Bfe,Vfe,Gfe,jfe,Yfe,eme,rme,hme,Lue,gme,xme,Cme,kme,pde,Tme,_me,Ame,Fme,zme,Pue,Wme,Ume,Hme,qme,Kme,fde,cme,Qme,tge,oge,zue,uge,hge,gge,xge,vge,kge,Tge,Rge,Oge,Lge,Bge,Uge,qge,Yge,eye,sye,tde,lme,iye,cye,lye,hye,fye,gye,bye,wye,Cye,kye,Nye,Eye,Rye,Oye,Pye,Mye,Bye,ume,jue,Uye,jye,Kye,Qye,tbe,rbe,que,ibe,cbe,dbe,Eme];for(const n of hbe)bw(n);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ps=j();Ps.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Ps.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Ps.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Ps.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Ps.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Ps.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Ps.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Ps.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Ps.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Ps.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Ps.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Ps.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Ps.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pbe{static{u(this,"AdapterInfo")}constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fbe{static{u(this,"BufferManager")}constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let o;const i=qI(e,t);return r?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(o=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(o),this.numUsedBuffers++,this.numBytesUsed+=e,o}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,o=qI(s,r),i=this.usedBuffers.get(o),a=i.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");i[a]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(o).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function qI(n,e){return`${n}_${e}`}u(qI,"getBufferKey");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mbe{static{u(this,"TextureManager")}constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const o=XI(s),i=e*t*o,a=KI(e,t,s,r);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const l=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(l),l}this.numBytesAllocated+=i;const c=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(a).push(c),c}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,o=e.usage,i=KI(t,s,r,o);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(i),c=a.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(c,1);const l=XI(r),d=t*s*l;this.numBytesUsed-=d}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function KI(n,e,t,s){return`${n}_${e}_${t}_${s}`}u(KI,"getTextureKey");function XI(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}u(XI,"getBytesPerElement");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gbe(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(i=>`${e}.${s[i]}`),o=new Array(t-1);o[t-2]=r[t-1];for(let i=t-3;i>=0;--i)o[i]=`(${o[i+1]} * ${r[i+1]})`;return o}u(gbe,"symbolicallyComputeStrides");const wi=u((n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`,"atomicAddSnippet");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ac;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(Ac||(Ac={}));const ybe=u((n,e,t,s,r)=>{const o={dtype:s.dtype,shape:s.shape},i=xbe(t,o,e),a=n.createShaderModule({code:i,label:e.constructor.name});let c=j().get("WEBGPU_PRINT_SHADER");if(c!==""){c=c.toLowerCase();const l=c.split(",");(c==="all"||l.some(d=>e.shaderKey.toLowerCase().includes(d)))&&(console.group(e.shaderKey),console.groupEnd())}return r?n.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},"compileProgram"),He=u((n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}},"typeSnippet");function Xt(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}u(Xt,"getCoordsDataType");function fo(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}u(fo,"getCoordsXYZ");function oe(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}u(oe,"getMainHeaderString");function YI(n,e){let t;return t=`
     ${bbe(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}u(YI,"getStartHeaderString");function bbe(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}u(bbe,"getWorkgroupSizeString");function xbe(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${CO(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const m=t.pixelsOpType===Ac.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Ai(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Ai(n[0].dtype,t.outputComponent)}>;`,g=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${g},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${m}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const y=JI(t);return[QI,s.join(`
`),Vp(e.shape),t.getUserCode(),YI(y,t)].join(`
`)}let o,i,a="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((m,g)=>{const y=Xt(n[g].shape.length);a+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${y}, `,o=n[g].shape.length-1,i=Xt(o),a+=`${m.charAt(0).toLowerCase()+m.slice(1)}ShapeStrides: ${i}, `});const c=Xt(e.shape.length);a+=`outShape : ${c}, `,o=e.shape.length-1,i=Xt(o),a+=`
         outShapeStrides: ${i}, `,t.size&&(a+="size : i32, "),t.uniforms&&(a+=t.uniforms),a+="};",a=Tbe(a),s.push(a),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Ai(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((m,g)=>{s.push(`
      @group(0) @binding(${1+g}) var<storage, read> ${m}: array<${t.variableComponents?Ai(n[g].dtype,t.variableComponents[g]):Ai(n[g].dtype,t.outputComponent)}>;
        `)}),a!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const l=kbe(e.shape,t.dispatchLayout),d=[QI,s.join(`
`)+Sbe,Vp(e.shape),l,$be(e.shape.length)];t.atomic||d.push(Nbe(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((m,g)=>{d.push(`${Vp(n[g].shape,m)}`)});const h=n.map((m,g)=>Ibe(m,e.shape,t.variableComponents?t.variableComponents[g]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);d.push(h),d.push(t.getUserCode());const p=JI(t);return d.push(YI(p,t)),d.join(`
`)}u(xbe,"makeShader");function wbe(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],o=[];e.forEach(d=>{r.push(d.shape),o.push(d.dtype)}),r.push(t.shape),o.push(t.dtype);const i=e.map(d=>Zo(d.shape,t.shape)),a=e.map(d=>Ge(d.shape,t.shape)).join("_"),c=i.map(d=>d.join("_")).join(";"),l=CO(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(d=>d.length).join(",")+o.join(",")+n.variableNames.join(",")+c+a+l,s}u(wbe,"makeShaderKey");const QI=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Sbe=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Vp(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const o=we(n),i=Xt(t),a=[];for(let l=0;l<t;l++)a.push(`d${l}`);if(o.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let c;return c="var index2 = index;"+o.map((l,d)=>{const h=`let ${a[d]} = index2 / uniforms.${r}.${fo(d)}`,p=d===o.length-1?`let ${a[d+1]} = index2 - ${a[d]} * uniforms.${r}.${fo(d)}`:`index2 = index2 - ${a[d]} * uniforms.${r}.${fo(d)}`;return`${h}; ${p};`}).join(""),`
    fn ${s}(index : i32) -> ${i} {
      ${c}
      return ${i}(${a.join(",")});
    }
  `}u(Vp,"getCoordsFromIndexSnippet");function Cbe(n,e){const t=n.name,s=n.shape.length,r=Xt(s),o="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=i.map(d=>`${d} : i32`).join(", ");if(s<1)return`
      fn ${o}() -> ${He(e)} {
        return ${He(e)}(${t}[0]);
      }
    `;const c=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let l=`${s}D`;return s===0&&(l="1D"),`
    fn ${o}(${a}) -> ${He(e)} {
      return ${He(e)}(${t}[getIndexFromCoords${l}(${r}(${i.join(",")}),
        ${c})${e===1?"":` / ${e}`}]);
    }
   `}u(Cbe,"getInputAtCoordsSnippet");function vbe(n,e,t,s){const r=n.name,o=r.charAt(0).toUpperCase()+r.slice(1),i="get"+o+"ByOutput",a=n.shape.length,c=e.length,l=Xt(c);if(Ge(n.shape,e)&&s)return`
    fn ${i}Index(globalIndex : i32) -> ${He(t)} {
      return ${He(t)}(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${l}) -> ${He(t)} {
      return ${He(t)}(${r}[${c>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const d=Zo(n.shape,e),h=c-a;let p="";if(a===0)return`
    fn ${i}Index(globalIndex : i32) -> ${He(t)}{
      return get${o}();
    }

    fn ${i}Coords(coords : ${l}) -> ${He(t)}{
      return get${o}();
    }
  `;c<2&&d.length>=1?p="coords = 0;":p=d.map(y=>`coords.${fo(y+h)} = 0;`).join(`
`);let f="";if(c<2&&a>0)f="coords";else if(c>1){const y=Xt(a),b=n.shape.map((x,S)=>`coords.${fo(S+h)}`).join(", ");f=`${y}(${b})`}else f="coords";const m=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,g=`${a}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${He(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${p}
    return ${He(t)}(${r}[getIndexFromCoords${g}(${f}, ${m})${t===1?"":` / ${t}`}]);
  }

  fn ${i}Coords(coordsIn : ${l}) -> ${He(t)} {
    var coords = coordsIn;
    ${p}
    return ${He(t)}(${r}[getIndexFromCoords${g}(${f}, ${m})${t===1?"":` / ${t}`}]);
  }
`}u(vbe,"getInputByOutputSnippet");function Ibe(n,e,t,s){let r=Cbe(n,t);return n.shape.length<=e.length&&(r+=vbe(n,e,t,s)),r}u(Ibe,"getInputSnippet");function kbe(n,e){const{x:t,y:s=[],z:r=[]}=e,o=n.length,i=t.length+s.length+r.length;if(i!==o)return"";if(t.length===o)return`fn getOutputCoords() -> ${Xt(o)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const c=[t,s,r];for(let p=0;p<c.length;p++){const f=c[p];if(f.length!==0)if(f.length===1)a+=`let d${f[0]} = i32(globalId[${p}]);`;else{const m=gbe(f,"uniforms.outShape");a+=`var index${p} = i32(globalId[${p}]);`;for(let g=0;g<m.length;g++)a+=`let d${f[g]} = index${p} / ${m[g]};`,g===m.length-1?a+=`let d${f[g+1]} = index${p} - d${f[g]} * ${m[g]};`:a+=`index${p} = index${p} - d${f[g]} * ${m[g]};`}}const l=[];for(let p=0;p<i;p++)l.push(`d${p}`);const d=Xt(i);let h=`fn getOutputCoords() -> ${d} {
  ${a}
`;return l.length===0?h+=`return ${d}(0); }`:h+=`return ${d}(${l.join(",")}); }`,h}u(kbe,"getOutputCoordsSnippet");function $be(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:N(!1,()=>`Unsupported ${n}D shape`);break}return e}u($be,"getOutputIndexFromCoordsSnippet");function CO(n){return n.dispatch[1]===1&&n.dispatch[2]===1}u(CO,"isFlatDispatch");function Ai(n,e=1){if(n==="float32")return He(e,"f32");if(n==="int32"||n==="bool")return He(e,"i32");throw new Error(`type ${n} is not supported.`)}u(Ai,"dataTypeToGPUType");function Nbe(n,e,t){const s=n.length,r=Ai(e,t);let o=`fn setOutputAtIndex(flatIndex : i32, value : ${He(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${He(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=Xt(s);o+=`
      fn setOutputAtCoords(${i.map(c=>`${c} : i32`).join(", ")}, value : ${He(t)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(c=>`${c} : i32`).join(", ")}, value : ${He(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return o}u(Nbe,"setOutputSnippet");function Tbe(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,o)=>`vec${r}, @align(16) ${o}`),n}u(Tbe,"insertAlignment");function JI(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}u(JI,"isFlatDispatchLayout");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=u(n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e},"arrayProduct");function ie(n,e,t=[1,1,1],s=[1,1,1]){const[r,o,i]=[Math.ceil(ji(n.x.map(a=>e[a]))/(t[0]*s[0])),n.y?Math.ceil(ji(n.y.map(a=>e[a]))/(t[1]*s[1])):1,n.z?Math.ceil(ji(n.z.map(a=>e[a]))/(t[2]*s[2])):1];return[r,o,i]}u(ie,"computeDispatch");function Ebe(n,e,t,s=!1){const r=[8,8,1],o=[4,4,1];return s||(n<=8&&(o[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:o}}u(Ebe,"computeWorkgroupInfoForMatMul");function vO(n,e,t=!1){if(t)return[8,8,1];const s=ji(n.x.map(o=>e[o])),r=ji(n.y.map(o=>e[o]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}u(vO,"computeWorkgroupSizeForConv2d");function IO(n,e,t=!1){if(t)return[4,4,1];const s=ji(n.x.map(o=>e[o])),r=ji(n.y.map(o=>e[o]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}u(IO,"computeWorkPerThreadForConv2d");function pe(n){return{x:n.map((e,t)=>t)}}u(pe,"flatDispatchLayout");function ZI(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}u(ZI,"GPUBytesPerElement");function o1(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}u(o1,"isWebGPUSupported");function kO(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&N(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}u(kO,"assertNotComplex");var _r;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(_r||(_r={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _be=j().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Rbe=u((n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(i=>i<=t))return r;N(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(r[0]));return o>t?(o=Math.ceil(Math.cbrt(r[0])),N(o<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]},"reshapeDispatch");class Wh extends gm{static{u(this,"WebGPUBackend")}nextDataId(){return Wh.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!o1())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new pbe(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new fbe(this.device),this.textureManager=new mbe(this.device),this.tensorMap=new sw(this,ks()),j().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,o){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:o})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(j().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),j().getBool("WEBGPU_USE_PROFILE_TOOL")&&(N(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const g=this.readSync(r.real.dataId),y=this.readSync(r.imag.dataId),b=Lp(xr(g,y).buffer,"float32");return this.convertAndCacheOnCPU(e,b),b}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0);const o=["opaque","premultiplied"],i=t.resource,a=i.size;N(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const c=a/4,l=new ArrayBuffer(a),d=256,h=256,p=o.map(g=>new OffscreenCanvas(d,h)),f=new OffscreenCanvas(d,h);this.endComputePassEncoder(),p.map((g,y)=>{const b=g.getContext("webgpu");return b.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:o[y]}),b.getCurrentTexture()}).map((g,y)=>{const b=d*4,x=u(($,T,E)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:b,offset:E},{texture:g},{width:$,height:T}),this.submitQueue();const R=f.getContext("2d",{willReadFrequently:!0});R.clearRect(0,0,$,T),R.drawImage(p[y],0,0);const O=R.getImageData(0,0,$,T).data,L=o[y],z=new Uint8ClampedArray(l,E,$*T*4);for(let W=0;W<z.length;W+=4)if(L==="premultiplied")z[W+3]=O[W+3];else{const A=O[W];z[W]=O[W+2],z[W+1]=O[W+1],z[W+2]=A}},"readDataGPUToCPU"),S=Math.floor(c/(d*h));let w=d,C=h,v=0;for(let $=0;$<S;$++)x(w,C,v),v+=d*h*4;const k=c%(d*h);C=Math.floor(k/d),C>0&&(x(w,C,v),v+=C*(d*4)),w=k%d,w>0&&x(w,1,v)});const m=Lp(l,t.dtype);return this.convertAndCacheOnCPU(e,m),m}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const o=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=o[0],a=o[1];r=xr(i,a)}else{const o=await this.getBufferData(t.resource);r=Lp(o,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const o={id:this.nextDataId()};this.tensorMap.set(o,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(o),a=ZI(i.dtype)*U(i.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),i.resource=r,ks().makeTensorFromDataId(o,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:o,resource:i}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=i,c=a.size,l=a.usage,d=this.bufferManager.acquireBuffer(c,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,d,0,c),this.submitQueue();const h=this.makeTensorInfo(o,r),p=ks().makeTensorFromTensorInfo(h),f=this.tensorMap.get(h.dataId);return f.resource=d,{tensorRef:p,buffer:d}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>yr(r));return Oe(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=wo(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=wo(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},c=await Promise.all(o);return a.kernelMs=mN(c),a.getExtraProfileInfo=()=>c.map((l,d)=>({name:i[d],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&Uc(s[0])&&(s=s.map(o=>lo(o))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=ZI(t.dtype)*U(t.shape);let r;const o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,o,!0),r.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=i.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,r,0,s),this.stagingPendingDisposal.push(i)}else{const i=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(i).set(t.values):new Float32Array(i).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,o);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let o=1;e.forEach(c=>{c.data.length===0&&(c.data=[1]);let l;switch(c.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:N(!1,()=>`Unsupported ${c.data.length}D shape`)}(s===5||s===6)&&(l=16),l>o&&(o=l),t=Math.ceil(t/l)*l,s=c.data.length,r.push(t),t+=c.data.length*4}),t=Math.ceil(t/o)*o;const i=new ArrayBuffer(t);e.forEach((c,l)=>{const d=r[l];c.type==="int32"?new Int32Array(i,d,c.data.length).set(c.data):c.type==="uint32"?new Uint32Array(i,d,c.data.length).set(c.data):new Float32Array(i,d,c.data.length).set(c.data)});const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,i,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,s,r,o){if(o||(o=this.makeTensorInfo(e.outputShape,s)),U(o.shape)===0)return this.tensorMap.get(o.dataId).values=ln(o.dtype,0),o;this.uploadToGPU(o.dataId),e.dispatch=Rbe(this.device,e);const i=t.map((c,l)=>{if(c.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(c.dataId),{dtype:this.tensorMap.get(c.dataId).dtype,shape:c.shape,name:e.variableNames[l]}});e.shaderKey=wbe(e,i,o);const a=j().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=ybe(this.device,e,i,o,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,o,t,r),o}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let o=[],i=[];const a="int32";if(e.pixelsOpType==null){o.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=s.concat(t).map(f=>f.shape);const p="int32";i.map(f=>{o.push({type:p,data:f});const m=we(f);o.push({type:p,data:m})})}else{const p=we(t.shape);o.push({type:a,data:p})}if(e.size){const p=U(e.outputShape);o.push({type:a,data:[e.outputComponent?p/e.outputComponent:p]})}r&&(o=[...o,...r]);const c=[this.tensorToBinding(t),...s.map(p=>this.tensorToBinding(p)),this.makeUniforms(o)];s.forEach(p=>{this.commandQueueOwnedIds.add(p.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:c.map((p,f)=>({binding:f,resource:p}))}),d=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};d&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(d||j().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Ac.DRAW)&&(this.endComputePassEncoder(),d?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=_be){return j().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&U(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Wh.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */o1()&&ww("webgpu",async()=>{const n={powerPreference:j().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const o=await e.requestDevice(t),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Wh(o,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ee;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(Ee||(Ee={}));const Abe="let resultTemp = a + b;",Dbe="let resultTemp = atan2(a, b);",Obe="let resultTemp = areal * breal - aimag * bimag;",Fbe="let resultTemp = areal * bimag + aimag * breal;",Pbe="let resultTemp = a / b;",Lbe="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",Mbe=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,zbe=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,Bbe=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,Wbe=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,Vbe=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,Ube=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,Gbe="return f32(a >= 1.0 && b >= 1.0);",Hbe=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,jbe="return f32(a >= 1.0 || b >= 1.0);",qbe=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,Kbe="let resultTemp = max(a, b);",Xbe="let resultTemp = min(a, b);",Ybe=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,Qbe=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,Jbe="let resultTemp = a * b;",Zbe=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,exe=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,txe=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,nxe=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,sxe="if (a < 0.0) { return b * a; }  return a;",rxe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,oxe="let resultTemp = (a - b) * (a - b);",ixe="let resultTemp = a - b;";function i1(n,e){let t;do{switch(n){case Ee.ATAN2:t=Dbe;break;case Ee.MAX:t=Kbe;break;case Ee.MIN:t=Xbe;break;case Ee.MOD:t=e?Qbe:Ybe;break;case Ee.NOT_EQUAL:t=e?exe:Zbe;break;case Ee.POW:t=e?nxe:txe;break;default:continue}let s,r,o;return e?(s="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(s="isnan",r="f32",o="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${o}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case Ee.ADD:t=Abe;break;case Ee.COMPLEX_MULTIPLY_IMAG:t=Fbe;break;case Ee.COMPLEX_MULTIPLY_REAL:t=Obe;break;case Ee.DIV:t=Pbe;break;case Ee.ELU_DER:t=Lbe;break;case Ee.EQUAL:t=Mbe;break;case Ee.FLOOR_DIV:t=zbe;break;case Ee.GREATER:t=Bbe;break;case Ee.GREATER_EQUAL:t=Wbe;break;case Ee.LESS:t=Vbe;break;case Ee.LESS_EQUAL:t=Ube;break;case Ee.LOGICAL_AND:return e?Hbe:Gbe;case Ee.LOGICAL_OR:return e?qbe:jbe;case Ee.MUL:t=Jbe;break;case Ee.PRELU:return e?rxe:sxe;case Ee.SQUARED_DIFFERENCE:t=oxe;break;case Ee.SUB:t=ixe;break}return`
    ${t}
    return resultTemp;
  `}u(i1,"getBinaryOpString");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var re;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(re||(re={}));const axe="return abs(a);",cxe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,uxe=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,lxe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,dxe="return asinh(a);",hxe=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,pxe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,fxe="return ceil(a);",mxe="return cos(a);",gxe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,yxe="return exp(a) - 1.0;",bxe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",xxe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,wxe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${Yg};
  let a1 = ${Qg};
  let a2 = ${Jg};
  let a3 = ${Zg};
  let a4 = ${ey};
  let a5 = ${ty};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Sxe="return exp(a);",Cxe="return floor(a);",vxe="return f32(!isnan(a) && !isinf(a));",Ixe="return f32(isinf(a));",kxe="return f32(isnan(a));",$xe="return a;",Nxe=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,Txe=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,Exe="return f32(!(a >= 1.0));",_xe="return -a;",Rxe="if (a < 0.0) { return uniforms.alpha * a; } return a;",Axe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Dxe="return 1.0 / a;",Oxe="return select(a, 0.0, a < 0.0);",Fxe="return clamp(a, 0.0, 6.0);",Pxe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Lxe=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Mxe="return round(a);",zxe="return inverseSqrt(a);",Bxe=`
  if (a >= 0.0) {
    return ${$h} * a;
  } else {
    return ${kh} * (exp(a) - 1.0);
  }
`,Wxe="return 1.0 / (1.0 + exp(-1.0 * a));",Vxe="return sign(a);",Uxe="return sin(a);",Gxe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Hxe=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,jxe="return sqrt(a);",qxe="return a * a;",Kxe=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Xxe="return tan(a);",Yxe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Qxe="return f32(i32((a)));";function $i(n,e){switch(n){case re.ABS:return axe;case re.ACOS:return cxe;case re.ACOSH:return uxe;case re.ASIN:return lxe;case re.ASINH:return dxe;case re.ATAN:return hxe;case re.ATANH:return pxe;case re.COS:return mxe;case re.COSH:return gxe;case re.CEIL:return fxe;case re.ELU:return e?xxe:bxe;case re.ERF:return wxe;case re.EXP:return Sxe;case re.EXPM1:return yxe;case re.FLOOR:return Cxe;case re.IS_FINITE:return vxe;case re.IS_INF:return Ixe;case re.IS_NAN:return kxe;case re.LINEAR:return $xe;case re.LOG:return Nxe;case re.LOG1P:return Txe;case re.LOGICAL_NOT:return Exe;case re.NEG:return _xe;case re.LEAKYRELU:return e?Axe:Rxe;case re.RECIPROCAL:return Dxe;case re.RELU:return e?Lxe:Oxe;case re.RELU6:return e?Pxe:Fxe;case re.ROUND:return Mxe;case re.RSQRT:return zxe;case re.SELU:return Bxe;case re.SIGMOID:return Wxe;case re.SIGN:return Vxe;case re.SIN:return Uxe;case re.SINH:return Gxe;case re.SOFTPLUS:return Hxe;case re.SQRT:return jxe;case re.SQUARE:return qxe;case re.STEP:return Kxe;case re.TAN:return Xxe;case re.TANH:return Yxe;case re.TO_INT:return Qxe;default:throw new Error(`BinaryType ${n} is not implemented!`)}}u($i,"getUnaryOpString");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=$i(re.LINEAR);else if(n==="relu")r=$i(re.RELU,t);else if(n==="elu")r=$i(re.ELU,t);else if(n==="relu6")r=$i(re.RELU6,t);else if(n==="prelu")r=i1(Ee.PRELU,t);else if(n==="sigmoid")r=$i(re.SIGMOID,t);else if(n==="leakyrelu")r=$i(re.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const i=He(t?4:1);let a="";return e?a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${r}
      }`,a}u(No,"activationFnSnippet");function Aa(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}u(Aa,"biasActivationSnippet");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n,e,t=!1,s=!1,r=!1,o=1){N(n&&o===1||!n,()=>`transposeA ${n} is not compatible with component size ${o}`);const i=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${He(o)} {
    var value = ${He(o)}(0.0);
    ${t&&r?i:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${He(o)} {
    var value = ${He(o)}(0.0);
    ${a}
    return value;
  }
  `}u($O,"matMulReadFnSource");function a1(n,e,t,s,r=!1,o=!1,i=!1,a=1){return`
  ${$O(t,s,r,o,i,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${He(a)}) {
    ${r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Aa(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}u(a1,"matMulReadWriteFnSource");const Jxe=u((n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,"writeDataToSubAVec4Snippet"),Zxe=u((n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",o="";for(let i=0;i<e;i++)r+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,o+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${o}
        }
      }`}},"calculateResultSnippet");function $y(n,e,t=!1,s=32,r=!1,o=32,i=!1){const a=e[1]*n[1],c=e[0]*n[0],l=t?a:s,d=t?s:a,h=l/e[0],p=s/e[1],f=n[1],m=n[0];return N((t&&h===4&&n[1]===4||!t&&(h===3||h===4))&&l%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${h} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${l} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${l/h}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${c/n[0]}>, ${s}>;

  ${oe()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${f};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${f};
    let globalCol = i32(globalId.x) * ${m};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

    var acc: array<vec4<f32>, ${f}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${p};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${f}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Jxe(t,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Zxe(t,h,f,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}u($y,"makeMatMulPackedVec4Source");const ek=u(n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,"writeDataToSubASnippet"),e0e=u(n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];","readDataFromSubASnippet");function Ny(n,e,t=!1,s=32,r=!1,o=32,i=!1,a=!1){const c=n[1]*e[1],l=n[0]*e[0],d=t?c:s,h=t?s:c;N(h%e[1]===0&&d%e[0]===0&&s%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const p=h/e[1],f=d/e[0],m=s/e[1],g=n[1],y=n[0],b=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${c};
      let globalColStart = i32(workgroupId.x) * ${l};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
            ${ek(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${y}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${y}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${y}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${g};
  let tileCol = i32(localId.x) * ${y};

  let globalRow = i32(globalId.y) * ${g};
  let globalCol = i32(globalId.x) * ${y};
  let globalRowStart = i32(workgroupId.y) * ${c};

  let tileRowA = i32(localId.y) * ${p};
  let tileColA = i32(localId.x) * ${f};
  let tileRowB = i32(localId.y) * ${m};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
      for (var innerCol = 0; innerCol < ${f}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${ek(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
      for (var innerCol = 0; innerCol < ${y}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${y}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${y}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        ${e0e(t)}
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${g}; innerRow++) {
    for (var innerCol = 0; innerCol < ${y}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${d}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${s}>;

    ${oe()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

      var acc : array<array<f32, ${y}>, ${g}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${b}
    }
  `}u(Ny,"makeMatMulPackedSource");const t0e=u(n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `,"readVectorASnippet");function n0e(n,e=!1){N(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${oe()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${t0e(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}u(n0e,"makeVectorMatrixProductSource");class s0e{static{u(this,"MatMulPackedProgram")}constructor(e,t,s=!1,r=!1,o=null,i=null,a=null,c=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const l=s?e[1]:e[2];if(this.isVec4=(l%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const p=Ebe(t[1],l,t[2],s);this.workgroupSize=p.workgroupSize,this.elementsPerThread=p.elementsPerThread}this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const d=o!=null,h=a!=null;d&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=c,this.transposeA=s,this.transposeB=r,this.addBias=d,this.activation=i,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],o=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=o;const i=e%r===0,a=t%o===0,c=s%this.tileInner===0;return[i,a,c]}getUserCode(){return`
      ${No(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${a1(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?$y(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?n0e(this.workgroupSize,this.transposeA):Ny(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0e(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${oe()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}u(r0e,"makeMatMulReduceSource");class o0e{static{u(this,"MatMulReduceProgram")}constructor(e,t=!1,s=!1,r=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=r!=null,c=i!=null;a&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=a,this.activation=o,this.hasPreluActivationWeights=c,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${No(this.activation,this.hasPreluActivationWeights)}
      ${a1(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${r0e(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0e(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${oe()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}u(i0e,"makeMatMulSmallOutputSizeSource");class a0e{static{u(this,"MatMulSmallOutputSizeProgram")}constructor(e,t,s,r=!1,o=!1,i=null,a=null,c=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const l=i!=null;l&&this.variableNames.push("bias");const d=c!=null;d&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=o,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=d,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${o}`}getUserCode(){return`
      ${No(this.activation,this.hasPreluActivationWeights)}
      ${a1(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${i0e(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c0e{static{u(this,"MatMulSplitKProgram")}constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,N(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const o=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=o?4:1,o||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ie(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${$O(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${He(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${wi("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?$y(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Ny(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class u0e{static{u(this,"BiasActivationProgram")}constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${No(this.activation,this.hasPreluActivationWeights)}
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Aa(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l0e{static{u(this,"FillProgram")}constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||ga(r),o==="string"){const i=Ht(o,U(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new l0e(s),a=[{type:"float32",data:[r]}];return e.runWebGPUProgram(i,[],o,a)}}u(ns,"fill");const d0e={kernelName:Mm,backendName:"webgpu",kernelFunc:ns};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,o=U(s.shape),i=ow(r,o),a=U(i);return N(o===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}u(ge,"reshape");const h0e={kernelName:oh,backendName:"webgpu",kernelFunc:ge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ty({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:c=null}){const l=n.shape.length,d=e.shape.length,h=t?n.shape[l-2]:n.shape[l-1],p=s?e.shape[d-1]:e.shape[d-2],f=t?n.shape[l-1]:n.shape[l-2],m=s?e.shape[d-2]:e.shape[d-1],g=n.shape.slice(0,-2),y=e.shape.slice(0,-2),b=U(g),x=U(y),w=Ne(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);N(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const C=t?[b,h,f]:[b,f,h],v=s?[x,m,p]:[x,p,m],k=ge({inputs:{x:n},backend:r,attrs:{shape:C}}),$=ge({inputs:{x:e},backend:r,attrs:{shape:v}}),T=[k,$],E=Math.max(b,x),R=[k,$],O=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[h]}];let L,z;const W=[E,f,m];let A=j().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(A<0){const V=j().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),q=V>0?V:r.thresholdToIncreaseWorkgroups,Y=E*Math.ceil(f/32)*Math.ceil(m/32);Y<=q||f<=8&&Y<=q*2?E*f*m<=128?A=_r.MatMulReduceProgram:E===1&&p>=2e3?A=_r.MatMulSplitKProgram:A=_r.MatMulSmallOutputSizeProgram:A=_r.MatMulPackedProgram}switch(A){case _r.MatMulReduceProgram:L=new o0e(W,t,s,o,c,i);break;case _r.MatMulSplitKProgram:{if(z=ns({backend:r,attrs:{shape:W,value:0,dtype:n.dtype}}),L=new c0e(W,p,t,s),o||c){z=r.runWebGPUProgram(L,R,n.dtype,O,z);const q=new u0e(z.shape,o,c,i);let Y=null;const Q=[z];o&&Q.push(o),i&&Q.push(i),c==="leakyrelu"&&(Y=[{type:"float32",data:[a]}],q.uniforms+=" alpha : f32,");const ne=r.runWebGPUProgram(q,Q,z.dtype,Y);T.push(z);const X=ge({inputs:{x:ne},backend:r,attrs:{shape:w}});T.push(ne);for(const Z of T)r.disposeData(Z.dataId);return X}break}case _r.MatMulSmallOutputSizeProgram:L=new a0e(C,v,W,t,s,o,c,i);break;case _r.MatMulPackedProgram:const V=r.adapterInfo.isIntel();L=new s0e(C,W,t,s,o,c,i,V);break;default:throw new Error(`Unsupported MatMulProgramType ${A}.`)}o&&R.push(o),i&&R.push(i),c==="leakyrelu"&&(O.push({type:"float32",data:[a]}),L.uniforms+=" alpha : f32,"),z=r.runWebGPUProgram(L,R,n.dtype,O,z);const G=ge({inputs:{x:z},backend:r,attrs:{shape:w}});T.push(z);for(const V of T)r.disposeData(V.dataId);return G}u(Ty,"batchMatMulImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p0e(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:c,transposeB:l,activation:d,leakyreluAlpha:h}=s;return Ty({a:r,b:o,transposeA:c,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:d})}u(p0e,"_fusedMatMul");const f0e={kernelName:Ll,backendName:"webgpu",kernelFunc:p0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tk{static{u(this,"BinaryOpComplexProgram")}constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Ne(t,s),this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${i1(this.op,!1)}
      }

      ${oe("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hf{static{u(this,"BinaryOpProgram")}constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Ne(t,s),this.dispatchLayout=pe(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,o=s.length>0&&s[s.length-1]%4===0;r&&o?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(ov(s)||s[s.length-1]===1)||o&&(ov(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${i1(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",o=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${oe("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${o}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${oe("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}u(ws,"identity");const m0e={kernelName:du,backendName:"webgpu",kernelFunc:ws};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Da(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.tensorMap.get(o.dataId),a=ws({inputs:{x:s},backend:t}),c=ws({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:c},o}u(Da,"complex");const g0e={kernelName:Im,backendName:"webgpu",kernelFunc:Da};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class el{static{u(this,"UnaryOpProgram")}constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${$i(this.op,!1)}
      }
      ${oe("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:o}=s,i=r,a=t||o.dtype;if(i.shouldExecuteOnCPU([o])&&e!=null){const l=i.tensorMap.get(o.dataId),d=e(l.values,a);return i.makeTensorInfo(o.shape,a,d)}const c=new el(o.shape,n);return i.runWebGPUProgram(c,[o],a)}}u(at,"unaryKernelFunc");function Sn({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:o})=>{const{a:i,b:a}=r,c=o;if(t&&i.dtype==="complex64"){const h=c.tensorMap.get(i.dataId),p=c.tensorMap.get(a.dataId);let f,m;if(n!==Ee.MUL)[f,m]=[[h.complexTensorInfos.real,p.complexTensorInfos.real],[h.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(y=>{const[b,x]=y,S={dataId:b.dataId,dtype:b.dtype,shape:i.shape},w={dataId:x.dataId,dtype:x.dtype,shape:a.shape},C=new Hf(n,i.shape,a.shape);return c.runWebGPUProgram(C,[S,w],wn(b.dtype,x.dtype))});else{const y=new tk(Ee.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),b=new tk(Ee.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),x=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:a.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:a.shape}];f=c.runWebGPUProgram(y,x,"float32"),m=c.runWebGPUProgram(b,x,"float32")}const g=Da({inputs:{real:f,imag:m},backend:c});return c.disposeData(f.dataId),c.disposeData(m.dataId),g}const l=s||wn(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||c.shouldExecuteOnCPU([i,a]))&&e!=null){const h=c.tensorMap.get(i.dataId).values,p=c.tensorMap.get(a.dataId).values,f=i.dtype==="string"?wr(h):h,m=i.dtype==="string"?wr(p):p,[g,y]=e(i.shape,a.shape,f,m,l);return c.makeTensorInfo(y,l,g)}const d=new Hf(n,i.shape,a.shape);return c.runWebGPUProgram(d,[i,a],l)}}u(Sn,"binaryKernelFunc");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:y0e,castImpl:b0e,ceilImpl:x0e,concatImpl:w0e,equalImpl:S0e,expImpl:C0e,expm1Impl:v0e,floorImpl:I0e,floorDivImpl:k0e,gatherNdImpl:$0e,gatherV2Impl:N0e,greaterEqualImpl:T0e,greaterImpl:E0e,lessEqualImpl:_0e,lessImpl:R0e,logImpl:A0e,maxImpl:D0e,maximumImpl:O0e,minimumImpl:F0e,multiplyImpl:P0e,negImpl:L0e,notEqualImpl:M0e,prodImpl:z0e,rangeImpl:B0e,rsqrtImpl:W0e,scatterImpl:V0e,simpleAbsImpl:U0e,sliceImpl:G0e,stridedSliceImpl:H0e,stringNGramsImpl:j0e,subImpl:q0e,tileImpl:K0e,topKImpl:X0e,transposeImpl:Y0e,uniqueImpl:R2e}=fD;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q0e=at({opType:re.ABS,cpuKernelImpl:U0e}),J0e={kernelName:yd,backendName:"webgpu",kernelFunc:Q0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z0e=at({opType:re.ACOS}),ewe={kernelName:Hc,backendName:"webgpu",kernelFunc:Z0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const twe=at({opType:re.ACOSH}),nwe={kernelName:jc,backendName:"webgpu",kernelFunc:twe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const swe=Sn({opType:Ee.ADD,cpuKernelImpl:y0e,supportsComplex:!0}),rwe={kernelName:ya,backendName:"webgpu",kernelFunc:swe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class owe{static{u(this,"AddNPackedProgram")}constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${oe("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iwe(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return ws({inputs:{x:s[0]},backend:t});const r=s.map(a=>a.dtype).reduce((a,c)=>wn(a,c)),o=s.map(a=>a.shape),i=new owe(o);return t.runWebGPUProgram(i,s,r)}u(iwe,"addN");const awe={kernelName:bd,backendName:"webgpu",kernelFunc:iwe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cwe{static{u(this,"TransposeSharedProgram")}constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){N(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${oe()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uwe{static{u(this,"TransposeProgram")}constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=Xt(this.outputShape.length),t=NO(this.newDim);return`
      ${oe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}}function NO(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${fo(s)}`;return t.join()}u(NO,"getSwitchedCoords");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,c=new Array(a);for(let d=0;d<c.length;d++)c[d]=r.shape[o[d]];if(t.shouldExecuteOnCPU([r])){const h=i.tensorMap.get(r.dataId).values,p=Y0e(h,r.shape,r.dtype,o,c);return t.makeTensorInfo(c,r.dtype,p)}if(r.shape.length===2&&Ge(o,[1,0])){const d=new cwe(r.shape,o);return i.runWebGPUProgram(d,[r],r.dtype)}const l=new uwe(r.shape,o);return i.runWebGPUProgram(l,[r],r.dtype)}u(jr,"transpose");const lwe={kernelName:Ui,backendName:"webgpu",kernelFunc:jr};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dwe{static{u(this,"ReduceProgram")}constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=Yt(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${oe("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hwe={mean:"float32",all:"bool",any:"bool"};function Oa(n,e,t,s,r){const o=n.shape.length,i=[],a=Pe(e,n.shape);let c=a;const l=xt(c,o);let d=n;l!=null&&(d=jr({inputs:{x:n},attrs:{perm:l},backend:r}),c=$t(c.length,o),i.push(d)),tn(s,c,o);const[h,p]=Yt(d.shape,c);let f=h;t&&(f=qt(h,a));let m;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([d])){const g=r.tensorMap.get(d.dataId).values;switch(s){case"max":const y=D0e(g,U(p),f,n.dtype);m=r.makeTensorInfo(f,n.dtype,y);break;case"prod":const{outVals:b,outShape:x,outDtype:S}=z0e(d.shape,d.dtype,g,c);m=r.makeTensorInfo(x,S,b);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const g=U(p),b=U(d.shape)/g,x={windowSize:g,inSize:g,batchSize:b,outSize:1},S=hwe[s]||mg(n.dtype),w=[{type:"int32",data:[g]}],C=new dwe(x,s,r.device.limits.maxComputeWorkgroupSizeX),v=r.runWebGPUProgram(C,[d],S,w);i.push(v),m=ge({inputs:{x:v},attrs:{shape:f},backend:r})}return i.forEach(g=>r.disposeData(g.dataId)),m}u(Oa,"reduce");/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Oa(r,i,o,"all",t)}u(pwe,"all");const fwe={kernelName:ym,backendName:"webgpu",kernelFunc:pwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Oa(r,i,o,"any",t)}u(mwe,"any");const gwe={kernelName:bm,backendName:"webgpu",kernelFunc:mwe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TO{static{u(this,"ArgMinMaxProgram")}constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[o,i]=Yt(e,r);this.outputShape=o.length===0?[1]:o,this.dispatchLayout=pe(this.outputShape),U(i)<32?(this.type="plain",this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=ie(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=u(()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${fo(this.inputShape.length-1)}`,"getInputShapeLastDim"),s=u(()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)r+=`outputCoords.${fo(o)},`;return r},"splitOutputCoords");return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${oe("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${oe("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ywe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Pe(o,r.shape);const a=xt(i,r.shape.length);let c=r;const l=[];a!=null&&(c=jr({inputs:{x:r},backend:t,attrs:{perm:a}}),l.push(c),i=$t(i.length,c.shape.length)),tn("argMax",[i[0]],c.shape.length);const d=new TO(c.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=t.runWebGPUProgram(d,[c],"int32",h);return l.forEach(f=>t.disposeData(f.dataId)),p}u(ywe,"argMax");const bwe={kernelName:xd,backendName:"webgpu",kernelFunc:ywe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Pe(o,r.shape);const a=xt(i,r.shape.length);let c=r;const l=[];a!=null&&(c=jr({inputs:{x:r},backend:t,attrs:{perm:a}}),l.push(c),i=$t(i.length,c.shape.length)),tn("argMin",[i[0]],c.shape.length);const d=new TO(c.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=t.runWebGPUProgram(d,[c],"int32",h);return l.forEach(f=>t.disposeData(f.dataId)),p}u(xwe,"argMin");const wwe={kernelName:wd,backendName:"webgpu",kernelFunc:xwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Swe=at({opType:re.ASIN}),Cwe={kernelName:qc,backendName:"webgpu",kernelFunc:Swe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vwe=at({opType:re.ASINH}),Iwe={kernelName:Kc,backendName:"webgpu",kernelFunc:vwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kwe=at({opType:re.ATAN}),$we={kernelName:Xc,backendName:"webgpu",kernelFunc:kwe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nwe=Sn({opType:Ee.ATAN2}),Twe={kernelName:Qc,backendName:"webgpu",kernelFunc:Nwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ewe=at({opType:re.ATANH}),_we={kernelName:Yc,backendName:"webgpu",kernelFunc:Ewe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rwe{static{u(this,"PoolWithFilterSizeEqualsOneProgram")}constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class td{static{u(this,"Pool2DProgram")}constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool2D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}class c1{static{u(this,"Pool3DProgram")}constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool3D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s;return Oa(r,o,i,"max",t)}u(EO,"max");const Awe={kernelName:Hd,backendName:"webgpu",kernelFunc:EO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Oa(r,i,o,"mean",t)}u(_O,"mean");const Dwe={kernelName:Kd,backendName:"webgpu",kernelFunc:_O};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&Ge(e.inShape,e.outShape))return ws({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=n.shape.length,a=ge({inputs:{x:n},backend:s,attrs:{shape:[n.shape[i-3]*n.shape[i-2],n.shape[i-1]]}});let c;t==="avg"?c=_O({inputs:{x:a},backend:s,attrs:{axis:0,keepDims:!1}}):(N(t==="max",()=>`Invalid pool type ${t}`),c=EO({inputs:{x:a},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const l=ge({inputs:{x:c},backend:s,attrs:{shape:e.outShape}});return s.disposeData(a.dataId),s.disposeData(c.dataId),l}let r;const o=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new Rwe(e):(t==="avg"?r=new td(e,"avg"):(N(t==="max",()=>`Invalid pool type ${t}`),r=new td(e,"max")),o.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,o)}u(RO,"poolImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Owe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=s,d=Fn(r.shape,o,i,1,a,c);return RO(r,d,"avg",t)}u(Owe,"avgPool");const Fwe={kernelName:Sd,backendName:"webgpu",kernelFunc:Owe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:c,dimRoundingMode:l}=s,d=[1,1,1],h=Os(r.shape,o,i,d,a,l,c),p=new c1(h,"avg"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(p,[r],r.dtype,f)}u(Pwe,"avgPool3D");const Lwe={kernelName:Cd,backendName:"webgpu",kernelFunc:Pwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mwe{static{u(this,"AvgPool2DBackpropProgram")}constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class zwe{static{u(this,"AvgPool3DBackpropProgram")}constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bwe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:c,pad:l,dimRoundingMode:d}=s,h=Os(i.shape,a,c,1,l,d),p=new zwe(h),f=1/(h.filterDepth*h.filterHeight*h.filterWidth),m=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[f]}];return t.runWebGPUProgram(p,[r],i.dtype,m)}u(Bwe,"avgPool3DGrad");const Wwe={kernelName:wm,backendName:"webgpu",kernelFunc:Bwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vwe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;kO([r,o],"avgPoolGrad");const{filterSize:a,strides:c,pad:l}=s,d=Fn(i.shape,a,c,1,l),h=new Mwe(d),p=1/(d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[p]}];return t.runWebGPUProgram(h,[r],i.dtype,f)}u(Vwe,"avgPoolGrad");const Uwe={kernelName:xm,backendName:"webgpu",kernelFunc:Vwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gwe(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return Ty({a:r,b:o,transposeA:i,transposeB:a,backend:t})}u(Gwe,"batchMatMul");const Hwe={kernelName:vd,backendName:"webgpu",kernelFunc:Gwe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jwe{static{u(this,"SliceProgram")}constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Xt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Xt(this.rank),t=qwe(this.rank);let s;return this.start.length===1?s=this.outputShape.map((o,i)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((o,i)=>`sourceLoc.${s0[i]} = uniforms.start.${fo(i)} + coords.${s0[i]};`),`
      ${oe("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}}const s0=["x","y","z","w","u","v"];function qwe(n){if(n===1)return"sourceLoc";if(n<=6)return s0.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}u(qwe,"getCoords$1");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tl(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,c]=Ih(r,o,i);if(Vg(r,a,c),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.tensorMap.get(r.dataId),p=G0e(h.values,a,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,p)}if(U(c)===0)return t.makeTensorInfo(c,r.dtype,[]);const l=new jwe(a,c),d=[{type:"int32",data:a}];return t.runWebGPUProgram(l,[r],r.dtype,d)}u(tl,"slice");const Kwe={kernelName:lh,backendName:"webgpu",kernelFunc:tl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xwe=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;N(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((x,S)=>x*S),c=va(r.shape,o,a),l=Ia(c.length,o.length),d=ka(r.shape,o,a),h=Kg(i,o.length),p=Xg(d,i,o.length),f=[],m=ge({inputs:{x:r},backend:t,attrs:{shape:c}}),g=jr({inputs:{x:m},backend:t,attrs:{perm:l}}),y=ge({inputs:{x:g},backend:t,attrs:{shape:d}}),b=tl({inputs:{x:y},backend:t,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach(x=>t.disposeData(x.dataId)),b},"batchToSpaceND"),Ywe={kernelName:Id,backendName:"webgpu",kernelFunc:Xwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qwe=`
  fn bincount_write(index: i32, value: f32) {
    ${wi("&result[index]","value","float32")}
  }
`,Jwe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class AO{static{u(this,"BincountProgram")}constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Jwe:Qwe}
  ${oe("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=U(r.shape),l=U(o.shape)>0,d=[i],h=o.dtype,p=ns({backend:t,attrs:{shape:d,value:0,dtype:h}}),f=new AO([a],l),m=[{type:"int32",data:[i]}],g=l?[r,o]:[r];return t.runWebGPUProgram(f,g,h,m,p)}u(Zwe,"bincount");const eSe={kernelName:Sm,backendName:"webgpu",kernelFunc:Zwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tSe{static{u(this,"BroadcastArgsProgram")}constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${oe("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nSe(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const d=t.tensorMap.get(s.dataId),h=t.tensorMap.get(r.dataId),p=d.values,f=h.values,m=Ne(Array.from(p),Array.from(f));return t.makeTensorInfo([m.length],"int32",Int32Array.from(m))}const o=U(s.shape),i=U(r.shape),a=Math.max(o,i),c=new tSe(a),l=[{type:"int32",data:[o]},{type:"int32",data:[i]}];return t.runWebGPUProgram(c,[s,r],"int32",l)}u(nSe,"broadcastArgs");const sSe={kernelName:vm,backendName:"webgpu",kernelFunc:nSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO=Sn({opType:Ee.NOT_EQUAL,dtype:"bool",cpuKernelImpl:M0e}),rSe={kernelName:Jd,backendName:"webgpu",kernelFunc:DO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vh(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return ws({inputs:{x:r.complexTensorInfos.real},backend:t})}u(Vh,"real");const oSe={kernelName:Jm,backendName:"webgpu",kernelFunc:Vh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iSe(n,e){const t=new el(n.shape,re.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}u(iSe,"int");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return ws({inputs:{x:r},backend:t});const i=Zt(r.shape),a=r0({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=Da({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),c}if(r.dtype==="complex64"){const i=Vh({inputs:{input:r},backend:t}),a=r0({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeData(i.dataId),a}if(!iw(r.dtype,o)){const i=ws({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.tensorMap.get(r.dataId).values,[a,c,l]=b0e(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,c,l)}if(o==="int32")return iSe(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",ln("bool",1)),c=DO({inputs:{a:r,b:i},backend:t});return t.disposeData(i.dataId),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}u(r0,"cast");const aSe={kernelName:Jc,backendName:"webgpu",kernelFunc:r0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cSe=at({opType:re.CEIL,cpuKernelImpl:x0e}),uSe={kernelName:Zc,backendName:"webgpu",kernelFunc:cSe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lSe{static{u(this,"ClipVec4Program")}constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${oe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dSe{static{u(this,"ClipProgram")}constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${oe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;const c=[{type:"float32",data:[o]},{type:"float32",data:[i]}];return U(r.shape)%4===0?a=new lSe(r.shape):a=new dSe(r.shape),t.runWebGPUProgram(a,[r],r.dtype,c)}u(hSe,"clipByValue");const pSe={kernelName:eu,backendName:"webgpu",kernelFunc:hSe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fSe{static{u(this,"ComplexAbsProgram")}constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}u(nk,"makeComplexComponentTensorInfo");function mSe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),o=new fSe(s.shape),i=[nk(s,r.complexTensorInfos.real),nk(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(o,i,i[0].dtype)}u(mSe,"complexAbs");const gSe={kernelName:kd,backendName:"webgpu",kernelFunc:mSe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ySe{static{u(this,"ConcatProgram")}constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=ts(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let o=1;o<this.offsetLength;o++)e.push(`else if (yC < uniforms.offset${[o]}){ setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${o-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${oe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ey(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return ws({inputs:{x:r.complexTensorInfos.imag},backend:t})}u(Ey,"imag");const bSe={kernelName:Vm,backendName:"webgpu",kernelFunc:Ey};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yl(n,e,t){const s=n[0].dtype;if(s==="complex64"){const m=n.map(S=>Vh({inputs:{input:S},backend:t})),g=n.map(S=>Ey({inputs:{input:S},backend:t})),y=yl(m,e,t),b=yl(g,e,t),x=Da({inputs:{real:y,imag:b},backend:t});return m.forEach(S=>t.disposeData(S.dataId)),g.forEach(S=>t.disposeData(S.dataId)),t.disposeData(y.dataId),t.disposeData(b.dataId),x}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const m=n.map(C=>{const k=[-1,U(C.shape.slice(e))];return ge({inputs:{x:C},backend:t,attrs:{shape:k}})}),g=m.map(C=>({vals:t.readSync(C.dataId),shape:C.shape})),y=ts(m.map(C=>C.shape),1),b=m[0].shape[0]===1,x=w0e(g,y,s,b),S=ts(n.map(C=>C.shape),e),w=t.makeTensorInfo(S,s,x);return m.forEach(C=>t.disposeData(C.dataId)),w}const o=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>o){const m=[];for(let y=0;y<n.length;y+=o){const b=n.slice(y,y+o);m.push(yl(b,e,t))}const g=yl(m,e,t);for(const y of m)t.disposeData(y.dataId);return g}const{tensors2D:i,outShape:a}=xSe(n,e,t),c=i.map(m=>m.shape),l=new ySe(c),d=[],h=new Array(c.length-1);if(h.length>0){h[0]=c[0][1],d.push({type:"int32",data:[h[0]]});for(let m=1;m<h.length;m++)h[m]=h[m-1]+c[m][1],d.push({type:"int32",data:[h[m]]})}const p=t.runWebGPUProgram(l,i,i[0].dtype,d);i.forEach(m=>t.disposeData(m.dataId));const f=ge({inputs:{x:p},backend:t,attrs:{shape:a}});return t.disposeData(p.dataId),f}u(yl,"concatImpl");function xSe(n,e,t){const s=ts(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ge({inputs:{x:o},backend:t,attrs:{shape:[U(o.shape.slice(0,e)),U(o.shape.slice(e))]}})),outShape:s}}u(xSe,"computeTensors2D");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Pe(r,e[0].shape)[0],i=e.map(l=>l.shape);Hg(i,o);const a=ts(e.map(l=>l.shape),o);if(U(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(l=>U(l.shape)>0);return c.length===1?ws({inputs:{x:c[0]},backend:t}):yl(c,o,t)}u(OO,"concat");const wSe={kernelName:$d,backendName:"webgpu",kernelFunc:OO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SSe(n,e,t,s,r=!1,o=null,i=!1,a=4,c=4,l=4){const d=u(T=>{switch(T){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},"getXSnippet"),h=u(T=>{switch(T){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},"getWSnippet"),p=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,f=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,m=n?"uniforms.xShape[1]":"uniforms.xShape[2]",g=n?"uniforms.xShape[2]":"uniforms.xShape[3]",y=n?"row":"col",b=n?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${b} % inChannels;
      var resData = ${He(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${m} && xCol >= 0 && xCol < ${g}) {
        ${p}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${d(a)}
      }
      return resData;`,S=n?e&&s?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${He(a)}(0.0);`:s&&t?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${He(a)}(0.0);`,w=`${h(c)}`,C=He(l),v=He(n?a:c),k=He(n?c:a);return`
      ${No(o,i,l===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${v} {
        ${n?S:w}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${k} {
        ${n?w:S}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${C}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${f}
        ${Aa(r,o)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}u(SSe,"conv2dCommonSnippet");class CSe{static{u(this,"Conv2DMMProgram")}constructor(e,t,s,r,o=!1,i=null,a=!1,c=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=vO(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=IO(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),o&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=c,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?$y(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Ny(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${SSe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vSe{static{u(this,"Conv2DNaiveProgram")}constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${No(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Aa(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${oe("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ISe{static{u(this,"Im2ColProgram")}constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",o=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${oe("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${o};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}u(jf,"getShapeForBatchMatMul");function kSe({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const c=t.dataFormat==="channelsLast",l=!c,d=!1,h=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",p=[];let f,m;if(h){const b=t.inHeight*t.inWidth*t.inChannels;f=ge({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,b]}}),m=ge({inputs:{x:e},backend:s,attrs:{shape:[1,b,t.outChannels]}})}else f=ge({inputs:{x:n},backend:s,attrs:{shape:c?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),m=ge({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(p.push(f),p.push(m),o!=null){const b=jf(o.shape,c);b!=null&&(o=ge({inputs:{x:o},backend:s,attrs:{shape:b}}),p.push(o))}if(r!=null){const b=jf(r.shape,c);b!=null&&(r=ge({inputs:{x:r},backend:s,attrs:{shape:b}}),p.push(r))}const g=Ty({a:c?f:m,b:c?m:f,transposeA:l,transposeB:d,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),y=ge({inputs:{x:g},backend:s,attrs:{shape:t.outShape}});p.push(g);for(const b of p)s.disposeData(b.dataId);return y}u(kSe,"conv2dByMatMul");function $Se({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:c,filterHeight:l,inChannels:d,strideWidth:h,strideHeight:p,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:b,dataFormat:x}=t,S=x==="channelsLast",w=c*l*d,C=g*m,v=S?[t.batchSize,C,w]:[t.batchSize,w,C],k=new ISe(v,S),$=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[p,h]},{type:"int32",data:[b,y]},{type:"int32",data:[m]},{type:"int32",data:[d*c]},{type:"int32",data:[d]}],T=s.runWebGPUProgram(k,[n],n.dtype,$),E=[];E.push(T);const R=ge({inputs:{x:e},backend:s,attrs:{shape:[1,w,-1]}});if(E.push(R),o!=null){const A=jf(o.shape,S);A!=null&&(o=ge({inputs:{x:o},backend:s,attrs:{shape:A}}),E.push(o))}if(r!=null){const A=jf(r.shape,S);A!=null&&(r=ge({inputs:{x:r},backend:s,attrs:{shape:A}}),E.push(r))}const z=Ty({a:S?T:R,b:S?R:T,transposeA:!S,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),W=ge({inputs:{x:z},backend:s,attrs:{shape:t.outShape}});E.push(z);for(const A of E)s.disposeData(A.dataId);return W}u($Se,"conv2dWithIm2Col");function FO({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const c=r!=null,l=o!=null,d=t.dataFormat==="channelsLast",h=d&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",p=j().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!p&&(h||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return kSe({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});const f=j().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:s.thresholdToIncreaseWorkgroups,g=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(j().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return $Se({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:o,leakyreluAlpha:i,activation:a});let y;const b=[t.padInfo.top,t.padInfo.left],x=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(p)y=new vSe(t,c,a,l);else{const v=d?t.outHeight*t.outWidth:t.outChannels,k=d?t.outChannels:t.outHeight*t.outWidth,$=t.filterHeight*t.filterWidth*t.inChannels;x.push({type:"int32",data:[v]},{type:"int32",data:[k]},{type:"int32",data:[$]});const T=s.adapterInfo.isIntel();y=new CSe(t,v,k,$,c,a,l,T)}const S=[],w=[n,e];c&&(!d&&r.shape.length===1&&(r=ge({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),S.push(r)),w.push(r)),l&&(!d&&o.shape.length===1&&(o=ge({inputs:{x:o},backend:s,attrs:{shape:[o.shape[0],1,1]}}),S.push(o)),w.push(o)),a==="leakyrelu"&&(x.push({type:"float32",data:[i]}),y.uniforms+=" alpha : f32,");const C=s.runWebGPUProgram(y,w,n.dtype,x);for(const v of S)s.disposeData(v.dataId);return C}u(FO,"conv2DImpl");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NSe(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:c,dilations:l,dimRoundingMode:d}=t,h=vs(c),p=kt(r.shape,o.shape,i,l,a,d,!1,h);return FO({x:r,filter:o,convInfo:p,backend:s})}u(NSe,"conv2d");const TSe={kernelName:Nd,backendName:"webgpu",kernelFunc:NSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ESe{static{u(this,"Conv2DDerInputProgram")}constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${oe()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class _Se{static{u(this,"Conv2DDerFilterProgram")}constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class RSe{static{u(this,"Conv3DDerFilterProgram")}constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class ASe{static{u(this,"Conv3DDerInputProgram")}constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:c,dimRoundingMode:l,filterShape:d}=s,h=vs(c),p=kt(r.shape,d,i,1,a,l,!1,h),f=new _Se(p),m=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]}];return t.runWebGPUProgram(f,[r,o],r.dtype,m)}u(DSe,"conv2DBackpropFilter");const OSe={kernelName:km,backendName:"webgpu",kernelFunc:DSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FSe(n=4){const e=u(o=>{switch(o){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${o} is not supported.`)}},"getWSnippet"),s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${He(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${He(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${He(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${He(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${He(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${He(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${He(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}u(FSe,"conv2dTransposeCommonSnippet");class PSe{static{u(this,"Conv2DDerInputMMProgram")}constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,N(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=vO(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=IO(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?$y(this.elementsPerThread,this.workgroupSize):Ny(this.elementsPerThread,this.workgroupSize);return`
    ${FSe(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LSe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:c,dataFormat:l,dimRoundingMode:d}=s,h=vs(l),p=kt(i,o.shape,a,1,c,d,!1,h),f=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let m;if(j().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||p.dataFormat!=="channelsLast")m=new ESe(p);else{m=new PSe(p);const g=p.inHeight*p.inWidth,y=p.inChannels,b=p.filterHeight*p.filterWidth*p.outChannels;f.push({type:"uint32",data:[g]},{type:"uint32",data:[y]},{type:"uint32",data:[b]})}return t.runWebGPUProgram(m,[r,o],"float32",f)}u(LSe,"conv2DBackpropInput");const MSe={kernelName:Td,backendName:"webgpu",kernelFunc:LSe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zSe{static{u(this,"Conv3DNaiveProgram")}constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c}=s,l=$r(r.shape,o.shape,i,c,a),d=[l.padInfo.front,l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationDepth,l.dilationHeight,l.dilationWidth]}],p=new zSe(l),f=wn(r.dtype,o.dtype);return t.runWebGPUProgram(p,[r,o],f,h)}u(BSe,"conv3D");const WSe={kernelName:Ed,backendName:"webgpu",kernelFunc:BSe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:c}=s,l=$r(r.shape,c,i,1,a),d=new RSe(l),h=[{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.batchSize]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.inDepth]},{type:"int32",data:[l.inHeight]},{type:"int32",data:[l.inWidth]}];return t.runWebGPUProgram(d,[r,o],o.dtype,h)}u(VSe,"conv3DBackpropFilterV2");const USe={kernelName:$m,backendName:"webgpu",kernelFunc:VSe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GSe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,pad:a,inputShape:c}=s,l=$r(c,o.shape,i,1,a),d=new ASe(l),h=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[l.filterDepth-1-l.padInfo.front,l.filterHeight-1-l.padInfo.top,l.filterWidth-1-l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.outChannels]}];return t.runWebGPUProgram(d,[r,o],r.dtype,h)}u(GSe,"conv3DBackpropInputV2");const HSe={kernelName:Nm,backendName:"webgpu",kernelFunc:GSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jSe=at({opType:re.COS}),qSe={kernelName:tu,backendName:"webgpu",kernelFunc:jSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KSe=at({opType:re.COSH}),XSe={kernelName:nu,backendName:"webgpu",kernelFunc:KSe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YSe{static{u(this,"CropAndResizeProgram")}constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[o]=t;this.outputShape=[o,s[0],s[1],e],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,o]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,c]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${a};
        let in_y = ${o};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${c};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QSe=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:c,extrapolationValue:l}=s,d=new YSe(r.shape[3],o.shape,a,c),h=[{type:"float32",data:[l]}];return t.runWebGPUProgram(d,[r,o,i],"float32",h)},"cropAndResize"),JSe={kernelName:Em,backendName:"webgpu",kernelFunc:QSe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var nd;(function(n){n.Prod="*",n.Sum="+"})(nd||(nd={}));class sk{static{u(this,"CumProgram")}constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===nd.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${rk(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let o="",i="";return this.exclusive?(o=this.reverse?`end != ${r-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(o=this.reverse?`end + pow2 < ${r}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${oe("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${ok(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${o}) {
           let idx = ${i};
           ${ok(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${rk(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function rk(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}u(rk,"getCoords");function ok(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}u(ok,"getFinalCoord");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n,e,t,s,r,o){const i=e.shape.length,a=xt([s],i);let c=e;a!=null&&(c=jr({inputs:{x:e},backend:t,attrs:{perm:a}}));const l=$t(1,i)[0];if(l!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const d=c.shape[l];let h=ws({inputs:{x:c},backend:t});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){const f=new sk(n,c.shape,!1,o),m=h,g=[{type:"float32",data:[p]}];h=t.runWebGPUProgram(f,[h],h.dtype,g),t.disposeData(m.dataId)}if(r){const p=new sk(n,c.shape,r,o),f=h,m=[{type:"float32",data:[0]}];h=t.runWebGPUProgram(p,[h],h.dtype,m),t.disposeData(f.dataId)}if(a!=null){const p=Kr(a),f=jr({inputs:{x:h},backend:t,attrs:{perm:p}});return t.disposeData(h.dataId),t.disposeData(c.dataId),f}return h}u(PO,"cumImpl");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return PO(nd.Prod,r,t,o,i,a)}u(ZSe,"cumprod");const e1e={kernelName:Tm,backendName:"webgpu",kernelFunc:ZSe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return PO(nd.Sum,r,t,o,i,a)}u(t1e,"cumsum");const n1e={kernelName:_d,backendName:"webgpu",kernelFunc:t1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s,c=r.shape.length===1,d=U(o.shape)>0,h=o.dtype,p=c?[r.shape[0]]:[r.shape[0],r.shape[1]],f=c?[i]:[r.shape[0],i],m=ns({backend:t,attrs:{shape:f,value:0,dtype:h}}),g=new AO(p,d,a),y=[{type:"int32",data:[i]}],b=d?[r,o]:[r];return t.runWebGPUProgram(g,b,h,y,m)}u(s1e,"denseBincount");const r1e={kernelName:_m,backendName:"webgpu",kernelFunc:s1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o1e{static{u(this,"DepthToSpaceProgram")}constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],c=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],d=i==="NHWC"?r.shape[3]:r.shape[1],h=c*o,p=l*o,f=d/(o*o),m=i==="NHWC"?[a,h,p,f]:[a,f,h,p],g=[{type:"int32",data:[o]}],y=new o1e(m,i);return t.runWebGPUProgram(y,[r],r.dtype,g)}u(i1e,"depthToSpace");const a1e={kernelName:Rm,backendName:"webgpu",kernelFunc:i1e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c1e{static{u(this,"DepthwiseConv2DNCHWSharedProgram")}constructor(e,t,s,r=!1,o=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=o,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${No(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${oe()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Aa(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LO{static{u(this,"DepthwiseConv2DVec4Program")}constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const o=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=pe(o),this.dispatch=ie(this.dispatchLayout,o,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),N(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${No(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${oe("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Aa(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MO{static{u(this,"DepthwiseConv2DProgram")}constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${No(this.activation,this.hasPreluActivation,!1,4)}

      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Aa(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:c,dilations:l,dimRoundingMode:d}=s,h=vs(c);let p=l;p==null&&(p=[1,1]);const f=kt(r.shape,o.shape,i,p,a,d,!0,h),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],g=f.dataFormat==="channelsLast";let y;return!g&&f.inHeight>16&&f.inWidth>16&&f.strideHeight===1&&f.strideWidth===1&&f.dilationWidth===1&&f.dilationHeight===1&&f.inChannels===f.outChannels?y=new c1e(f.outShape,f.filterHeight,f.filterWidth):g&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&f.dilationHeight===1&&f.dilationWidth===1&&f.inChannels%4===0?(y=new LO(f),m.push({type:"int32",data:[y.virtualWidth]})):(y=new MO(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),t.runWebGPUProgram(y,[r,o],r.dtype,m)}u(u1e,"depthwiseConv2dNative");const l1e={kernelName:Rd,backendName:"webgpu",kernelFunc:u1e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d1e{static{u(this,"DepthwiseConv2DDerFilterProgram")}constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class h1e{static{u(this,"DepthwiseConv2DDerInputProgram")}constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,filterShape:d}=s,h=kt(r.shape,d,i,a,c,l,!0),p=new d1e(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(p,[r,o],"float32",f)}u(p1e,"depthwiseConv2dNativeBackpropFilter");const f1e={kernelName:Am,backendName:"webgpu",kernelFunc:p1e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1e(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,inputShape:d}=s,h=kt(d,o.shape,i,a,c,l,!0),p=new h1e(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(p,[r,o],r.dtype,f)}u(m1e,"depthwiseConv2dNativeBackpropInput");const g1e={kernelName:Dm,backendName:"webgpu",kernelFunc:m1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y1e{static{u(this,"DiagProgram")}constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1e(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=U(s.shape),i=ge({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new y1e(o),c=t.runWebGPUProgram(a,[i],i.dtype),l=ge({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeData(i.dataId),t.disposeData(c.dataId),l}u(b1e,"diag");const x1e={kernelName:Om,backendName:"webgpu",kernelFunc:b1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w1e{static{u(this,"Dilation2DProgram")}constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${oe("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:c}=s,l=pi(r.shape,o.shape,i,a,"NHWC",c),d=[l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]}],p=new w1e(l);return t.runWebGPUProgram(p,[r,o],r.dtype,h)}u(S1e,"dilation2D");const C1e={kernelName:Ad,backendName:"webgpu",kernelFunc:S1e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v1e{static{u(this,"Dilation2DBackpropInputProgram")}constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(e.outShape),this.dispatch=ie(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${oe("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${wi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class I1e{static{u(this,"Dilation2DBackpropFilterProgram")}constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=pe(e.outShape),this.dispatch=ie(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${oe("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${wi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:c,dilations:l}=s,d=pi(r.shape,o.shape,a,c,"NHWC",l),h=o.dtype,p=new I1e(d,o.shape,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[U(d.outShape)]}],m=ns({backend:t,attrs:{shape:o.shape,value:0,dtype:h}});return t.runWebGPUProgram(p,[r,o,i],h,f,m)}u(k1e,"dilation2DBackpropFilter");const $1e={kernelName:mf,backendName:"webgpu",kernelFunc:k1e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:c,dilations:l}=s,d=pi(r.shape,o.shape,a,c,"NHWC",l),h=r.dtype,p=new v1e(d,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[U(d.outShape)]}],m=ns({backend:t,attrs:{shape:d.inShape,value:0,dtype:h}});return t.runWebGPUProgram(p,[r,o,i],h,f,m)}u(N1e,"dilation2DBackpropInput");const T1e={kernelName:ff,backendName:"webgpu",kernelFunc:N1e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E1e{static{u(this,"DrawProgram")}constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Ac.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${oe("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1e(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,[a,c]=r.shape.slice(0,2),{imageOptions:l}=i||{},d=l?.alpha||1,h=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",p=[a,c],f=new E1e(p,r.dtype,h);o.width=c,o.height=a;const m="webgpu";let g=o.getContext(m),y;g||(y=new OffscreenCanvas(c,a),g=y.getContext(m));const b=r.shape.length===3?r.shape[2]:1;g.configure({device:t.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const x="int32",S=t.makeTensorInfo(p,x),w=t.tensorMap.get(S.dataId);w.resource=g.getCurrentTexture(),w.external=!0;const C=[{type:"uint32",data:[b]},{type:"float32",data:[d]}];if(t.runWebGPUProgram(f,[r],x,C,S),y){const v=o.getContext("2d");if(!v)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");v.drawImage(y,0,0)}return t.disposeData(S.dataId),r}u(_1e,"draw");const R1e={kernelName:wN,backendName:"webgpu",kernelFunc:_1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=Sn({opType:Ee.MUL,cpuKernelImpl:P0e,supportsComplex:!0}),A1e={kernelName:wu,backendName:"webgpu",kernelFunc:zO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Oa(r,o,i,"sum",t)}u(BO,"sum");const D1e={kernelName:dh,backendName:"webgpu",kernelFunc:BO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O1e(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:c}=ny(r,o.length);ry(i.length,c,o);const{path:l,steps:d}=oy(a,c),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const y of d[g]){const{permutationIndices:b,expandDims:x}=sy(f,c[y]);let S;iy(b)?S=o[y]:(S=jr({inputs:{x:o[y]},backend:t,attrs:{perm:b}}),m.push(S));const w=S.shape.slice();for(let C=0;C<x.length;++C)w.splice(x[C],0,1);Ge(S.shape,w)||(S=ge({inputs:{x:S},backend:t,attrs:{shape:w}}),m.push(S)),p===null?p=S:(p=zO({inputs:{a:S,b:p},backend:t}),m.push(p))}g<h-1&&(l[g]>=0&&(p=BO({inputs:{x:p},backend:t,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&t.disposeData(g.dataId);return p}u(O1e,"einsum");const F1e={kernelName:Fm,backendName:"webgpu",kernelFunc:O1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P1e=at({opType:re.ELU}),L1e={kernelName:ru,backendName:"webgpu",kernelFunc:P1e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M1e=u(n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=new Hf(Ee.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],s.dtype)},"eluGrad"),z1e={kernelName:Pm,backendName:"webgpu",kernelFunc:M1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B1e=Sn({opType:Ee.EQUAL,dtype:"bool",cpuKernelImpl:S0e}),W1e={kernelName:Dd,backendName:"webgpu",kernelFunc:B1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1e=at({opType:re.ERF}),U1e={kernelName:ou,backendName:"webgpu",kernelFunc:V1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G1e=at({opType:re.EXP,cpuKernelImpl:C0e,dtype:"float32"}),H1e={kernelName:iu,backendName:"webgpu",kernelFunc:G1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let c=r;return r<0&&(N(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+r+1),a.splice(c,0,1),ge({inputs:{x:o},backend:s,attrs:{shape:a}})}u(o0,"expandDims");const j1e={kernelName:Od,backendName:"webgpu",kernelFunc:o0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q1e=at({opType:re.EXPM1,cpuKernelImpl:v0e}),K1e={kernelName:au,backendName:"webgpu",kernelFunc:q1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ik{static{u(this,"FFTProgram")}constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n,e,t){const s=t.tensorMap.get(n.dataId),r=U(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=[],c=ge({inputs:{x:n},backend:t,attrs:{shape:[i,o]}});a.push(c);const l=c.shape,d=new ik("real",l),h=new ik("imag",l),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],f=e?2*Math.PI:-2*Math.PI,m=e?l[1]:1,g=[{type:"float32",data:[f]},{type:"float32",data:[m]}],y=t.runWebGPUProgram(d,p,"float32",g);a.push(y);const b=t.runWebGPUProgram(h,p,"float32",g);a.push(b);const x=Da({inputs:{real:y,imag:b},backend:t});a.push(x);const S=ge({inputs:{x},backend:t,attrs:{shape:n.shape}});return a.forEach(w=>t.disposeData(w.dataId)),S}u(WO,"fftImpl");/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1e(n){const{inputs:e,backend:t}=n,{input:s}=e;return WO(s,!1,t)}u(X1e,"fft");const Y1e={kernelName:Lm,backendName:"webgpu",kernelFunc:X1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q1e{static{u(this,"FlipLeftRightProgram")}constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1e={kernelName:zm,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new Q1e(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1e=at({opType:re.FLOOR,cpuKernelImpl:I0e}),eCe={kernelName:cu,backendName:"webgpu",kernelFunc:Z1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tCe=Sn({opType:Ee.FLOOR_DIV,cpuKernelImpl:k0e,dtype:"int32"}),nCe={kernelName:uu,backendName:"webgpu",kernelFunc:tCe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sCe{static{u(this,"FromPixelsProgram")}constructor(e,t,s=!1){this.pixelsOpType=Ac.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${oe("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rCe={kernelName:gf,backendName:"webgpu",kernelFunc:oCe};let za,gb=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function oCe(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,c=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,l=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[d,h]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[h,d,o],f=j().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,m=i||a;if(l||c||m){let x;if(f)x=t.device.importExternalTexture({source:r});else{if(m){const L=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(za==null||L!==gb)&&(gb=L,za=document.createElement("canvas").getContext("2d",{willReadFrequently:gb})),za.canvas.width=d,za.canvas.height=h,za.drawImage(r,0,0,d,h),r=za.canvas}const E=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,O=t.textureManager.acquireTexture(p[1],p[0],"rgba8unorm",E);t.queue.copyExternalImageToTexture({source:r},{texture:O},[p[1],p[0]]),x=O}const S=U(p),w=we(p),C=new sCe(p,o,f),v=[{type:"uint32",data:[S]},{type:"uint32",data:[o]},{type:"uint32",data:[...w]}],k=t.makeTensorInfo([h,d],"int32"),$=t.tensorMap.get(k.dataId);$.resource=x;const T=t.runWebGPUProgram(C,[k],"int32",v);return t.disposeData(k.dataId),T}const g=r.data;let y=g;if(o!=null&&o!==4){y=new Uint8Array(r.width*r.height*o);const x=g.length;let S=0;for(let w=0;w<x;w++)w%4<o&&(y[S++]=g[w])}const b=t.makeTensorInfo(p,"int32",new Int32Array(y));return t.uploadToGPU(b.dataId),b}u(oCe,"fromPixels");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iCe{static{u(this,"BatchNormProgram")}constructor(e,t,s,r,o){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Ne(e,t),Ne(e,s),this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(Ne(e,r),this.variableNames.push("offset")),o!=null&&(Ne(e,o),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=o,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${oe("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aCe={kernelName:Fd,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:o,mean:i,variance:a}=n,{varianceEpsilon:c}=e,l=t,d=[s,i,a];let h=null;o!=null&&(h=o.shape,d.push(o));let p=null;r!=null&&(p=r.shape,d.push(r));const f=new iCe(s.shape,i.shape,a.shape,h,p),m=[{type:"float32",data:[c]}];return l.runWebGPUProgram(f,d,s.dtype,m)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s,g=vs(d),y=kt(r.shape,o.shape,c,h,l,p,!1,g);return FO({x:r,filter:o,convInfo:y,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:m,activation:f})}u(cCe,"fusedConv2d");const uCe={kernelName:Ml,backendName:"webgpu",kernelFunc:cCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=d;m==null&&(m=[1,1]),N(hn(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);const g=kt(r.shape,o.shape,c,m,l,h,!0),y=[r,o],b=i!=null,x=a!=null;b&&y.push(i),x&&y.push(a);const S=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}];let w;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&g.dilationHeight===1&&g.dilationWidth===1&&g.inChannels%4===0?(w=new LO(g,b,p,x),S.push({type:"int32",data:[w.virtualWidth]})):(w=new MO(g,b,p,x),S.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),p==="leakyrelu"&&(S.push({type:"float32",data:[f]}),w.uniforms+=" alpha : f32,"),t.runWebGPUProgram(w,y,"float32",S)}u(lCe,"fusedDepthwiseConv2D");const dCe={kernelName:zl,backendName:"webgpu",kernelFunc:lCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hCe{static{u(this,"GatherNDProgram")}constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Xt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pCe(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=U(s.shape),[c,l,d,h]=Wg(s,r),p=ge({inputs:{x:r},backend:t,attrs:{shape:[l,i]}}),f=ge({inputs:{x:s},backend:t,attrs:{shape:[U(s.shape)/d,d]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=t.readSync(r.dataId),S=t.bufferSync(s),w=$0e(x,S,s.dtype,l,i,d,h,s.shape,a);return t.makeTensorInfo(c,s.dtype,w.values)}const m=new hCe(i,[l,d]),g=[{type:"int32",data:[i]},{type:"int32",data:h}],y=t.runWebGPUProgram(m,[f,p],f.dtype,g),b=ge({inputs:{x:y},backend:t,attrs:{shape:c}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(y.dataId),b}u(pCe,"gatherNd");const fCe={kernelName:Bm,backendName:"webgpu",kernelFunc:pCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mCe{static{u(this,"GatherProgram")}constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=gCe(this.aShape);return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function gCe(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}u(gCe,"getSourceCoords$1");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,c=Pe(i,r.shape)[0],l=cy(r,o,c,a),d=U(o.shape),h=[],p=ge({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=ge({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([r,o])){const S=t.tensorMap.get(f.dataId).values,w=Oe(f.shape,f.dtype,S),v=t.tensorMap.get(p.dataId).values,k=Oe(p.shape,p.dtype,v),$=N0e(k,w,m);return h.forEach(T=>t.disposeData(T.dataId)),t.makeTensorInfo(l.outputShape,$.dtype,$.values)}const g=new mCe(p.shape,m),y=t.runWebGPUProgram(g,[p,f],p.dtype);h.push(y);const b=ge({inputs:{x:y},backend:t,attrs:{shape:l.outputShape}});return h.forEach(x=>t.disposeData(x.dataId)),b}u(VO,"gatherV2");const yCe={kernelName:Pd,backendName:"webgpu",kernelFunc:VO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bCe=Sn({opType:Ee.GREATER,cpuKernelImpl:E0e,dtype:"bool"}),xCe={kernelName:Ld,backendName:"webgpu",kernelFunc:bCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wCe=Sn({opType:Ee.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:T0e}),SCe={kernelName:lu,backendName:"webgpu",kernelFunc:wCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CCe(n){const{inputs:e,backend:t}=n,{input:s}=e;return WO(s,!0,t)}u(CCe,"ifft");const vCe={kernelName:Wm,backendName:"webgpu",kernelFunc:CCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ICe=at({opType:re.IS_FINITE,dtype:"bool"}),kCe={kernelName:hu,backendName:"webgpu",kernelFunc:ICe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Ce=at({opType:re.IS_INF,dtype:"bool"}),NCe={kernelName:pu,backendName:"webgpu",kernelFunc:$Ce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TCe=at({opType:re.IS_NAN,dtype:"bool"}),ECe={kernelName:fu,backendName:"webgpu",kernelFunc:TCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Ce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=[{type:"float32",data:[o]}],a=new el(r.shape,re.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(a,[r],"float32",i)}u(_Ce,"leakyRelu");const RCe={kernelName:Md,backendName:"webgpu",kernelFunc:_Ce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACe=Sn({opType:Ee.LESS,dtype:"bool",cpuKernelImpl:R0e}),DCe={kernelName:zd,backendName:"webgpu",kernelFunc:ACe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OCe=Sn({opType:Ee.LESS_EQUAL,dtype:"bool",cpuKernelImpl:_0e}),FCe={kernelName:Bd,backendName:"webgpu",kernelFunc:OCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PCe{static{u(this,"LinSpaceProgram")}constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LCe(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=(r-s)/(o-1),a=new PCe(o),c=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return e.runWebGPUProgram(a,[],"float32",c)}u(LCe,"linSpace");const MCe={kernelName:Um,backendName:"webgpu",kernelFunc:LCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zCe=at({opType:re.LOG,cpuKernelImpl:A0e}),BCe={kernelName:mu,backendName:"webgpu",kernelFunc:zCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WCe=at({opType:re.LOG1P}),VCe={kernelName:gu,backendName:"webgpu",kernelFunc:WCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UCe=Sn({opType:Ee.LOGICAL_AND,dtype:"bool"}),GCe={kernelName:Wd,backendName:"webgpu",kernelFunc:UCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HCe=at({opType:re.LOGICAL_NOT}),jCe={kernelName:Vd,backendName:"webgpu",kernelFunc:HCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qCe=Sn({opType:Ee.LOGICAL_OR}),KCe={kernelName:Ud,backendName:"webgpu",kernelFunc:qCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class XCe{static{u(this,"LRNProgram")}constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${UO}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class YCe{static{u(this,"LRNSharedProgram")}constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,N(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ie(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${oe()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${UO}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:c}=s;let l;o>16?l=new XCe(r.shape):l=new YCe(r.shape,o);const d=[{type:"int32",data:[o]},{type:"float32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[c]}];return t.runWebGPUProgram(l,[r],r.dtype,d)}u(QCe,"lrn");const JCe={kernelName:Gd,backendName:"webgpu",kernelFunc:QCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZCe{static{u(this,"LRNGradProgram")}constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:c,alpha:l,beta:d}=s,h=new ZCe(r.shape),p=[{type:"int32",data:[a]},{type:"float32",data:[c]},{type:"float32",data:[l]},{type:"float32",data:[d]}];return t.runWebGPUProgram(h,[r,o,i],r.dtype,p)}u(eve,"lrnGrad");const tve={kernelName:Gm,backendName:"webgpu",kernelFunc:eve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nve=Sn({opType:Ee.MAX,cpuKernelImpl:O0e}),sve={kernelName:yu,backendName:"webgpu",kernelFunc:nve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:c}=s,d=Fn(r.shape,o,i,1,a,c);return RO(r,d,"max",t)}u(rve,"maxPool");const ove={kernelName:jd,backendName:"webgpu",kernelFunc:rve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ive(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:c,dimRoundingMode:l}=s,d=[1,1,1],h=Os(r.shape,o,i,d,a,l,c),p=new c1(h,"max"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(p,[r],r.dtype,f)}u(ive,"maxPool3d");const ave={kernelName:qd,backendName:"webgpu",kernelFunc:ive};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cve{static{u(this,"MaxPool2DBackpropProgram")}constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class uve{static{u(this,"MaxPool3DBackpropProgram")}constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lve(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:c,pad:l,dimRoundingMode:d}=s,h=[1,1,1],p=Os(i.shape,a,c,h,l,d),f=new c1(p,"max",!0);let m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];const g=t.runWebGPUProgram(f,[i],"int32",m),y=new uve(p);m=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];const b=t.runWebGPUProgram(y,[r,g],i.dtype,m);return t.disposeData(g.dataId),b}u(lve,"maxPool3DGrad");const dve={kernelName:jm,backendName:"webgpu",kernelFunc:lve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hve(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;kO([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=s,p=Fn(a.shape,c,l,1,d,h),f=new td(p,"max",!0);let m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]}];const g=t.runWebGPUProgram(f,[a],"int32",m),y=new cve(p);m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];const b=t.runWebGPUProgram(y,[r,g],a.dtype,m);return t.disposeData(g.dataId),b}u(hve,"maxPoolGrad");const pve={kernelName:Hm,backendName:"webgpu",kernelFunc:hve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fve(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=s,{x:c}=e;N(c.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${c.shape.length}.`);const l=[1,1];N(hn(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const d=Fn(c.shape,r,o,l,i),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];let p=new td(d,"max",!1);const f=t.runWebGPUProgram(p,[c],c.dtype,h);p=new td(d,"max",!0,!0,a);const m=t.runWebGPUProgram(p,[c],"int32",h);return[f,m]}u(fve,"maxPoolWithArgmax");const mve={kernelName:qm,backendName:"webgpu",kernelFunc:fve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Oa(r,o,i,"min",t)}u(gve,"min");const yve={kernelName:Xd,backendName:"webgpu",kernelFunc:gve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bve=Sn({opType:Ee.MIN,cpuKernelImpl:F0e}),xve={kernelName:bu,backendName:"webgpu",kernelFunc:bve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wve{static{u(this,"MirrorPadProgram")}constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,o)=>r[0]+e[o]+r[1]),this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((l,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((l,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e===1?"start":"start[i]",o=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=Xt(e),c=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${r}) {
              ${i} = ${r} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${o}) {
              ${i} = (${o} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sve={kernelName:Yd,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:o}=e,i=t,a=r.map(d=>({type:"int32",data:[d[0],d[1]]})),c=new wve(s.shape,r,o);return i.runWebGPUProgram(c,[s],s.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cve=Sn({opType:Ee.MOD}),vve={kernelName:xu,backendName:"webgpu",kernelFunc:Cve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ive{static{u(this,"MultinomialProgram")}constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kve{static{u(this,"SoftmaxProgram")}constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${oe("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=ge({inputs:{x:r},backend:t,attrs:{shape:[U(r.shape)/r.shape[o],r.shape[o]]}}),a=new kve(i.shape),c=t.runWebGPUProgram(a,[i],r.dtype),l=ge({inputs:{x:c},backend:t,attrs:{shape:r.shape}});return t.disposeData(i.dataId),t.disposeData(c.dataId),l}u(GO,"softmax");const $ve={kernelName:fh,backendName:"webgpu",kernelFunc:GO};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nve(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,c=a?r:GO({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),l=c.shape[0],d=c.shape[1],h=new Ive(l,o),p=[{type:"float32",data:[i]},{type:"int32",data:[d]}],f=t.runWebGPUProgram(h,[c],"int32",p);return a||t.disposeData(c.dataId),f}u(Nve,"multinomial");const Tve={kernelName:Km,backendName:"webgpu",kernelFunc:Nve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eve(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.tensorMap.get(s.dataId),[i,a]=L0e(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}const r=new el(s.shape,re.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}u(Eve,"neg");const _ve={kernelName:Qd,backendName:"webgpu",kernelFunc:Eve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rve(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c}=s,l=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:h}=zg(l,d,i,a,c);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}u(Rve,"nonMaxSuppressionV3");const Ave={kernelName:Xm,backendName:"webgpu",kernelFunc:Rve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dve(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,softNmsSigma:l}=s,d=t.readSync(r.dataId),h=t.readSync(o.dataId),p=i,f=a,m=c,g=l,{selectedIndices:y,selectedScores:b}=Bg(d,h,p,f,m,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}u(Dve,"nonMaxSuppressionV5");const Ove={kernelName:Ym,backendName:"webgpu",kernelFunc:Dve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fve{static{u(this,"OneHotProgram")}constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${oe("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pve(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:c}=s,l=U(r.shape),d=new Fve(l,i),h=ge({inputs:{x:r},backend:t,attrs:{shape:[l]}}),p=[{type:"float32",data:[a]},{type:"float32",data:[c]}],f=t.runWebGPUProgram(d,[h],o,p);t.disposeData(h.dataId);const m=[...r.shape,i],g=ge({inputs:{x:f},backend:t,attrs:{shape:m}});return t.disposeData(f.dataId),g}u(Pve,"oneHot");const Lve={kernelName:eh,backendName:"webgpu",kernelFunc:Pve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Vh({inputs:{input:s},backend:t}),o=qf({inputs:{x:r},backend:t}),i=Ey({inputs:{input:s},backend:t}),a=qf({inputs:{x:i},backend:t}),c=Da({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),c}else return ns({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}u(qf,"zerosLike");const Mve={kernelName:yh,backendName:"webgpu",kernelFunc:qf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Vh({inputs:{input:s},backend:t}),o=HO({inputs:{x:r},backend:t}),i=Ey({inputs:{input:s},backend:t}),a=qf({inputs:{x:i},backend:t}),c=Da({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),c}else return ns({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}u(HO,"onesLike");const zve={kernelName:Zd,backendName:"webgpu",kernelFunc:HO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bve(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return o0({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(d=>{cs(o,d.shape,"All tensors passed to stack must have matching shapes"),N(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=e.map(d=>{const h=o0({inputs:{input:d},backend:t,attrs:{dim:r}});return a.push(h),h}),l=OO({inputs:c,backend:t,attrs:{axis:r}});return a.forEach(d=>t.disposeData(d.dataId)),l}u(Bve,"pack");const Wve={kernelName:th,backendName:"webgpu",kernelFunc:Bve};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n,e=!1){const t=n.length,s=Xt(t),r=n.map((h,p)=>`uniforms.pad${p}[0]`).join(","),o=n.map((h,p)=>`uniforms.pad${p}[0] + uniforms.xShape${t>1?`[${p}]`:""}`).join(","),i=t>1?`${s}(${r})`:`${r}`,a=t>1?`${s}(${o})`:`${o}`,c=t>1?"any(paddedCoords < start)":"paddedCoords < start",l=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",d=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${i};
        let end = ${a};
        if (${c} || ${l}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${d}));
        }
  `}u(jO,"padCommon");class Vve{static{u(this,"PadProgram")}constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${jO(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uve=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(o.every(l=>Ge(l,[0,0])))return ws({inputs:{x:r},backend:t});if(U(r.shape)===0){const l=o.map((d,h)=>d[0]+r.shape[h]+d[1]);return ns({backend:t,attrs:{shape:l,value:i,dtype:r.dtype}})}const a=[{type:"float32",data:[i]}];o.map(l=>a.push({type:"int32",data:[l[0],l[1]]}));const c=new Vve(r.shape,o);return t.runWebGPUProgram(c,[r],r.dtype,a)},"padV2"),Gve={kernelName:nh,backendName:"webgpu",kernelFunc:Uve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hve=Sn({opType:Ee.POW}),jve={kernelName:Su,backendName:"webgpu",kernelFunc:Hve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qve(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=new Hf(Ee.PRELU,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],"float32")}u(qve,"prelu");const Kve={kernelName:sh,backendName:"webgpu",kernelFunc:qve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Oa(r,o,i,"prod",t)}u(Xve,"prod");const Yve={kernelName:rh,backendName:"webgpu",kernelFunc:Xve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qve=u(n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=B0e(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},"range"),Jve={kernelName:Qm,backendName:"webgpu",kernelFunc:Qve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zve=Sn({opType:Ee.DIV}),eIe={kernelName:su,backendName:"webgpu",kernelFunc:Zve};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tIe=at({opType:re.RECIPROCAL}),nIe={kernelName:Cu,backendName:"webgpu",kernelFunc:tIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sIe=at({opType:re.RELU}),rIe={kernelName:vu,backendName:"webgpu",kernelFunc:sIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oIe=at({opType:re.RELU6}),iIe={kernelName:Iu,backendName:"webgpu",kernelFunc:oIe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aIe{static{u(this,"ResizeBilinearProgram")}constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cIe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,size:i,halfPixelCenters:a}=s,[c,l]=i,d=o&&c>1?1:0,h=o&&l>1?1:0,f=[{type:"float32",data:[d,h]},{type:"float32",data:[a?.5:0]}],m=new aIe(r.shape,c,l);return t.runWebGPUProgram(m,[r],"float32",f)}u(cIe,"resizeBilinear");const uIe={kernelName:ah,backendName:"webgpu",kernelFunc:cIe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lIe{static{u(this,"ResizeBilinearBackpropProgram")}constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dIe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,c]=r.shape,[,l,d]=o.shape,h=[i&&l>1?a-1:a,i&&d>1?c-1:c],p=[i&&l>1?l-1:l,i&&d>1?d-1:d],f=h[0]/p[0],m=h[1]/p[1],g=1/f,y=1/m,b=Math.ceil(g)*2+2,x=Math.ceil(y)*2+2,S=new lIe(r.shape,i),w=[{type:"int32",data:h},{type:"int32",data:p},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"float32",data:[y]},{type:"int32",data:[b]},{type:"int32",data:[x]}];return t.runWebGPUProgram(S,[o],o.dtype,w)}u(dIe,"resizeBilinearGrad");const hIe={kernelName:eg,backendName:"webgpu",kernelFunc:dIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pIe{static{u(this,"ResizeNearestNeighborProgram")}constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fIe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[c,l]=a,d=o&&c>1?1:0,h=o&&l>1?1:0,f=[{type:"float32",data:[d,h]},{type:"float32",data:[o?.5:0]}],m=new pIe(r.shape,c,l,i);return t.runWebGPUProgram(m,[r],r.dtype,f)}u(fIe,"resizeNearestNeighbor");const mIe={kernelName:ih,backendName:"webgpu",kernelFunc:fIe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gIe{static{u(this,"ResizeNearestNeigborBackpropProgram")}constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yIe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,c]=r.shape,[,l,d]=o.shape,h=[i&&l>1?a-1:a,i&&d>1?c-1:c],p=[i&&l>1?l-1:l,i&&d>1?d-1:d],f=h[0]/p[0],m=h[1]/p[1],g=1/f,y=1/m,b=Math.ceil(g)*2+2,x=Math.ceil(y)*2+2,S=new gIe(r.shape,i),w=[{type:"int32",data:h},{type:"int32",data:p},{type:"float32",data:[g]},{type:"float32",data:[y]},{type:"int32",data:[b]},{type:"int32",data:[x]}];return t.runWebGPUProgram(S,[o],o.dtype,w)}u(yIe,"resizeNearestNeighborGrad");const bIe={kernelName:Zm,backendName:"webgpu",kernelFunc:yIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xIe{static{u(this,"ReverseProgram")}constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wIe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length;if(i===0)return ws({inputs:{x:r},backend:t});const a=r.shape,c=[1,1,1,1];a.forEach((y,b)=>{const x=b+4-i;c[x]=y});const l=Pe(o,r.shape),d=[0,0,0,0];l.forEach(y=>{const b=y+4-i;d[b]=1});const h=[{type:"int32",data:d}],p=ge({inputs:{x:r},backend:t,attrs:{shape:c}}),f=new xIe(c),m=t.runWebGPUProgram(f,[p],p.dtype,h);t.disposeData(p.dataId);const g=ge({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeData(m.dataId),g}u(wIe,"reverse");const SIe={kernelName:ch,backendName:"webgpu",kernelFunc:wIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CIe{static{u(this,"RotateProgram")}constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${oe("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vIe={kernelName:pg,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,c=new CIe(s.shape,o),[l,d]=qg(i,s.shape[1],s.shape[2]),h=[{type:"float32",data:[l]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof o=="number"?h.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):h.push({type:"float32",data:o}),a.runWebGPUProgram(c,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IIe=at({opType:re.ROUND}),kIe={kernelName:ku,backendName:"webgpu",kernelFunc:IIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Ie=at({opType:re.RSQRT,cpuKernelImpl:W0e}),NIe={kernelName:$u,backendName:"webgpu",kernelFunc:$Ie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $l{static{u(this,"ScatterProgram")}constructor(e,t,s,r,o,i,a,c=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=a,this.sumDupeIndices=c,this.dispatchLayout=pe(e),this.dispatch=ie(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${a}_${c}_${o.length}`;const l=Xt(o.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",o="";this.dispatchLayout.x.length===1?(r="flattenedIndex",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(l,d)=>`coords[${d}]`).join(", ")})`;return`
    ${o}
      ${oe("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${Ai(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?wi("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TIe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Yr(o,r,i),p=[h/l,l];if(h===0)return t.makeTensorInfo(i,r.dtype);const f=ge({inputs:{x:r},backend:t,attrs:{shape:[c,a]}}),m=ge({inputs:{x:o},backend:t,attrs:{shape:[c,l]}}),g=m.dtype,y=ns({backend:t,attrs:{shape:p,value:0,dtype:g}}),b=U(m.shape),x=[{type:"int32",data:[a]},{type:"int32",data:d},{type:"int32",data:[b]}],S=new $l(m.shape,a,f.shape.length,m.shape.length,d,p,g),w=t.runWebGPUProgram(S,[m,f],g,x,y),C=ge({inputs:{x:w},backend:t,attrs:{shape:i}});return t.disposeData(f.dataId),t.disposeData(m.dataId),t.disposeData(w.dataId),C}u(TIe,"scatterNd");const EIe={kernelName:tg,backendName:"webgpu",kernelFunc:TIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Ie{static{u(this,"SearchSortedProgram")}constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RIe(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new _Ie([o.shape[0],o.shape[1]],i),c=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(a,[r,o],"int32",c)}u(RIe,"searchSorted");const AIe={kernelName:sg,backendName:"webgpu",kernelFunc:RIe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DIe{static{u(this,"SelectProgram")}constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${r[a]}`),a<this.cRank&&o.push(`${r[a]}`);e=o.join(),t=i.join()}return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OIe(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new DIe(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(i,[s,r,o],wn(r.dtype,o.dtype))}u(OIe,"select");const FIe={kernelName:uh,backendName:"webgpu",kernelFunc:OIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PIe=at({opType:re.SELU}),LIe={kernelName:Nu,backendName:"webgpu",kernelFunc:PIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MIe=at({opType:re.SIGMOID}),zIe={kernelName:Ru,backendName:"webgpu",kernelFunc:MIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BIe=at({opType:re.SIGN}),WIe={kernelName:_u,backendName:"webgpu",kernelFunc:BIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VIe=at({opType:re.SIN}),UIe={kernelName:Tu,backendName:"webgpu",kernelFunc:VIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GIe=at({opType:re.SINH}),HIe={kernelName:Eu,backendName:"webgpu",kernelFunc:GIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jIe=at({opType:re.SOFTPLUS}),qIe={kernelName:Au,backendName:"webgpu",kernelFunc:jIe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KIe{static{u(this,"SpaceToBatchNDProgram")}constructor(e,t,s,r,o,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(r.length);for(let c=0;c<a.length;c++)a[c]=r[o[c]];this.outputShape=a,this.newDim=o,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Xt(r.length)}, paddedXShapeStrides : ${Xt(i)}, `,s.map((c,l)=>{this.uniforms+=` pad${l} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${o}`}getUserCode(){const e=Xt(this.outputShape.length),t=NO(this.newDim);return`
      ${Vp(this.paddedXShape,"PaddedX")}
      ${oe("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${jO(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XIe=u(n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;N(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((x,S)=>x*S),c=[[0,0]];c.push(...i);for(let x=1+o.length;x<r.shape.length;++x)c.push([0,0]);const l=c.map((x,S)=>x[0]+r.shape[S]+x[1]),d=va(l,o,a,!1),h=Ia(d.length,o.length,!1),p=ka(l,o,a,!1),f=we(l),m=new KIe(r.shape,l,c,d,h,f.length),g=[{type:"int32",data:d},{type:"int32",data:f}];c.map(x=>g.push({type:"int32",data:[x[0],x[1]]}));const y=t.runWebGPUProgram(m,[r],r.dtype,g),b=ge({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeData(y.dataId),b},"spaceToBatchND"),YIe={kernelName:hh,backendName:"webgpu",kernelFunc:XIe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QIe{static{u(this,"SparseSegmentSumProgram")}constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=pe([t]),this.dispatch=ie(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${wi("&result[outIndex]","value",this.type)}
      }
    }
  `}}class JIe{static{u(this,"SparseSegmentIdCountProgram")}constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=pe(t),this.dispatch=ie(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${wi("&result[segmentId]","1","int32")}
      }
    }
  `}}class ZIe{static{u(this,"SparseSegmentMeanProgram")}constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=pe(e),this.dispatch=ie(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(n,e,t,s=!1,r){const i=U(n.shape)/n.shape[0],a=n.dtype,c=U(e.shape),l=r.readSync(t.dataId),h=c>0?l[c-1]+1:0;let p;const f=n.shape.slice();f[0]=h;const m=c*i,g=ns({backend:r,attrs:{shape:f,value:0,dtype:a}});p=new QIe(f,m,a);let y=[{type:"int32",data:[i]},{type:"int32",data:[m]}];const b=r.runWebGPUProgram(p,[n,e,t],a,y,g);if(s)return b;const x=ns({backend:r,attrs:{shape:[h],value:0,dtype:"int32"}});p=new JIe(h,t.shape);const S=r.runWebGPUProgram(p,[t],"int32",null,x),w=ns({backend:r,attrs:{shape:f,value:0,dtype:a}});p=new ZIe(f,a),y=[{type:"int32",data:[i]}];const C=r.runWebGPUProgram(p,[b,S],a,y,w);return r.disposeData(b.dataId),r.disposeData(S.dataId),C}u(qO,"sparseSegmentReduce");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eke(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return qO(s,r,o,!1,t)}u(eke,"sparseSegmentMean");const tke={kernelName:rg,backendName:"webgpu",kernelFunc:eke};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nke(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return qO(s,r,o,!0,t)}u(nke,"sparseSegmentSum");const ske={kernelName:og,backendName:"webgpu",kernelFunc:nke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rke{static{u(this,"TileProgram")}constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=oke(this.rank,"uniforms.");return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function oke(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}u(oke,"getSourceCoords");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const c=t.readSync(r.dataId),l=r.dtype==="string"?c.map(p=>yr(p)):c,d=Oe(r.shape,r.dtype,l),h=K0e(d,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new rke(r.shape,o);return t.runWebGPUProgram(i,[r],r.dtype)}u(u1,"tile");const ike={kernelName:Mu,backendName:"webgpu",kernelFunc:u1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ake(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=Yr(o,r,a),f=!1;if(o.dtype==="string"){const $=t.bufferSync(r),T=t.bufferSync(o),E=yr(t.readSync(i.dataId)[0]),R=V0e($,T,a,p,d,l,c,h,E,f);return t.makeTensorInfo(a,R.dtype,R.values)}const m=[p/d,d],g=ge({inputs:{x:r},backend:t,attrs:{shape:[l,c]}}),y=o.shape.length?ge({inputs:{x:o},backend:t,attrs:{shape:[l,d]}}):ws({inputs:{x:o},backend:t}),b=y.dtype,x=t.makeTensorInfo([],b,Nn(1,b)),S=ge({inputs:{x:i},backend:t,attrs:{shape:Array(m.length).fill(1)}}),w=u1({inputs:{x:S},backend:t,attrs:{reps:m}}),C=U([l,d]),v=[{type:"int32",data:[c]},{type:"int32",data:h},{type:"int32",data:[C]}];switch(l){case 0:break;case 1:{const $=new $l([l,d],c,g.shape.length,y.shape.length,h,m,b,f);t.runWebGPUProgram($,[y,g],b,v,w)}break;default:{const $=new $l([l,d],c,g.shape.length,x.shape.length,h,m,b,f);t.runWebGPUProgram($,[x,g],b,v,w)}{const $=new $l([l,d],c,g.shape.length,y.shape.length,h,m,b);t.runWebGPUProgram($,[y,g],b,v,w)}}const k=ge({inputs:{x:w},backend:t,attrs:{shape:a}});return t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(S.dataId),t.disposeData(x.dataId),t.disposeData(w.dataId),k}u(ake,"sparseToDense");const cke={kernelName:ig,backendName:"webgpu",kernelFunc:ake};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Pe(i,r.shape)[0],c=ay(r,o,a),l=r.shape.length,d=new Array(l).fill(0),h=r.shape.slice();return c.map(p=>{const f=[...h];f[a]=p;const m=tl({inputs:{x:r},backend:t,attrs:{begin:d,size:f}});return d[a]+=p,m})}u(uke,"splitV");const lke={kernelName:ph,backendName:"webgpu",kernelFunc:uke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dke=at({opType:re.SQRT}),hke={kernelName:Du,backendName:"webgpu",kernelFunc:dke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pke={kernelName:ag,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new el(t.shape,re.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fke=Sn({opType:Ee.SQUARED_DIFFERENCE}),mke={kernelName:Ou,backendName:"webgpu",kernelFunc:fke};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gke({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new el(s.shape,re.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,o)}u(gke,"step");const yke={kernelName:zu,backendName:"webgpu",kernelFunc:gke};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bke{static{u(this,"StridedSliceProgram")}constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=Xt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((o,i)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${r-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${oe("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=s,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:S,strides:w}=Gg(r.shape,o,i,a,c,l,d,h,p);let C;if(g)C=ge({inputs:{x:r},backend:t,attrs:{shape:m}});else if(y||b){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const v=Ug(x,S,w),k=tl({inputs:{x:r},backend:t,attrs:{begin:x,size:v}});C=ge({inputs:{x:k},backend:t,attrs:{shape:m}}),t.disposeData(k.dataId)}else if(t.shouldExecuteOnCPU([r])){const k=t.readSync(r.dataId),$=Oe(r.shape,r.dtype,k),T=H0e(f,$,w,x);C=t.makeTensorInfo(m,r.dtype,T.values)}else{const k=new bke(f),$=[{type:"int32",data:x},{type:"int32",data:w}],T=t.runWebGPUProgram(k,[r],r.dtype,$);C=ge({inputs:{x:T},backend:t,attrs:{shape:m}}),t.disposeData(T.dataId)}return C}u(xke,"stridedSlice");const wke={kernelName:ug,backendName:"webgpu",kernelFunc:xke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ske(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:c,preserveShortSequences:l}=s,{data:d,dataSplits:h}=e,p=t.readSync(d.dataId),f=t.readSync(h.dataId),[m,g]=j0e(p,f,r,o,i,a,c,l);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",g)]}u(Ske,"stringNGrams");const Cke={kernelName:lg,backendName:"webgpu",kernelFunc:Ske};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vke=Sn({opType:Ee.SUB,cpuKernelImpl:q0e,supportsComplex:!0}),Ike={kernelName:Fu,backendName:"webgpu",kernelFunc:vke};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kke=at({opType:re.TAN}),$ke={kernelName:Pu,backendName:"webgpu",kernelFunc:kke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nke=at({opType:re.TANH}),Tke={kernelName:Lu,backendName:"webgpu",kernelFunc:Nke};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eke(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Yr(i,o,r.shape),p=[h/l,l];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const f=[],m=ge({inputs:{x:o},backend:t,attrs:{shape:[c,a]}});f.push(m);const g=ge({inputs:{x:i},backend:t,attrs:{shape:[c,l]}});f.push(g);const y=ge({inputs:{x:r},backend:t,attrs:{shape:p}});f.push(y);const b=u1({inputs:{x:y},backend:t,attrs:{reps:Array(p.length).fill(1)}}),x=new $l([c,l],a,m.shape.length,g.shape.length,d,p,r.dtype,!1),S=U([c,l]),w=[{type:"int32",data:[a]},{type:"int32",data:d},{type:"int32",data:[S]}],C=t.runWebGPUProgram(x,[g,m],y.dtype,w,b);f.push(C);const v=ge({inputs:{x:C},backend:t,attrs:{shape:r.shape}});return f.forEach(k=>t.disposeData(k.dataId)),v}u(Eke,"tensorScatterUpdate");const _ke={kernelName:ng,backendName:"webgpu",kernelFunc:Eke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rke{static{u(this,"SwapProgram")}constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${oe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class Ake{static{u(this,"MergeProgram")}constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${oe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(n,e){e!==null&&n.disposeData(e.dataId)}u(Ba,"disposeIntermediateTensorInfoOrNull");function ak(n){let e=1;for(;e<n;)e*=2;return e}u(ak,"roundUpToPow2");function Dke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=r.shape,c=a[a.length-1];if(t.shouldExecuteOnCPU([r])){const C=t.readSync(r.dataId),[v,k]=X0e(C,a,r.dtype,o,i);return[t.makeTensorInfo(v.shape,v.dtype,v.values),t.makeTensorInfo(k.shape,k.dtype,k.values)]}if(o===0)return a[a.length-1]=0,[t.makeTensorInfo(a,r.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(c===1)return[r,ns({attrs:{shape:a,dtype:"int32",value:0},backend:t})];const d=U(a)/c,h=ge({inputs:{x:r},attrs:{shape:[d,c]},backend:t}),p=ak(o),f=ak(c);let m=null;const g=u(()=>m===null?[h,h]:[h,m],"getInputs"),y=u((C,v,k)=>{const $=g(),T=new Rke(k),R=[{type:"int32",data:[c]},{type:"int32",data:[m===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[C]},{type:"int32",data:[v]}],O=m;m=t.runWebGPUProgram(T,$,"int32",R),Ba(t,O)},"runSwap");for(let C=1;C<p;C*=2){const v=C*2;for(let k=C;k>=1;k/=2)y(v,k,[d,f])}for(let C=f;C>p;C/=2){const v=g(),k=new Ake([d,C/2]),T=[{type:"int32",data:[c]},{type:"int32",data:[m===null?1:0]},{type:"int32",data:[p]}],E=m;m=t.runWebGPUProgram(k,v,"int32",T),Ba(t,E);const R=p/2,O=R*2;for(let L=R;L>=1;L/=2)y(O,L,m.shape)}let b=m;m=tl({inputs:{x:m},backend:t,attrs:{begin:0,size:[d,o]}}),Ba(t,b);let x=VO({inputs:{x:h,indices:m},backend:t,attrs:{axis:1,batchDims:1}});Ba(t,h);const S=a.slice(0,-1);S.push(o),b=m,m=ge({inputs:{x:m},attrs:{shape:S},backend:t}),Ba(t,b);const w=x;return x=ge({inputs:{x},attrs:{shape:S},backend:t}),Ba(t,w),[x,m]}u(Dke,"topK");const Oke={kernelName:dg,backendName:"webgpu",kernelFunc:Dke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fke{static{u(this,"TransformProgram")}constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=pe(this.outputShape),this.dispatch=ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${oe("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pke(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:c,outputShape:l}=s,[d,h,p,f]=r.shape,[m,g]=l??[h,p],y=[d,m,g,f],b=new Fke(y),x=i==="nearest"?1:2;let S;switch(a){case"constant":S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4;break;default:S=1;break}const w=[{type:"int32",data:[x]},{type:"int32",data:[S]},{type:"float32",data:[c]}];return t.runWebGPUProgram(b,[r,o],"float32",w)}u(Pke,"transform");const Lke={kernelName:hg,backendName:"webgpu",kernelFunc:Pke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mke(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,c=r.shape[o],l=new Array(a-1);let d=0;for(let g=0;g<a;g++)g!==o&&(l[d++]=i.shape[g]);const h=[],p=new Array(a).fill(0),f=i.shape.slice();f[o]=1;const m=new Array(c);for(let g=0;g<m.length;g++){p[o]=g;const y=tl({inputs:{x:i},backend:t,attrs:{begin:p,size:f}}),b=ge({inputs:{x:y},backend:t,attrs:{shape:l}});m[g]=b,h.push(y)}return h.forEach(g=>t.disposeData(g.dataId)),m}u(Mke,"unpack");const zke={kernelName:mh,backendName:"webgpu",kernelFunc:Mke};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bke{static{u(this,"UnsortedSegmentSumProgram")}constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=pe(e),this.dispatch=ie(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${wi("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,c=[];let l=0;const d=xt([l],a);let h=r;d!=null&&(h=jr({inputs:{x:r},backend:t,attrs:{perm:d}}),c.push(h),l=$t(1,a)[0]);const p=yS(h.shape,l,i),f=U([h.shape[l]]),m=ge({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});c.push(m);const g=r.dtype,y=[m.shape[0],i],b=ns({backend:t,attrs:{shape:y,value:0,dtype:g}}),x=new Bke(m.shape,y,g),S=[{type:"int32",data:[i]},{type:"int32",data:[U(m.shape)]}],w=t.runWebGPUProgram(x,[m,o],g,S,b),C=ge({inputs:{x:w},backend:t,attrs:{shape:p}});c.push(w);let v=C;if(d!=null){c.push(C);const k=Kr(d);v=jr({inputs:{x:v},backend:t,attrs:{perm:k}})}return c.forEach(k=>t.disposeData(k.dataId)),v}u(Wke,"unsortedSegmentSum");const Vke={kernelName:gh,backendName:"webgpu",kernelFunc:Wke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uke=[f0e,J0e,ewe,nwe,rwe,awe,fwe,gwe,bwe,wwe,Cwe,Iwe,$we,Twe,_we,Fwe,Lwe,Wwe,Uwe,Hwe,Ywe,eSe,sSe,aSe,uSe,pSe,g0e,gSe,wSe,TSe,OSe,MSe,WSe,USe,HSe,qSe,XSe,JSe,e1e,n1e,r1e,a1e,f1e,g1e,l1e,x1e,C1e,$1e,T1e,R1e,F1e,L1e,z1e,W1e,U1e,H1e,j1e,K1e,Y1e,d0e,J1e,rCe,eCe,nCe,aCe,uCe,dCe,fCe,yCe,xCe,SCe,m0e,vCe,bSe,kCe,NCe,ECe,RCe,DCe,FCe,MCe,VCe,BCe,GCe,jCe,KCe,JCe,tve,Awe,sve,ove,pve,ave,dve,mve,Dwe,yve,xve,Sve,vve,Tve,A1e,_ve,Ave,Ove,rSe,Lve,zve,Wve,Gve,jve,Kve,Yve,Jve,oSe,eIe,nIe,rIe,iIe,h0e,uIe,hIe,mIe,bIe,SIe,vIe,kIe,NIe,EIe,AIe,FIe,LIe,zIe,WIe,UIe,HIe,Kwe,yke,wke,Cke,$ve,qIe,YIe,tke,ske,cke,lke,hke,pke,mke,Ike,D1e,$ke,Tke,_ke,ike,Oke,Lke,lwe,zke,Vke,Mve];for(const n of Uke)bw(n);function Gke(n,e=[],t=3){return new Promise((s,r)=>{const o=u(async()=>{try{const i=await n();s(i)}catch(i){if(t--,t===0||i instanceof Error&&e.includes(i.name)){r(i);return}setTimeout(o,50)}},"attempt");o()})}u(Gke,"retry");async function Hke(){try{gg()}catch{const e=o1()?"webgpu":"webgl";await BH(e),await bx(),EM("polarr.tf-backend",WN())}}u(Hke,"initializeTF");async function Nl(n,e={}){const{onProgress:t}=e;try{return await Gke(()=>KZ(n,{onProgress:t}))}catch(s){throw new Error("Failed to load model after 3 attempts",{cause:s})}}u(Nl,"loadGraphModelWithRetry");const Cp=u((n,e,t)=>Math.max(e,Math.min(t,n)),"clamp$1");function jke(n){const e=n[0],t=n[1],s=n[2],r=n[3],o=n[4],i=n[5],a=n[6],c=n[7],l=n[8],d=e*(o*l-i*c)-t*(l*r-i*a)+s*(r*c-o*a),h=o*l-i*c,p=i*a-r*l,f=r*c-o*a,m=s*c-t*l,g=e*l-s*a,y=t*a-e*c,b=t*i-s*o,x=s*r-e*i,S=e*o-t*r;return[h/d,m/d,b/d,p/d,g/d,x/d,f/d,y/d,S/d]}u(jke,"invertMat3");function Lt(n,e,t){return Math.max(e,Math.min(t,n))}u(Lt,"clamp");const Lo=u(n=>(n[2]-n[0])*(n[3]-n[1]),"areaOf"),qke=u((n,e)=>{const t=Math.max(n[0],e[0]),s=Math.max(n[1],e[1]),r=Math.min(n[2],e[2]),o=Math.min(n[3],e[3]),i=Math.max(r-t,0)*Math.max(o-s,0),a=Lo(n),c=Lo(e),l=i/(a+c-i),d=i/Math.min(a,c);return{iou:l,ioSmall:d}},"getIOUs");function Jr(n){return function(e,t,s){const r=s.value,o=`${e.constructor.name}: ${n??t}`;s.value=function(...i){const a=l1(o),c=r.apply(this,i);return c instanceof Promise?c.then(a).catch(l=>{throw cd(l),l}):a(),c}}}u(Jr,"measured");const l1=u(n=>{const e=ci({name:n});return performance.now(),()=>{performance.now(),e?.end()}},"startMeasurement");Promise.prototype.measured=function(n){const e=l1(n);return this.then(t=>(e(),t))};Function.prototype.measured=function(n){const e=this;return function(){const t=l1(n??e.name),s=e.apply(this,arguments);return t(),s}};function yb(...n){}u(yb,"logAiInfo");const Kke=[.299,.587,.114,-.299,-.587,.886,.701,-.587,-.114];jke(Kke);function Vs(n){let e=0;for(const t of n)e+=t;return e/Math.max(1,n.length)}u(Vs,"getMean");function Xke(n,e=void 0){const t=e??Vs(n);let s=0;for(const r of n)s+=(r-t)*(r-t);return Math.sqrt(s/Math.max(1,n.length))}u(Xke,"getStandardDeviation");function Yke(n,e,t=!0){const s=[],r=n.data,o=n.width;let i=e.filter(c=>c.skinCondition);i.length===0&&(i=e);for(const c of i){const l=c.faceBox,d=c.skinCondition,h=l[3]-l[1],p=l[2]-l[0],f=l[0],m=l[1];let g,y,b,x,S,w,C;const v=1;if(d)for(S=0;S<h;S+=v)for(w=0;w<p;w+=v)d[S][w]&&(C=(w+f+(S+m)*o)*4,g=r[C],y=r[C+1],b=r[C+2],x=r[C+3],s.push(g,y,b,x));else for(S=0;S<h;S+=v)for(w=0;w<p;w+=v)C=(w+f+(S+m)*o)*4,g=r[C],y=r[C+1],b=r[C+2],x=r[C+3],s.push(g,y,b,x)}const a=s.length/r.length;if(t){let c=Math.round(s.length/4/1e4);if(c=Math.min(Math.max(c,1),8),c>1)return[a,s.filter((l,d)=>Math.floor(d/4)%c===0)]}return[a,s]}u(Yke,"getMaskedPixels");function KO(n){let e=0;for(const t of n)e+=t*t;return Math.sqrt(e)}u(KO,"l2Norm");function Qke(n){const e=Math.max(KO(n),1e-6);return n.map(t=>t/e)}u(Qke,"normalize");function Jke(n){const e=Math.max(KO(n),1e-6),t=new Float32Array(n.length);for(let s=0;s<n.length;s++)t[s]=n[s]/e;return t}u(Jke,"normalizeFloatArray");function ck(n,e,t){return{x:n[0]/e,y:n[1]/t,width:(n[2]-n[0])/e,height:(n[3]-n[1])/t}}u(ck,"normalizeFaceBox");function d1(n,e,t){const{x:s,y:r,width:o,height:i}=n,a=Cp(Math.round(s*e),0,e-1),c=Cp(Math.round(a+o*e),0,e-1),l=Cp(Math.round(r*t),0,t-1),d=Cp(Math.round(l+i*t),0,t-1);return[a,l,c,d]}u(d1,"faceRectToBox");function Zke(n,e,t=1.25){const s={...n},r=.2*n.width,o=.25*n.height,i=.15*n.height;return s.x=Math.max(n.x-r,0),s.y=Math.max(n.y-o,0),s.width=Math.min(n.x+n.width+r,1)-s.x,s.height=Math.min(n.y+n.height+i,1)-s.y,e$e(s,e,t)}u(Zke,"getSlightlyPaddedFaceRect");function e$e(n,e,t){const[s,r]=e,o=s*n.width,i=r*n.height,a={...n};if(i/o<=t)return a;const c=Math.round(i/t),l=Math.max(0,c-o)/2/s;return a.x=Math.max(n.x-l,0),a.width=Math.min(n.x+n.width+l,1)-n.x,a}u(e$e,"padWidthToRatio");var t$e=Object.defineProperty,n$e=Object.getOwnPropertyDescriptor,_y=u((n,e,t,s)=>{for(var r=s>1?void 0:s?n$e(e,t):e,o=n.length-1,i;o>=0;o--)(i=n[o])&&(r=(s?i(e,t,r):i(r))||r);return s&&r&&t$e(e,t,r),r},"__decorateClass$3");class uk{static{u(this,"PriorBox")}minSizes;steps;clip;imageSize;featureMaps;variances;priors;constructor(e){this.minSizes=[[10,20],[32,64],[128,256]],this.steps=[8,16,32],this.clip=!1,this.imageSize=e,this.featureMaps=this.steps.map(t=>[Math.ceil(this.imageSize[0]/t),Math.ceil(this.imageSize[1]/t)]),this.variances=[.1,.2],this.priors=this.getPriors()}dispose(){We(this.priors)}getPriors(){const e=[];for(let t=0;t<this.featureMaps.length;t++){const s=this.featureMaps[t],r=this.minSizes[t];for(let o=0;o<s[0];o++)for(let i=0;i<s[1];i++)for(const a of r){const c=a/this.imageSize[1],l=a/this.imageSize[0],d=this.steps[t],h=[(i+.5)*d/this.imageSize[1]],p=[(o+.5)*d/this.imageSize[0]];for(const f of p)for(const m of h)e.push([m,f,c,l])}}return er(e)}decode(e){const t=this.priors.slice([0,0],[-1,2]),s=this.priors.slice([0,2],[-1,2]),r=e.slice([0,0],[-1,2]),o=e.slice([0,2],[-1,2]),i=t.add(r.mul(this.variances[0]).mul(s)),a=s.mul(os(o.mul(this.variances[1]))),c=i.sub(a.div(2)),l=a.add(c);return Wt([c,l],1)}}class Uh{static{u(this,"FaceDetection")}faceParsingSize=256;threshold;priorLandscape=null;priorPortrait=null;faceDetectLandscapeModel=null;faceDetectPortraitModel=null;faceParsingModel=null;constructor(e=.55){this.threshold=e}cleanup(){this.faceDetectLandscapeModel?.dispose(),this.faceDetectPortraitModel?.dispose(),this.faceParsingModel?.dispose(),this.priorLandscape?.dispose(),this.priorPortrait?.dispose(),this.faceDetectLandscapeModel=null,this.faceDetectPortraitModel=null,this.faceParsingModel=null,this.priorLandscape=null,this.priorPortrait=null}async loadModels(e){const t={faceDetectLandscape:0,faceDetectPortrait:0,faceParsing:0},s=u(a=>c=>{t[a]=c;const l=Object.keys(t).length,d=Object.values(t).reduce((h,p)=>h+p/l,0);e?.(d)},"createProgressCallback"),r=this.faceDetectLandscapeModel??await Nl("/models/facedet_mobilenet_640_f16/model.json",{onProgress:s("faceDetectLandscape")}),o=this.faceDetectPortraitModel??await Nl("/models/facedet_mobilenet_480_f16/model.json",{onProgress:s("faceDetectPortrait")}),i=this.faceParsingModel??await Nl("/models/tfwebmodel_skinseg_f16/model.json",{onProgress:s("faceParsing")});return this.faceDetectLandscapeModel=r,this.faceDetectPortraitModel=o,this.faceParsingModel=i,this.priorLandscape=this.priorLandscape??new uk([480,640]),this.priorPortrait=this.priorPortrait??new uk([640,480]),{faceDetectLandscapeModel:r,faceDetectPortraitModel:o,faceParsingModel:i}}async process(e,t={}){const s=t.detectSkinCondition??!0,r=t.removeBackgroundFaces??!0,o=t.maxSkinConditionFaceCount??4,i=t.faceRects,a=t.adjustedGamma??1;let c;return i?c=i.map(l=>({faceBox:d1(l,e.width,e.height),faceRect:l})):c=await this.getFaceBoundingBoxes(e,{removeBackgroundFaces:r,adjustedGamma:a}),s?await this.detectSkinCondition(e,{faceDetectionResults:c,maxSkinConditionFaceCount:o,adjustedGamma:a}):c}async detectSkinCondition(e,t){const s=await this.loadModels(),r=t.faceDetectionResults,o=e.height,i=e.width,a=[];if(o==0||i==0)return a;for(const c of r){if(a.length>=t.maxSkinConditionFaceCount){a.push(c);continue}const l=c.faceBox,d=l[2]-l[0],h=l[3]-l[1];if(h<5||d<5){const T=`[detectSkinCondition] Unusual small face box encountered: options=${JSON.stringify(t)}, imgWidth=${i}, imgHeight=${o}`,E=new Error(T);cd(E);continue}const p=await createImageBitmap(e,l[0],l[1],d,h),m=H(()=>{const T=this.createTensorForSkin(p,[this.faceParsingSize,this.faceParsingSize],t.adjustedGamma);return p.close(),s.faceParsingModel.predict(T).arraySync()})[0];if(!m)throw new Error("Skin mask could not be extracted");const g=new Array(h).fill(null).map(()=>new Array(d).fill(!1)),y=this.faceParsingSize/d,b=this.faceParsingSize/h;let x=0;for(let T=0;T<d;T++)for(let E=0;E<h;E++){const R=Math.floor(E*b),O=Math.floor(T*y);m[R][O]>.6&&(g[E][T]=!0,x+=1)}const S=Math.min(l[0],i-1-l[2])/i,w=(o-1-l[3])/o,C=Math.min(S,w),v=l[1]/o,k=x/(d*h);yb("[Face Detection]",{skinCountPercent:k,faceToEdgeW:S,faceToBottom:w,confidence:c.confidence});const $=c.confidence??1;k<=.08||k<=.18&&(C<=.15||v<.02||$<.7)||k<=.1&&(C<=.2||v<.04||$<.8)||k<=.23&&$<.65&&(C<=.3||v<.06||$<.58)||a.push({...c,skinCondition:g})}return a}async getFaceBoundingBoxes(e,t){const s=await this.loadModels(),r=e.width>=e.height,o=r?s.faceDetectLandscapeModel:s.faceDetectPortraitModel,i=r?[480,640]:[640,480],{boxes:a,scores:c,boxesCopy:l}=H(()=>{const C=this.createTensor(e,i,t.adjustedGamma),v=o.predict(C);let k=vo(v[1]);const $=vo(v[2].slice([0,0,1],[-1,-1,1]));r&&this.priorLandscape?k=this.priorLandscape.decode(k):!r&&this.priorPortrait&&(k=this.priorPortrait.decode(k));const T=Wt([k.slice([0,1],[-1,1]),k.slice([0,0],[-1,1]),k.slice([0,3],[-1,1]),k.slice([0,2],[-1,1])],1);return{boxes:k,scores:$,boxesCopy:T}}),d=await Un.nonMaxSuppressionAsync(l,c,40,.4,this.threshold),{originalBoxList:h,probabilities:p}=H(()=>{const C=d.arraySync(),v=sa(a,C).arraySync(),k=sa(c,C).arraySync();return{originalBoxList:v,probabilities:k}});if(We([a,c,l]),We(d),h.length==0)return[];const f=h.map(C=>{const v=C;return v[0]=Lt(Math.round(v[0]*e.width),0,e.width-1),v[2]=Lt(Math.round(v[2]*e.width),0,e.width-1),v[1]=Lt(Math.round(v[1]*e.height),0,e.height-1),v[3]=Lt(Math.round(v[3]*e.height),0,e.height-1),v}),m=Math.max(...p.flatMap(C=>C));let g=f.map((C,v)=>[C,p[v]||0]);yb("[Face Detection] initial boxList",[...g]),g=g.filter(C=>{const[v,k]=C,[$,T]=[v[2]-v[0],v[3]-v[1]];return Lo(v)>25&&!(k<.96&&$>T*1.2)});let y=g.map((C,v)=>[this.extendBox([...C[0]],e.width,e.height),C[1],v]);y.sort((C,v)=>v[1]-C[1]);const b=[];for(let C=0;C<y.length;C++){if(b.includes(C))continue;const v=y[C]?.[0];for(let k=C+1;k<y.length;k++){const $=y[k]?.[0],{iou:T,ioSmall:E}=qke(v,$);(T>.5||E>.65)&&b.push(k)}}y=y.filter((C,v)=>!b.includes(v));const x=this.getMajorFaces(y,[e.width,e.height],m),S=y.length;if(y=y.filter(C=>{const[v,k]=C,$=Lo(v),T=$/(e.height*e.width);if(T>.05&&k<.8||T>.03&&k<.7)return!1;let E=!1,R=1;if(x){const A=(v[1]+v[3])/2,[G,V]=x.yRange,[q,Y]=x.areaRange;E=$>=q&&$<=Y&&A>=G&&A<=V,$<q&&(R=$/q),$>Y&&(R=$/Y)}const{atEdge:O,nonCenter:L,atStrictCenter:z,atBottom:W}=this.getFaceLocation(v,[e.width,e.height]);return!(R>4||R<.2||k<.9&&T>.08&&O&&L||!E&&(k<.7&&x&&(!z||x.centeredCount>0)||k<.9&&(W||R>2||R<.3)||k<.85&&(T>.04||O&&L)||k<.8&&T>.01&&(O||L&&k<.7)||k<.75&&m<.8&&T>.0015&&L||k<.7&&T<7e-4||k<.7&&S===1&&!z))}),t.removeBackgroundFaces===!0&&y.length>1){const C=x?.majorArea??0;y=y.filter(v=>{const[k,$]=v,T=Lo(k);return!(T<C/2.5&&$<m-.03||T<C/5&&$<.98&&$<m-.005)})}return y.sort((C,v)=>Lo(v[0])-Lo(C[0])),yb("[Face Detection] final boxList",[...y]),y.map(C=>({faceBox:C[0],faceRect:ck(C[0],e.width,e.height),unPaddedRect:ck(g[C[2]]?.[0]??C[0],e.width,e.height),confidence:C[1]}))}getFaceLocation(e,t){const[s,r]=t,o=(e[0]+e[2])/2,i=Math.min(e[0],s-1-e[2]),a=r-1-e[3],c=Math.min(a/r,i/s),l=e[1]/r,d=1-(e[1]+e[3])/2/r,h=c<.1||l<.02||d<.32,p=d<.25,f=Math.abs(o/s-.5)>.2||d<.3||l<.05,m=Math.abs(o/s-.5)<.1&&d>.4&&d<.85&&!h;return{atEdge:h,nonCenter:f,atStrictCenter:m,atBottom:p}}getMajorFaces(e,t,s){if(s<.93)return null;const r=Math.min(s-.01,.975);let o=e.filter(v=>v[1]>=r);const[i,a]=t;if(o=o.filter(v=>{const k=v[0],$=Math.min(k[0],i-1-k[2])/i,T=1-(k[1]+k[3])/2/a;return $>.1&&T>.25}),o.length===0)return null;const c=o.map(v=>(v[0][1]+v[0][3])/2),l=Xke(c),d=o.map(v=>v[0][3]-v[0][1]),h=Vs(d),p=Math.min(...c),f=Math.max(...c),m=Math.max(l,Math.min(h,a/5)),g=[p-m,f+m],y=o.map(v=>Lo(v[0]));y.sort((v,k)=>v-k);const b=y[0]??0,x=y[y.length-1]??0,S=Vs(y.slice(Math.max(0,y.length-3))),w=[.6*b,1.4*x],C=o.filter(v=>this.getFaceLocation(v[0],t).nonCenter===!1);return{yRange:g,areaRange:w,majorArea:S,centeredCount:C.length}}extendBox(e,t,s,r=1.3,o=.4){const i=e[2]-e[0],a=e[3]-e[1],c=Math.max(a,i)*r,l=(c-i)/2,d=(c-a)/2;return e[0]=Math.floor(Math.max(0,e[0]-l)),e[2]=Math.floor(Math.min(t-1,e[2]+l)),e[1]=Math.floor(Math.max(0,e[1]-d*(1+o))),e[3]=Math.floor(Math.min(s-1,e[3]+d*(1-o))),e}createTensor(e,t,s=1){let r=Un.resizeBilinear(If(e),t).expandDims();const[o,i,a]=es(r,3,3);return r=Wt([a,i,o],3),s!=1&&(r=this.gammaCorrection(r,s)),r=r.sub([104,117,123]),r}createTensorForSkin(e,t,s=1){let r=Un.resizeBilinear(If(e),t).expandDims();return s!=1&&(r=this.gammaCorrection(r,s)),r=r.div(127.5).sub(1).transpose([0,3,1,2]),r}gammaCorrection(e,t){return H(()=>e.div(255).pow(t).mul(255))}}_y([Jr()],Uh.prototype,"loadModels",1);_y([Jr()],Uh.prototype,"process",1);_y([Jr()],Uh.prototype,"detectSkinCondition",1);_y([Jr()],Uh.prototype,"getFaceBoundingBoxes",1);function s$e(n,e){let t=0,s=0,r=[];const o=e.length;if(e.length){const i=Yke(n,e,!0);s=i[0];const a=i[1],c=YO(a),l=QO(c);t=Vs(c),r=JO(l)}return{facePercentiles:r,facePercent:s,faceLum:t,faceCount:o}}u(s$e,"getFaceAreaLuminanceStatistics");function XO(n,e=!1){const{avgLum:t,faceLum:s,percentiles:r,facePercentiles:o,facePercent:i,shadowsMean:a,clippingPercent:c}=n,l=3;let d=[.131,.26,.495,.699,.846,.905,.964,.503,.399,.543,.665,.74,.806,.842,.893,.648],h=[.09,.128,.156,.131,.087,.063,.035,.112,.101,.093,.079,.068,.064,.064,.065,.068];const p=[.196,.331,.518,.707,.85,.905,.953,.536],f=[.159,.206,.201,.155,.093,.066,.039,.154],m=o.length>0,g=r[r.length-1]??0,y=r[r.length-2]??0,b=r[r.length-3]??0,x=r[3]??0,S=r[2]??0,w=o[o.length-1]??0,C=o[o.length-2]??0,v=o[o.length-3]??0;let k=0,$=0,T=0,E=0;if(m){k=.8,i<.01&&(k=.6+.2*i/.01);const De=Wa(o.concat(s),d.slice(8),h.slice(8),.02,[-1]),je=Wa(o.concat(s),d.slice(8),h.slice(8),.02,[5,6]);$=-Math.min(je,De)*l,T=Math.max(.95-C,.9-v)*l,$=Math.min($,T)}const R=1-k;m||(d=p,h=f);const O=Wa(r.concat(t),d.slice(0,8),h.slice(0,8));let L=0;const z=Wa(r.concat(t),d.slice(0,8),h.slice(0,8),.15,[4,5,6]),W=Wa(r.concat(t),d.slice(0,8),h.slice(0,8),.15,[2,3,4,5,6]);L=-z*l,E=-O*l;const A=-W*l;L<-.2&&(L=Math.max(L,A));let G=(1.02-g)*l;const V=(1.02-.06-y)*l,q=(1.02-.12-b)*l,Y=(.32-S)*l;if(G=Math.min(G,V,q),G=Math.max(G,Y),!m){E=E*(1-.4)+L*.4;const je=(.98-g)*l,Ut=(.93-y)*l;if(G=je<.1&&Ut>je?.75*je+.25*Ut:je,G=Math.max(G,Y),c>0){const At=Math.max(0,(.95-g)*l),fn=Math.max(0,(.55-x)*l),Ls=Math.max(0,(.32-S)*l);G=Math.min(G,Math.max(At,fn,Ls))}}let Q=(Math.max(E,-.2)+G)*.6+.3;E=Math.min(E,G);let ne=E;if(m){let De=$-.4,je=$+.4;i>.007&&($<0?De=Math.max($-.4,Math.min($*5,-.25)):je=Math.min($+.4,Math.max(.25,$*5)));const Ut=.003,At=.001;if(i<Ut){const fn=(Ut-i)/Ut;if(De-=.4*fn,je+=.4*fn,Q-=.4*fn,c>0&&(Q*=Math.min(1,(1-fn)*.5+.5)),i<At){const Ls=i/At*.6+.4;$*=Ls,Q*=Ls}}ne=Math.min(Math.max(E,De),je)}let X=ne*R+$*k;m||g<.97&&c===0&&X<-.1&&(X=-.1+(X+.1)*.5),c>0&&(Q*=.7),e&&Q<$&&(Q=Q*.2+$*.8),X=Math.min(X,Q);let Z=Math.min(.97-g,0)+Math.min(.93-y,0)+Math.min(.86-b,0);const se=Math.min((d[2]??0+(h[2]??0))-(r[2]??0),0)+Math.min((d[3]??0+(h[3]??0))-(r[3]??0),0);let de=.07,me=.07;y>.82&&(de=g-y),b>.78&&(me=y-b);const Ie=Math.max(Math.min(de-.07,0)+Math.min(me-.07,0),-.1)*1.4;if(Z=Math.min(Z,se,Ie),m){Z=Math.max(Z,-.12)*(.2+2*R);const De=Math.min(.8-v,0)+Math.min(.84-C,0)+Math.min(.89-w,0),je=8,Ut=Math.min((d[je+2]??0+(h[je+2]??0))-(o[2]??0),0)+Math.min((d[je+3]??0+(h[je+3]??0))-(o[3]??0),0);let At=.07,fn=.07;C>.82&&(At=w-C),v>.78&&(fn=C-v);const Ls=Math.max(Math.min(At-.05,0)+Math.min(fn-.05,0),-.08)*1.5;Z+=Math.min(De,Ut,Ls)}const Ce=c>0?-25:-35;Z=Math.max(Z*200,Ce);let ke=Z*.3,Ae=0;c>0&&(Ae=-Math.min(10+c*100*10,50),ke=Lt(ke+Ae,-35,0),Z+=Ae);let Be=Math.max(.1-a,0)*150,ct=Lt(Be*1.5,0,20);if(m){ct+=Math.max(.1-(o[0]??0),0)*200;const De=Math.max(.2-(o[1]??0),0)*150;ct=Lt(ct+De,0,40),Be+=De}if(m){ke*=.7;let je=-Wa(o.concat(s),d.slice(8),h.slice(8),.02,[4,5,6])*l;je=Math.max($,je,L*.7);const Ut=Math.min(45+1e3*i,55);if(je>X){let At=1;X>.1?At=(je-X)/X:je<-.1&&(At=-(je-X)/je);const fn=(je-X)*Ut*Math.min(At,1);Be+=fn}}else if(L>X){const De=e?100:50,je=(L-X)*De;Be+=je}const st=e?80:45;if(Be>st&&m){const De=m?1:0;X+=(Be-st)/100*De}const Xe=m?1:.95,rt=(Xe-g)*l,mt=(Xe-.05-y)*l,ft=(Xe-.1-b)*l;let Cn=Math.min(rt,mt,ft);if(m&&(Cn=Math.min(Cn,$)),X>Cn){const De=Math.min((X-Cn)*100,60);Z=Math.min(Z-De*.2,Math.max(-De*1.6,-70))}else X<0&&Z!==0&&(Z-=Math.max(X,-.5)*30);if(m&&s>.55){const De=Math.max(1-(s-.55)*1.6,.4);Z=Z*De,ke*=De}const $e=e?-80:-60;if(Z<$e&&X>G){const De=m?0:1,je=(Z-$e)/200*De;X+=Lt(je,-.4,0)}if(!m&&Z<-30&&X>Z/100+.3&&c===0){const De=(Z+30)*.75;X+=De/100,Z-=De}if(Z=Math.max($e,Math.min(Z,0)),Be=Math.max(0,Math.min(Be,st)),s<.65&&X<0&&c>.008){const De=Math.max(.7-r[2],.53-r[1],.36-r[0],-.25*X),je=Math.max(r[3]*.3+r[4]*.7-.83,-.2*X);let Ut=Math.min(De,je*.7+De*.3),At=4*Lt((.85-r[0]-r[1])/.2,0,1);At=Math.max(At,Math.min(4,(.78-t)*16)),m&&(Ut=.6-o[1],At=2.5);const fn=Math.max(Ut,0)*At*(-Z-ke-25)/70,Ls=0,nl=Math.min(Math.max((.78-t)*2,-X),Math.max(.25,-1.2*X));X+=Lt(fn,Ls,nl)}let Vt=-1;i>=.02&&(s<.4||w<.65)&&(Vt=Math.max(.4-s,.65-w)*2);const Te=e?-1.5:-1,pt=e?1.9:1.3;X=Math.max(X,Vt),X=Math.max(Te,Math.min(X,pt));const Me=r$e(Be,Z,X,s>0);return{exposureDelta:Number(X.toFixed(2)),highlightsDelta:Math.round(Z),shadowsDelta:Math.round(Be),whitesDelta:Math.round(ke),blacksDelta:Math.round(ct),contrastDelta:Math.max(0,Math.round(Be*.8)),saturationDelta:Math.round(Me)}}u(XO,"getAutoExposure");function r$e(n,e,t,s){const r=Math.max(0,n-20-e-20),o=s?24:10;let i=s?1.2:.6;return t>.5&&(i*=Math.max(0,1.5-t)),-Math.min(r*i/6,o)}u(r$e,"getSaturationDelta");function YO(n,e=4,t=255){const s=new Array(n.length/e);for(let r=0;r<s.length;r++){const o=r*e,i=n[o]/t,a=n[o+1]/t,c=n[o+2]/t,l=Math.min(i,a,c),d=Math.max(i,a,c);s[r]=(d+l)/2}return s}u(YO,"getLightness");function QO(n,e=256){const t=new Array(e).fill(0);for(const s of n){const r=Lt(Math.floor(s*e),0,e-1);t[r]=(t[r]??0)+1}return t}u(QO,"computeHistogram");function o$e(n){const e=n.length,t=new Array(e).fill(0);let s=0;for(let a=0;a<e;a++)s+=n[a],t[a]=s;let r=0,o=0;const i=.25*t[t.length-1];for(let a=0;a<e;a++)if(r+=n[a]*(a+.5)/e,t[a]>=i){o=r/t[a];break}return o}u(o$e,"getShadowsMean");function JO(n,e=[5,20,50,75,90,95,99]){const t=n.length,s=0,r=1,o=(r-s)/t,i=new Array(t).fill(0);let a=0;for(let l=0;l<t;l++)a+=n[l],i[l]=a;const c=[];for(const l of e){const d=l/100*i[i.length-1];let h=!0;for(let p=0;p<i.length;p++)if(i[p]>=d){c.push(s+o*p),h=!1;break}h&&c.push(r)}return c}u(JO,"computePercentiles");function Wa(n,e,t,s=.02,r=[-1]){let o=-1,i=1,a=0;for(let l=0;l<n.length;l++){const d=n[l]??0,h=e[l]??0;let p=t[l]??0;if(r.includes(a)){a+=1;continue}p=Math.max(p-s,0);const f=i$e(d,h,p);o=Math.max(f,o),i=Math.min(f,i),a+=1}let c;return o*i>=0?c=Math.abs(o)>Math.abs(i)?o:i:c=o+i,c}u(Wa,"getPercentileDifference");function i$e(n,e,t){return n>e+t?n-e-t:n<e-t?n-e+t:0}u(i$e,"diffWithMargin");function bb(n,e=0){if(!n)return 1;const t={...n,faceCount:0,facePercentiles:[],faceLum:0,facePercent:0},{exposureDelta:s,shadowsDelta:r}=XO(t,!0),o=(.2-n.shadowsMean*.5-(n.percentiles[0]??0)*.5)*2.5;let i=s*1.8/3+r/100;i<0&&(i=Math.min(0,i+.3));const a=(Math.max(i,o)+i)/2-e/4*1.8,c=Lt(1-a,.4,1.4);return Math.abs(c-1)>.25?c:1}u(bb,"getAdjustedGamma");function a$e(n){const e=n.data,t=YO(e),s=QO(t),r=Vs(t),o=o$e(s);let i=0;for(let l=251;l<=255;l++)i+=s[l]??0;const a=i/t.length,c=JO(s);return{avgLum:r,shadowsMean:o,clippingPercent:a,percentiles:c,lightingScore:u$e(s,t.length)}}u(a$e,"getLuminanceScoreStatistics");function c$e(n){const e=XO(n,!0),t=n.clippingPercent,s=Math.min(t*100*5,100),r=(1.5-Math.max(Math.abs(e.exposureDelta)-.15,0))/1.5,o=(Math.abs(e.shadowsDelta)*1.2+Math.abs(e.blacksDelta))/2;let i=(Math.abs(e.highlightsDelta)*1.2+Math.abs(e.whitesDelta))/2;i=Math.max(i,s);const a=(50-Math.max(o-10,0))/100*.4+(60-Math.max(i-10,0))/100*.6;let c=-1;if(n.faceLum>0){const h=(n.facePercentiles[3]??0)*.333+(n.facePercentiles[4]??0)*.333+(n.facePercentiles[5]??0)*.333,p=Math.max(0,50-Math.max(h-.7,0)*200)/50;c=Math.min(p,1-Math.max(.3-n.faceLum,0)*4),c=Math.max(c,0)}let l=0;c>=0?l=Math.max(r*1.2+a*1.8+c*2,0):l=Math.max(r*2.5+a*3.5-.7,0);const d={exposure:e.exposureDelta,highlights:e.highlightsDelta/100,shadows:e.shadowsDelta/100,whites:e.whitesDelta/100,blacks:e.blacksDelta/100,contrast:e.contrastDelta/100,saturation:e.saturationDelta/100};return{score:l,autoParams:d}}u(c$e,"getExposureScoreFromAuto");function u$e(n,e){let t=0,s=-1,r=-1,o=-1,i=-1,a=-1,c=-1;for(let x=0;x<n.length;x++)t+=n[x]??0,s===-1&&t>=.01*e&&(s=x),r===-1&&t>=.05*e&&(r=x),o===-1&&t>=.15*e&&(o=x),i===-1&&t>=.85*e&&(i=x),a===-1&&t>=.95*e&&(a=x),c===-1&&t>=.99*e&&(c=x);const l=n.length,d=.08,h=.08;let p=Math.min(d,(o-s)/l)/d,f=Math.min(h,(c-i)/l)/h;a<225&&(f=Math.max(.8,f)),p<.8&&r>20&&(p=Math.min(.8,p+(r-20)/20)),f=Math.max(.1,f),p=Math.max(.1,p);let m=Math.abs(a-r)/l;m=.7*m+.3*(Math.abs(c-s)/l);const g=p*f*m;let y=.5;if(g>.4&&f>.95){let x=0,S=0;for(let w=25;w<230;w++)x+=w*(n[w]??0),S+=n[w]??0;y=x/S/255}return g*6.5+(Math.min(Math.max(y,.4),.6)-.5)*10}u(u$e,"getExposureScore");function l$e(n,e){return e>=0&&e<.35?n*=Math.max(0,(e-.05)/.3):e>.45&&e<=.64&&n<=3?n+=(3.5-n)*e:e>.64&&e<.8?n*=(1-e)*2.8:e>=.8&&(n*=1-e),e>.25&&e<.5&&(n=Math.max(n,Lt((e-.18)*15,1,3.5))),n}u(l$e,"adjustExposureScoreWithFace");function ZO(n,e){const[t,s]=n,[r,o]=e,i=Math.min(r/t,o/s);return[Math.ceil(t*i),Math.ceil(s*i)]}u(ZO,"fitToSize");let Va=null;function eF(n,e,t,s="low"){Va=Va??new OffscreenCanvas(e,t),Va.width=e,Va.height=t;const r=Va.getContext("2d");if(r&&s!=="low"&&(r.imageSmoothingEnabled=!0,r.imageSmoothingQuality=s),!r)throw new Error("Could not create canvas context");return r.drawImage(n,0,0,e,t),Va.transferToImageBitmap()}u(eF,"resizeImageBitmapToBitmap");async function d$e(n,e){const t=d1(e,n.width,n.height),s=t[2]-t[0],r=t[3]-t[1];return createImageBitmap(n,t[0],t[1],s,r)}u(d$e,"cropBitmap");let Ii=null,ll;function lk(n){if((!Ii||!ll)&&(Ii=new OffscreenCanvas(1,1),ll=Ii.getContext("2d")),!ll)throw new Error("Could not create canvas context");return Ii.width=n.width,Ii.height=n.height,ll.drawImage(n,0,0),ll.getImageData(0,0,Ii.width,Ii.height)}u(lk,"bitmapToImageData");var h$e=Object.defineProperty,p$e=Object.getOwnPropertyDescriptor,tF=u((n,e,t,s)=>{for(var r=s>1?void 0:s?p$e(e,t):e,o=n.length-1,i;o>=0;o--)(i=n[o])&&(r=(s?i(e,t,r):i(r))||r);return s&&r&&h$e(e,t,r),r},"__decorateClass$2"),bl=(n=>(n[n.closed=0]="closed",n[n.barelyOpen=1]="barelyOpen",n[n.halfOpen=2]="halfOpen",n[n.fullyOpen=3]="fullyOpen",n[n.midBlink=4]="midBlink",n[n.posingLookDown=5]="posingLookDown",n[n.posingSmile=6]="posingSmile",n[n.posingBeClose=7]="posingBeClose",n[n.sunglasses=8]="sunglasses",n[n.occluded=9]="occluded",n))(bl||{});const f$e={0:1,4:1,1:1,2:2,3:5,5:3.5,6:4.5,7:4,8:3,9:2.2};class h1{static{u(this,"FaceScoring")}model=null;cleanup(){this.model?.dispose(),this.model=null}async loadModel(e){return this.model?this.model:(this.model=await Nl("/models/face_scoring/model.json",{onProgress:e}),this.model)}async process(e,t){const{rects:s,confidences:r,adjustedGamma:o}=t,i=[],a=[e.width,e.height],c=this.getGammaCorrectedTensor(e,o);for(let l=0;l<s.length;l++)i.push(await this.getFaceScores(c,s[l],r[l]??1,a));return We(c),i}async getFaceScores(e,t,s,r){const o=await this.loadModel();return H(()=>{const i=this.preprocess(e,[224,224],t),a=o.predict(i),c=a[2].dataSync();let l=a[1].dataSync()[0];l=(l-.2)*2.15;const d=(t.width*r[0]+t.height*r[1])/2;d<60&&(l=l*((60-Math.max(d,30))/60*.4+1));const h=Lt(Math.round(l*10)/10,0,10),{eyeStatus:p,eyeScore:f}=this.getEyeStatusAndScore(c,{focusScoreFloat:h,size:d,confidence:s});let m=a[0].dataSync()[0];m=(m-.4)*1.15;const g=Lt(m*.5+f*.5,.5,5.5);return{eyeStatus:p,eyeScore:f,expressionScore:g,focusScoreFloat:h}})}getEyeStatusAndScore(e,t){const{focusScoreFloat:s,size:r,confidence:o}=t,i=Array.from(e),a=[0,4,1,2,3,5,6,7,8,9],l=i.map((x,S)=>({index:S,prob:x})).sort((x,S)=>S.prob-x.prob).map(x=>x.index).slice(0,3);let d=0,h=0;l.forEach(x=>{const S=a[x],w=f$e[S]||0,C=i[x];d+=w*C,h+=C}),d/=Math.max(h,.9);const p=l[0],f=i[p],m=l[1],g=i[m];let y=a[p];const b=a[m];if(y!==9&&f<.5&&o<.75&&(i[i.length-1]??0)>.2)return y=9,{eyeStatus:y,eyeScore:d};if(f-g<.1&&((y===3||y===6)&&b!==9&&b!==8?(y===3&&b!==6||y===6&&b!==3)&&(y=b):y===8&&(y=b)),(y===3||y===6)&&f<.65){const x=(i[0]??0)+(i[1]??0)+(i[2]??0)+(i[3]??0);if(f-x<.15){const w=i.slice(0,4).map((C,v)=>({index:v,prob:C})).sort((C,v)=>v.prob-C.prob).map(C=>C.index)[0];return y=a[w],{eyeStatus:y,eyeScore:d}}}return y===9&&f<.7&&b!==8&&(f-g<.2&&g>.2&&o>=.9||(o>=.9&&g>.2||o>.97&&g>.1)&&s>=2.5&&r<=65)&&(y=b),{eyeStatus:y,eyeScore:d}}preprocess(e,t,s){return H(()=>{if(s){const r=[s.y,s.x,s.y+s.height,s.x+s.width],o=e.expandDims();return Un.cropAndResize(o,[r],[0],t).div(127.5).sub(1)}else return Un.resizeBilinear(e,t).expandDims().div(127.5).sub(1)})}getGammaCorrectedTensor(e,t){return H(()=>{const s=If(e);return t!=1?s.div(255).pow(ve(t)).mul(255):s})}}tF([Jr()],h1.prototype,"loadModel",1);tF([Jr()],h1.prototype,"getFaceScores",1);var m$e=Object.defineProperty,g$e=Object.getOwnPropertyDescriptor,y$e=u((n,e,t,s)=>{for(var r=s>1?void 0:s?g$e(e,t):e,o=n.length-1,i;o>=0;o--)(i=n[o])&&(r=(s?i(e,t,r):i(r))||r);return s&&r&&m$e(e,t,r),r},"__decorateClass$1");class nF{static{u(this,"SceneDetection")}inputSize=224;sceneClasses;allThreshold;labelThreshold;model=null;constructor(){this.sceneClasses=["City","Text","Flower","Food","Indoor","Landscape","Night","Portrait","Pet","Snow","Sunset"],this.allThreshold=.5,this.labelThreshold={Text:.8,Flower:.75,Food:.8,Portrait:.4,Pet:.75,Landscape:.3,Indoor:.4,Sunset:.4}}cleanup(){this.model?.dispose(),this.model=null}async loadModel(e){return this.model?this.model:(this.model=await Nl("/models/scene_cluster_f16/model.json",{onProgress:e}),this.model)}async process(e){const t=await this.loadModel();return H(()=>{const r=this.createTensor(e,[this.inputSize,this.inputSize]),o=t.predict(r),i=o[0].dataSync(),a=o[1].dataSync(),c=o[2].dataSync(),l=this.getLabel(c);return{sceneFeature:Qke(Array.from(a)),sceneLabel:l,clusterFeature:Jke(i)}})}getLabel(e){const t=Array.from(e).map((s,r)=>[s,r]);t.sort((s,r)=>r[0]-s[0]);for(const[s,r]of t){const o=this.sceneClasses[r];if(o==null)continue;const i=this.labelThreshold[o]?this.labelThreshold[o]:this.allThreshold;if(s>(i||0))return o}return"Default"}createTensor(e,t){return Un.resizeBilinear(If(e),t).expandDims().div(127.5).sub(1)}}y$e([Jr()],nF.prototype,"loadModel",1);var b$e=Object.defineProperty,x$e=Object.getOwnPropertyDescriptor,p1=u((n,e,t,s)=>{for(var r=s>1?void 0:s?x$e(e,t):e,o=n.length-1,i;o>=0;o--)(i=n[o])&&(r=(s?i(e,t,r):i(r))||r);return s&&r&&b$e(e,t,r),r},"__decorateClass");class Ry extends YG{static{u(this,"CullerWorker")}faceDetection;faceScoringModel;sceneDetectionModel;constructor(){super(),Hke().catch(e=>cd(e)),this.faceDetection=new Uh,this.faceScoringModel=new h1,this.sceneDetectionModel=new nF}cleanupModels(){this.faceDetection.cleanup(),this.faceScoringModel.cleanup(),this.sceneDetectionModel.cleanup()}async detectFaceRects(e,t){return await this.faceDetection.process(e,{...t,detectSkinCondition:!1})}getLuminanceScoreStats(e){const t=dk(e,[160,160]),s=lk(t),r=a$e(s);return t.close(),r}async extractFaceAndCluster(e,t){const s=this.getLuminanceScoreStats(t),r=bb(s);s.adjustedGamma=r;let o=t;if(t.width>1800||t.height>1800){const[c,l]=ZO([t.width,t.height],[1620,1620]);o=eF(t,c,l)}const i=await this.sceneDetectionModel.process(o),a=await this.detectFaceRects(o,{removeBackgroundFaces:!0,adjustedGamma:r});return(t.width>1800||t.height>1800)&&o.close(),{photoId:e,faceInfo:a.map(c=>({faceRect:c.faceRect,unPaddedRect:c.unPaddedRect??c.faceRect,confidence:c.confidence})),scene:{sceneFeature:i.sceneFeature,sceneLabel:i.sceneLabel},sceneClusterFeature:i.clusterFeature,luminanceScoreStats:s}}async computeScoreForNoFacePhoto(e,t){const s=t.luminanceScoreStats??this.getLuminanceScoreStats(e),{lightingScore:r,autoParams:o}=this.getLightingScoreAndParams(s,void 0,[]),i=await d$e(e,{x:.25,y:.4,width:.5,height:.5}),a=this.getLuminanceScoreStats(i),{lightingScore:c,autoParams:l}=this.getLightingScoreAndParams(a,void 0,[]),d=c*.5+r*.5,h={...l};h.exposure=o.exposure*.2+l.exposure*.8,h.shadows=o.shadows*.2+l.shadows*.8,h.contrast=o.contrast*.2+l.contrast*.8,h.blacks=o.blacks*.2+l.blacks*.8,h.whites=o.whites*.8+l.whites*.2,h.highlights=o.highlights*.8+l.highlights*.2,h.saturation=o.saturation*.5+l.saturation*.5,s.autoLightParams=h;const p={x:.2,y:.2,width:.6,height:.6},f=await this.faceScoringModel.process(e,{rects:[p],confidences:[0],adjustedGamma:s.adjustedGamma??bb(s)}),m=f[0]?Math.min(f[0].focusScoreFloat+.5,10):0,g=this.getScoreItem(m,void 0,d);return{...t,luminanceScoreStats:s,faceInfo:[],overallFocusScore:Math.round(m),overallEyeScore:0,scoreItem:g}}async extractCullingData(e,t,s){await bx();const{existedCullingInfo:r,extractScores:o}=s;if(r&&!o)return r;const i=r??await this.extractFaceAndCluster(e,t);if(!o)return Ua(i,i.sceneClusterFeature?[i.sceneClusterFeature.buffer]:[]);if(i.scoreItem!=null)return Ua(i,i.sceneClusterFeature?[i.sceneClusterFeature.buffer]:[]);let a=t;if((t.width>1800||t.height>1800)&&(a=dk(t,[1620,1620])),i.faceInfo.length===0){const A=await this.computeScoreForNoFacePhoto(a,i);return Ua(A,A.sceneClusterFeature?[A.sceneClusterFeature.buffer]:[])}const c=i.faceInfo.map(A=>A.faceRect),l=i.faceInfo.map(A=>A.unPaddedRect??A.faceRect),d=i.faceInfo.map(A=>A.confidence),h=l.map(A=>Zke(A,[t.width,t.height])),p=i.luminanceScoreStats??this.getLuminanceScoreStats(t);let f=p.adjustedGamma??bb(p);f<1&&(f=Math.max(f*.75,.4));const m=await this.faceScoringModel.process(t,{rects:h,confidences:d,adjustedGamma:f});let g=m.filter((A,G)=>d[G]??!1);g.length===0&&(g=m.filter((A,G)=>d[G]??!1)),g.length===0&&(g=m);const y=g.map((A,G)=>A.eyeStatus!==bl.occluded||A.focusScoreFloat>2.5||(d[G]??0)>.97?A.focusScoreFloat:-1).filter(A=>A!==-1);let b=[],x=0;y.length>0&&(x=Math.max(...y),b=m.map(G=>G.focusScoreFloat).map((G,V)=>G>=x-1.5?V:-1).filter(G=>G!==-1));let S=[];if(b.length>0){const G=b.map(q=>h[q]).map(q=>q.width*q.height),V=Vs(G);S=m.map((q,Y)=>this.isMainFace({score:q.focusScoreFloat,rect:h[Y],maxScore:x,mainArea:V,confidence:d[Y]??1,eyeStatus:q.eyeStatus})?Y:-1).filter(q=>q!==-1)}if(S.length===0){const A=await this.computeScoreForNoFacePhoto(a,i);return Ua(A,A.sceneClusterFeature?[A.sceneClusterFeature.buffer]:[])}const w=S.map(A=>l[A]),v=S.map(A=>m[A]).map(A=>A?.focusScoreFloat??0),k=this.getOverallFocusScore(v),$=[];for(const A of S){const G=c[A],V=m[A]?.eyeStatus,q=m[A]?.expressionScore;if(V!=null&&G){const Y=m[A]?.focusScoreFloat??0,Q={faceRect:G,unPaddedRect:l[A]??G,eyeScore:V,focusScore:Y,expressionScore:q,confidence:d[A]};$.push(Q)}}const{overallEyeScore:T,overallFaceScore:E}=this.getOverallFaceScore($,x),R=lk(a),{lightingScore:O,autoParams:L}=this.getLightingScoreAndParams(p,R,w);p.autoLightParams=L;const z=this.getScoreItem(k,E,O);$.sort((A,G)=>{const V=(G.focusScore??0)-(A.focusScore??0);return V===0?G.faceRect.width*G.faceRect.height-A.faceRect.width*A.faceRect.height:V}),$.forEach(A=>{A.focusScore=Math.round(A.focusScore??0)}),(t.width>1800||t.height>1800)&&a.close();const W={...i,luminanceScoreStats:p,faceInfo:$,overallFocusScore:k,overallEyeScore:T,scoreItem:z};return Ua(W,W.sceneClusterFeature?[W.sceneClusterFeature.buffer]:[])}isMainFace(e){const{score:t,rect:s,maxScore:r,mainArea:o,confidence:i,eyeStatus:a}=e,c=s.width*s.height;let l=c>.0025?.88:.8;if(c>.1?l=.96:c>.006&&(l=.94),i<l&&a===bl.occluded||t<=1.3&&t<r-1||t<1.8&&(t<r-2||i<.8&&a===bl.occluded)||t<=2.5&&t<r-3||i<l-.1&&t<r-3)return!1;if(t>4.3)return!0;if(t<=4.3&&t<=r-2){const d=c/o,h=d>=.8&&d<=1.3;if(!(d>=.65&&d<=1.7)&&o>.005||!h&&t<=r-3)return!1}return!0}getOverallFocusScore(e){const t=Math.max(...e),s=e.filter(i=>i>=t-2),r=Vs(s),o=Vs(e);return t*.45+r*.45+o*.1}getOverallFaceScore(e,t){const s=Math.min(t-2,5),r=e.filter(l=>l.eyeScore!=bl.occluded&&(l.focusScore??0)>=s);let o=0,i=0;const a=Vs(e.map(l=>l.expressionScore??2)),c=Vs(e.map(l=>l.eyeScore??0));if(r.length===0)i=a,o=c;else{const l=Vs(r.map(f=>f.expressionScore??2)),d=Math.min(...r.map(f=>f.expressionScore??2));i=l*.5+d*.4+a*.1;const h=Vs(r.map(f=>f.eyeScore??0)),p=Math.min(...r.map(f=>f.eyeScore??0));o=h*.5+p*.4+c*.1}return{overallEyeScore:Lt(o,.5,5.5),overallFaceScore:Lt(i,.5,5.5)}}getLightingScoreAndParams(e,t,s){let r=e.lightingScore,o={...e,faceCount:0,facePercentiles:[],faceLum:0,facePercent:0},i=0;if(s.length>0&&t){const h=s.slice(0,4).map(f=>({x:f.x+f.width*.15,y:f.y+f.height*.15,width:f.width*.7,height:f.height*.7})).map(f=>({faceRect:f,faceBox:d1(f,t.width,t.height)})),p=s$e(t,h);i=p.faceLum,r=l$e(r,i),o={...e,...p}}const{score:a,autoParams:c}=c$e(o);r=.3*Math.min(r,a+1)+.7*a;const l=(o.facePercentiles[3]??0)*.333+(o.facePercentiles[4]??0)*.333+(o.facePercentiles[5]??0)*.333;if(i>.35&&i<.62&&l<.7&&l>.45){const d=.2*(1-Math.max(l-.65,0)/.1),h=.2*(1-(.05-Lt(i-.35,0,.05))/.05),p=Math.min(d,h);r=Math.max((1-p)*r+p*5,r)}return{lightingScore:r,autoParams:c}}getScoreItem(e,t,s){const r=(e+1.2)/2;let o=0;return t==null?o=.6*Lt(r,.9,5.1)+.4*Lt(s,.9,5.1):o=.35*Lt(r,.9,5.1)+.15*Lt(s,.9,5.1)+.5*Lt(t,.9,5.1),{face:t==null?void 0:vp(t),lighting:vp(s),blur:vp(r),overall:vp(o),overallFloat:o}}async getTotalBytesUsage(){await bx();const e=gg;return e instanceof Wh?e.memory().numBytesAllocatedInGPU:Sf().numBytes}}p1([Jr()],Ry.prototype,"extractFaceAndCluster",1);p1([Jr()],Ry.prototype,"extractCullingData",1);p1([Jr()],Ry.prototype,"getLightingScoreAndParams",1);function dk(n,e){const[t,s]=ZO([n.width,n.height],e);return eF(n,t,s)}u(dk,"getDownsizedBitmap");function vp(n){return Lt(Math.round(n*10)/10,1,5)}u(vp,"clampRoundScore");Ry.broadcast();
//# sourceMappingURL=culler.worker-Bj9fy61m.js.map
